{
  "swagger": "2.0",
  "info": {
    "title": "API V1",
    "version": "v1",
    "description": "For update bin/rake rswag:specs:swaggerize"
  },
  "paths": {
    "/api/v1/auth/guests": {
      "post": {
        "summary": "Register Guest, get guest jwt",
        "tags": [
          "Auth::Guest"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": false,
            "description": "Guest jwt"
          },
          {
            "name": "visitor_id",
            "in": "query",
            "type": "string",
            "required": true,
            "description": "visitor_id from cookies"
          },
          {
            "name": "public_display_name",
            "in": "query",
            "type": "string",
            "required": true,
            "description": "Encoded auth token"
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      },
      "put": {
        "summary": "Update guest jwt using guest refresh jwt",
        "tags": [
          "Auth::Guest"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true,
            "description": "Guest refresh jwt"
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/auth/organizations": {
      "post": {
        "summary": "Organization authenticate",
        "tags": [
          "Auth::Organization"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "secret_key": {
                  "type": "string",
                  "example": "abcdef"
                },
                "secret_token": {
                  "type": "string",
                  "example": "abcdef"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/auth/passwords": {
      "post": {
        "summary": "Send reset instructions",
        "tags": [
          "Auth::User"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "user": {
                  "type": "object",
                  "properties": {
                    "email": {
                      "type": "string",
                      "example": "user1@example.com"
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/auth/registrations": {
      "post": {
        "summary": "User registration",
        "tags": [
          "Auth::User"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "user": {
                  "type": "object",
                  "properties": {
                    "first_name": {
                      "type": "string",
                      "example": "John"
                    },
                    "last_name": {
                      "type": "string",
                      "example": "Doe"
                    },
                    "birthdate": {
                      "type": "string",
                      "example": "12/08/2000"
                    },
                    "gender": {
                      "type": "string",
                      "example": "male"
                    },
                    "email": {
                      "type": "string",
                      "example": "user1@example.com"
                    },
                    "password": {
                      "type": "string",
                      "example": "abcdef"
                    }
                  }
                },
                "signup_token": {
                  "type": "object",
                  "properties": {
                    "token": {
                      "type": "string",
                      "example": "abcdefg"
                    }
                  }
                },
                "ref_url": {
                  "type": "string",
                  "example": "/unitedmasters/um-free-game-926?recording_id=177"
                },
                "ref_model": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "177"
                    },
                    "type": {
                      "type": "string",
                      "example": "Recording"
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/auth/signup_tokens/{id}": {
      "get": {
        "summary": "Validate Signup Token",
        "tags": [
          "Auth::User"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/auth/usage_tokens": {
      "post": {
        "summary": "Create Usage Token",
        "tags": [
          "Auth::Usage"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": false,
            "description": "Encoded auth token"
          },
          {
            "name": "visitor_id",
            "in": "query",
            "type": "string",
            "required": false,
            "description": "Visitor id from cookie, can be sent in cookie too. Required to be present in query or in cookie."
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/auth/user_tokens": {
      "get": {
        "summary": "Refresh Auth User Token",
        "tags": [
          "Auth::User"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true,
            "description": "Encoded auth token"
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/auth/users": {
      "post": {
        "summary": "User authenticate",
        "tags": [
          "Auth::User"
        ],
        "description": "Use Authorization header from organization if user password is blank",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": false
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string",
                  "example": "user1@example.com"
                },
                "password": {
                  "type": "string",
                  "example": "abcdef"
                },
                "ref_url": {
                  "type": "string",
                  "example": "/unitedmasters/um-free-game-926?recording_id=177"
                },
                "ref_model": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "example": "177"
                    },
                    "type": {
                      "type": "string",
                      "example": "Recording"
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      },
      "delete": {
        "summary": "Sign out user",
        "tags": [
          "Auth::User"
        ],
        "description": "Use Authorization header from organization if user password is blank",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/auth/websocket_tokens": {
      "post": {
        "summary": "Create Websocket Token",
        "tags": [
          "Auth::WebsocketToken"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": false,
            "description": "User or Guest jwt. Optional."
          },
          {
            "name": "visitor_id",
            "in": "query",
            "type": "string",
            "required": true,
            "description": "Visitor id from cookie. Required."
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/blog/posts/{post_id}/comments": {
      "get": {
        "summary": "All post comments",
        "tags": [
          "Blog::Comments"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": false
          },
          {
            "name": "post_id",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "user_id",
            "in": "query",
            "type": "string",
            "required": false
          },
          {
            "name": "commentable_type",
            "in": "query",
            "type": "string",
            "required": false,
            "description": "Available types: 'Blog::Post', 'Blog::Comment'"
          },
          {
            "name": "commentable_id",
            "in": "query",
            "type": "string",
            "required": false
          },
          {
            "name": "order_by",
            "in": "query",
            "type": "string",
            "description": "Valid values are: 'created_at', 'updated_at'. Default: 'updated_at'"
          },
          {
            "name": "order",
            "in": "query",
            "type": "string",
            "description": "Valid values are: 'asc', 'desc'. Default: 'desc'"
          },
          {
            "name": "offset",
            "in": "query",
            "type": "integer"
          },
          {
            "name": "limit",
            "in": "query",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      },
      "post": {
        "summary": "Create new comment",
        "tags": [
          "Blog::Comments"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "post_id",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "comment",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "body"
              ],
              "properties": {
                "commentable_type": {
                  "type": "string",
                  "example": "Blog::Comment"
                },
                "commentable_id": {
                  "type": "string",
                  "example": "1"
                },
                "body": {
                  "type": "text",
                  "example": "Lorem Ipsum Dolores Sit Amet"
                },
                "featured_link_preview_id": {
                  "type": "string",
                  "example": "1"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/blog/comments": {
      "get": {
        "summary": "All comments",
        "tags": [
          "Blog::Comments"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": false
          },
          {
            "name": "post_id",
            "in": "query",
            "type": "string",
            "required": false
          },
          {
            "name": "user_id",
            "in": "query",
            "type": "string",
            "required": false
          },
          {
            "name": "commentable_type",
            "in": "query",
            "type": "string",
            "required": false,
            "description": "Available types: 'Blog::Post', 'Blog::Comment'"
          },
          {
            "name": "commentable_id",
            "in": "query",
            "type": "string",
            "required": false
          },
          {
            "name": "order_by",
            "in": "query",
            "type": "string",
            "description": "Valid values are: 'created_at', 'updated_at'. Default: 'updated_at'"
          },
          {
            "name": "order",
            "in": "query",
            "type": "string",
            "description": "Valid values are: 'asc', 'desc'. Default: 'desc'"
          },
          {
            "name": "offset",
            "in": "query",
            "type": "integer"
          },
          {
            "name": "limit",
            "in": "query",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      },
      "post": {
        "summary": "Create new comment",
        "tags": [
          "Blog::Comments"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "post_id",
            "in": "query",
            "type": "string",
            "required": false
          },
          {
            "name": "comment",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "body"
              ],
              "properties": {
                "commentable_type": {
                  "type": "string",
                  "example": "Blog::Comment"
                },
                "commentable_id": {
                  "type": "string",
                  "example": "1"
                },
                "body": {
                  "type": "text",
                  "example": "Lorem Ipsum Dolores Sit Amet"
                },
                "featured_link_preview_id": {
                  "type": "string",
                  "example": "1"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/blog/comments/{id}": {
      "get": {
        "summary": "Get comment info",
        "tags": [
          "Blog::Comments"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": false,
            "description": "Is required if post status is hidden or draft"
          },
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      },
      "put": {
        "summary": "Update comment",
        "tags": [
          "Blog::Comments"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "comment",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "body"
              ],
              "properties": {
                "body": {
                  "type": "text",
                  "example": "Lorem Ipsum Dolores Sit Amet"
                },
                "featured_link_preview_id": {
                  "type": "string",
                  "example": "1"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      },
      "delete": {
        "summary": "Delete comment",
        "tags": [
          "Blog::Comments"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/blog/images": {
      "get": {
        "summary": "Get images for blog post",
        "tags": [
          "Blog::Images"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": false
          },
          {
            "name": "post_id",
            "in": "query",
            "type": "string",
            "required": true
          },
          {
            "name": "order_by",
            "in": "query",
            "type": "string",
            "description": "Valid values are: 'created_at', 'updated_at'. Default: 'updated_at'"
          },
          {
            "name": "order",
            "in": "query",
            "type": "string",
            "description": "Valid values are: 'asc', 'desc'. Default: 'desc'"
          },
          {
            "name": "offset",
            "in": "query",
            "type": "integer"
          },
          {
            "name": "limit",
            "in": "query",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      },
      "post": {
        "summary": "Create image",
        "tags": [
          "Blog::Images"
        ],
        "consumes": [
          "multipart/form-data"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "image",
            "in": "formData",
            "type": "file",
            "required": true
          },
          {
            "name": "organization_id",
            "in": "formData",
            "type": "string",
            "required": true
          },
          {
            "name": "blog_post_id",
            "in": "formData",
            "type": "string",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/blog/posts/{post_id}/images": {
      "get": {
        "summary": "Get images for blog post",
        "tags": [
          "Blog::Images"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": false
          },
          {
            "name": "post_id",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "order_by",
            "in": "query",
            "type": "string",
            "description": "Valid values are: 'created_at', 'updated_at'. Default: 'updated_at'"
          },
          {
            "name": "order",
            "in": "query",
            "type": "string",
            "description": "Valid values are: 'asc', 'desc'. Default: 'desc'"
          },
          {
            "name": "offset",
            "in": "query",
            "type": "integer"
          },
          {
            "name": "limit",
            "in": "query",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/blog/images/{id}": {
      "get": {
        "summary": "Show image info",
        "tags": [
          "Blog::Images"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": false
          },
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      },
      "put": {
        "summary": "Update image",
        "tags": [
          "Blog::Images"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "blog_post_id",
            "in": "query",
            "type": "string",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      },
      "delete": {
        "summary": "Destroy image",
        "tags": [
          "Blog::Images"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/blog/link_previews": {
      "get": {
        "summary": "Get all post or comment LinkPreviews",
        "tags": [
          "Blog::LinkPreviews"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "resource_type",
            "in": "query",
            "type": "string",
            "required": true,
            "description": "Available values are: \"Blog::Post\", \"Blog::Comment\""
          },
          {
            "name": "resource_id",
            "in": "query",
            "type": "string",
            "required": false
          },
          {
            "name": "resource_slug",
            "in": "query",
            "type": "string",
            "required": false
          },
          {
            "name": "order_by",
            "in": "query",
            "type": "string",
            "description": "Valid values are: 'created_at', 'updated_at'. Default: 'updated_at'"
          },
          {
            "name": "order",
            "in": "query",
            "type": "string",
            "description": "Valid values are: 'asc', 'desc'. Default: 'desc'"
          },
          {
            "name": "offset",
            "in": "query",
            "type": "integer"
          },
          {
            "name": "limit",
            "in": "query",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        },
        "description": "Get all post or comment LinkPreviews"
      },
      "post": {
        "summary": "New LinkPreview",
        "tags": [
          "Blog::LinkPreviews"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "url",
            "in": "query",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        },
        "description": ""
      }
    },
    "/api/v1/blog/link_previews/{id}": {
      "get": {
        "summary": "Get LinkPreview info",
        "tags": [
          "Blog::LinkPreviews"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        },
        "description": ""
      }
    },
    "/api/v1/blog/link_previews/{id}/parse": {
      "get": {
        "summary": "Force parse LinkPreview info",
        "tags": [
          "Blog::LinkPreviews"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        },
        "description": ""
      }
    },
    "/api/v1/blog/posts": {
      "get": {
        "summary": "All posts",
        "tags": [
          "Blog::Posts"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": false
          },
          {
            "name": "resource_type",
            "in": "query",
            "type": "string",
            "required": false,
            "description": "Available values are: \"User\", \"Channel\", \"Organization\""
          },
          {
            "name": "resource_id",
            "in": "query",
            "type": "string",
            "required": false
          },
          {
            "name": "resource_slug",
            "in": "query",
            "type": "string",
            "required": false
          },
          {
            "name": "status",
            "in": "query",
            "type": "string",
            "required": false,
            "description": "Available statuses are: draft, published, hidden, archived. For statuses other than published Authorization is required."
          },
          {
            "name": "date_from",
            "in": "query",
            "type": "string",
            "required": false
          },
          {
            "name": "date_to",
            "in": "query",
            "type": "string",
            "required": false
          },
          {
            "name": "scope",
            "in": "query",
            "type": "string",
            "required": false,
            "description": "Available scopes are: 'read', 'edit'. Default: 'read'"
          },
          {
            "name": "order_by",
            "in": "query",
            "type": "string",
            "description": "Valid values are: 'created_at', 'updated_at', 'published_at'. Default: 'created_at'"
          },
          {
            "name": "order",
            "in": "query",
            "type": "string",
            "description": "Valid values are: 'asc', 'desc'. Default: 'desc'"
          },
          {
            "name": "offset",
            "in": "query",
            "type": "integer"
          },
          {
            "name": "limit",
            "in": "query",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      },
      "post": {
        "summary": "Create new post",
        "tags": [
          "Blog::Posts"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "post",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "channel_id",
                "title",
                "body"
              ],
              "properties": {
                "channel_id": {
                  "type": "string",
                  "example": "1"
                },
                "title": {
                  "type": "string",
                  "example": "Hello World!"
                },
                "body": {
                  "type": "text",
                  "example": "Lorem Ipsum Dolores Sit Amet"
                },
                "status": {
                  "type": "string",
                  "example": "published"
                },
                "tag_list": {
                  "type": "string",
                  "example": "Maecenas,ut,massa,quis,augue"
                }
              }
            }
          },
          {
            "name": "image_id",
            "in": "query",
            "type": "array",
            "collectionFormat": "csv",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "featured_link_preview_id",
            "in": "query",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/blog/posts/{id}": {
      "get": {
        "summary": "Get Post info",
        "tags": [
          "Blog::Posts"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": false,
            "description": "Is required if post status is hidden, draft or archived"
          },
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "slug",
            "in": "query",
            "type": "string",
            "required": false,
            "description": "Set slug to \"1\" if you pass slug in id param"
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      },
      "put": {
        "summary": "Update post",
        "tags": [
          "Blog::Posts"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "slug",
            "in": "query",
            "type": "string",
            "required": false,
            "description": "Set slug to \"1\" if you pass slug in id param"
          },
          {
            "name": "post",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "channel_id",
                "title",
                "body"
              ],
              "properties": {
                "channel_id": {
                  "type": "string",
                  "example": "1"
                },
                "title": {
                  "type": "string",
                  "example": "Hello World!"
                },
                "body": {
                  "type": "text",
                  "example": "Lorem Ipsum Dolores Sit Amet"
                },
                "status": {
                  "type": "string",
                  "example": "published"
                },
                "tag_list": {
                  "type": "string",
                  "example": "Maecenas,ut,massa,quis,augue"
                }
              }
            }
          },
          {
            "name": "image_id",
            "in": "query",
            "type": "array",
            "collectionFormat": "csv",
            "items": {
              "type": "string"
            }
          },
          {
            "name": "featured_link_preview_id",
            "in": "query",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      },
      "delete": {
        "summary": "Delete Post",
        "tags": [
          "Blog::Posts"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "slug",
            "in": "query",
            "type": "string",
            "required": false,
            "description": "Set slug to \"1\" if you pass slug in id param"
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/blog/posts/{id}/vote": {
      "post": {
        "summary": "Toggle post like",
        "tags": [
          "Blog::Posts"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "slug",
            "in": "query",
            "type": "string",
            "required": false,
            "description": "Set slug to \"1\" if you pass slug in id param"
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/guest/rooms": {
      "get": {
        "summary": "Get running Room info",
        "tags": [
          "Guest::Rooms"
        ],
        "description": "",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/guest/rooms/room_existence": {
      "get": {
        "summary": "Check Room existence",
        "tags": [
          "Guest::Rooms"
        ],
        "description": "",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/guest/rooms/join_interactive_by_token": {
      "post": {
        "summary": "Join Room by token",
        "tags": [
          "Guest::Rooms"
        ],
        "description": "",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "token",
            "in": "query",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/organization/channels": {
      "get": {
        "summary": "All Channels",
        "tags": [
          "Organization::Channels"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/organization/channels/{id}": {
      "get": {
        "summary": "Get Channel",
        "tags": [
          "Organization::Channels"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      },
      "put": {
        "summary": "Update Channel",
        "tags": [
          "Organization::Channels"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": false
          },
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "channel": {
                  "type": "object",
                  "properties": {
                    "title": {
                      "type": "string",
                      "example": "new title"
                    },
                    "description": {
                      "type": "string",
                      "example": "new Description"
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      },
      "delete": {
        "summary": "Delete Channel",
        "tags": [
          "Organization::Channels"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/organization/channels/": {
      "post": {
        "summary": "Create Channel",
        "tags": [
          "Organization::Channels"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": false
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "channel": {
                  "type": "object",
                  "properties": {
                    "title": {
                      "type": "string",
                      "example": "My first Organization channel"
                    },
                    "description": {
                      "type": "string",
                      "example": "Description"
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/organization/mind_body/staffs/{id}": {
      "get": {
        "summary": "Get Staff",
        "tags": [
          "Organization::MindBody::Staffs"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      },
      "put": {
        "summary": "Update Staff",
        "tags": [
          "Organization::MindBody::Staffs"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "user_id",
            "in": "query",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/organization/organizations/{organization_id}/organization_memberships": {
      "get": {
        "summary": "All OrganizationMemberships for organization",
        "tags": [
          "Organization::OrganizationMemberships"
        ],
        "description": "",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "organization_id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "order_by",
            "in": "query",
            "type": "string",
            "description": "Valid values are: 'id', 'created_at', 'updated_at'. Default: 'created_at'"
          },
          {
            "name": "order",
            "in": "query",
            "type": "string",
            "description": "Valid values are: 'asc', 'desc'. Default: 'asc'"
          },
          {
            "name": "offset",
            "in": "query",
            "type": "integer"
          },
          {
            "name": "limit",
            "in": "query",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/organization/organization_memberships/{id}": {
      "get": {
        "summary": "Get OrganizationMembership info",
        "tags": [
          "Organization::OrganizationMemberships"
        ],
        "description": "",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/organization/partner/subscriptions": {
      "get": {
        "summary": "All Partner Subscriptions",
        "tags": [
          "Organization::Partner::Subscriptions"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "foreign_subscription_id",
            "in": "query",
            "type": "string",
            "required": false
          },
          {
            "name": "partner_plan_id",
            "in": "query",
            "type": "string",
            "required": false
          },
          {
            "name": "free_subscription_id",
            "in": "query",
            "type": "string",
            "required": false
          },
          {
            "name": "foreign_customer_email",
            "in": "query",
            "type": "string",
            "required": false
          },
          {
            "name": "order",
            "in": "query",
            "type": "string",
            "required": false,
            "description": "asc, desc"
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/organization/sessions": {
      "get": {
        "summary": "All Sessions",
        "tags": [
          "Organization::Sessions"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/organization/sessions/{id}": {
      "get": {
        "summary": "Get Session",
        "tags": [
          "Organization::Sessions"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      },
      "put": {
        "summary": "Update Session",
        "tags": [
          "Organization::Sessions"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": false
          },
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "channel": {
                  "type": "object",
                  "properties": {
                    "title": {
                      "type": "string",
                      "example": "new title"
                    },
                    "description": {
                      "type": "string",
                      "example": "new Description"
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      },
      "delete": {
        "summary": "Delete Session",
        "tags": [
          "Organization::Sessions"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/organization/sessions/": {
      "post": {
        "summary": "Create Session",
        "tags": [
          "Organization::Sessions"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": false
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "user_id": {
                  "type": "integer",
                  "example": 2
                },
                "channel_id": {
                  "type": "integer",
                  "example": 49
                },
                "session": {
                  "type": "object",
                  "properties": {
                    "title": {
                      "type": "string",
                      "example": "My first Organization channel"
                    },
                    "description": {
                      "type": "string",
                      "example": "Description"
                    },
                    "record": {
                      "type": "boolean",
                      "example": true
                    },
                    "allow_chat": {
                      "type": "boolean",
                      "example": true
                    },
                    "duration": {
                      "type": "integer",
                      "example": 30
                    },
                    "pre_time": {
                      "type": "integer",
                      "example": 0
                    },
                    "autostart": {
                      "type": "boolean",
                      "example": true
                    },
                    "device_type": {
                      "type": "string",
                      "example": "studio_equipment"
                    },
                    "service_type": {
                      "type": "string",
                      "example": "rtmp"
                    },
                    "start_at": {
                      "type": "datetime",
                      "example": "2020-12-01 22:17:32 +0200"
                    },
                    "ffmpegservice_account_id": {
                      "type": "integer",
                      "example": 1841
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/organization/users": {
      "get": {
        "summary": "All Users",
        "tags": [
          "Organization::Users"
        ],
        "description": "",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "order_by",
            "in": "query",
            "type": "string",
            "description": "Valid values are: 'id', 'created_at', 'updated_at'. Default: 'created_at'"
          },
          {
            "name": "order",
            "in": "query",
            "type": "string",
            "description": "Valid values are: 'asc', 'desc'. Default: 'asc'"
          },
          {
            "name": "offset",
            "in": "query",
            "type": "integer"
          },
          {
            "name": "limit",
            "in": "query",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/organization/users/{id}": {
      "get": {
        "summary": "Get User info",
        "tags": [
          "Organization::Users"
        ],
        "description": "",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/organization/users/": {
      "post": {
        "summary": "Create User",
        "tags": [
          "Organization::Users"
        ],
        "description": "",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "user": {
                  "type": "object",
                  "properties": {
                    "email": {
                      "type": "string",
                      "example": "organiztaion-user1@unite.live"
                    },
                    "password": {
                      "type": "string",
                      "example": "password"
                    },
                    "birthdate": {
                      "type": "string",
                      "example": "01.01.1990"
                    },
                    "gender": {
                      "type": "string",
                      "example": "male"
                    },
                    "first_name": {
                      "type": "string",
                      "example": "APiTest"
                    },
                    "last_name": {
                      "type": "string",
                      "example": "User"
                    }
                  }
                },
                "organization_membership": {
                  "type": "object",
                  "properties": {
                    "role": {
                      "type": "string",
                      "example": "administrator"
                    },
                    "position": {
                      "type": "string",
                      "example": "Tech Lead"
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/pages/footer": {
      "get": {
        "summary": "Get footer info",
        "tags": [
          "Pages::Footer"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/pages/header": {
      "get": {
        "summary": "Get header info",
        "tags": [
          "Pages::Header"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/public/ban_reasons": {
      "get": {
        "summary": "Get BanReasons list",
        "tags": [
          "Public::BanReasons"
        ],
        "parameters": [
          {
            "name": "order_by",
            "in": "query",
            "type": "string",
            "description": "Valid values are: 'id', 'name', 'created_at', 'updated_at'. Default: 'created_at'"
          },
          {
            "name": "order",
            "in": "query",
            "type": "string",
            "description": "Valid values are: 'asc', 'desc'. Default: 'asc'"
          },
          {
            "name": "offset",
            "in": "query",
            "type": "integer"
          },
          {
            "name": "limit",
            "in": "query",
            "type": "integer"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/public/ban_reasons/{id}": {
      "get": {
        "summary": "Get BanReason info",
        "tags": [
          "Public::BanReasons"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/public/calendar/sessions": {
      "get": {
        "summary": "List all sessions",
        "tags": [
          "Public::Calendar::Sessions"
        ],
        "parameters": [
          {
            "name": "channel_id",
            "in": "query",
            "type": "integer"
          },
          {
            "name": "start_at_from",
            "in": "query",
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "start_at_to",
            "in": "query",
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "end_at_from",
            "in": "query",
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "end_at_to",
            "in": "query",
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "order",
            "in": "query",
            "type": "string",
            "description": "Valid values are: 'asc', 'desc'. Default: 'asc'"
          },
          {
            "name": "limit",
            "in": "query",
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "type": "integer"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/public/calendar/videos": {
      "get": {
        "summary": "Get video info",
        "tags": [
          "Public::Calendar::Videos"
        ],
        "parameters": [
          {
            "name": "channel_id",
            "in": "query",
            "type": "integer"
          },
          {
            "name": "start_at_from",
            "in": "query",
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "start_at_to",
            "in": "query",
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "end_at_from",
            "in": "query",
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "end_at_to",
            "in": "query",
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "order",
            "in": "query",
            "type": "string",
            "description": "Valid values are: 'asc', 'desc'. Default: 'asc'"
          },
          {
            "name": "limit",
            "in": "query",
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "type": "integer"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/public/channels/{channel_id}/channel_members": {
      "get": {
        "summary": "Get Channel Members info",
        "tags": [
          "Public::ChannelMembers"
        ],
        "parameters": [
          {
            "name": "channel_id",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "scope",
            "in": "query",
            "type": "string",
            "description": "Possible values: presenters, blog"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/public/channels/{channel_id}/channel_reviews": {
      "get": {
        "summary": "Get Channel Reviews",
        "tags": [
          "Public::ChannelReviews"
        ],
        "parameters": [
          {
            "name": "channel_id",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/public/channels/{channel_id}/channel_subscription_plans": {
      "get": {
        "summary": "Get Channel Subscription Plans info",
        "tags": [
          "Public::ChannelSubscriptionPlans"
        ],
        "parameters": [
          {
            "name": "channel_id",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/public/channels/{channel_id}/channel_subscription_plans/{id}": {
      "get": {
        "summary": "Get Plan info",
        "tags": [
          "Public::ChannelSubscriptionPlans"
        ],
        "parameters": [
          {
            "name": "channel_id",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/public/channels": {
      "get": {
        "summary": "Get channels info",
        "tags": [
          "Public::Channels"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          {
            "name": "show_on_home",
            "in": "query",
            "type": "string",
            "required": false
          },
          {
            "name": "organization_id",
            "in": "query",
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          {
            "name": "order_by",
            "in": "query",
            "type": "string",
            "description": "Valid values are: 'created_at', 'updated_at', 'show_on_home', 'listed_at'. Default: 'created_at'"
          },
          {
            "name": "order",
            "in": "query",
            "type": "string",
            "description": "Valid values are: 'asc', 'desc'. Default: 'desc'"
          },
          {
            "name": "limit",
            "in": "query",
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "type": "integer"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/public/channels/{id}": {
      "get": {
        "summary": "Get channel info",
        "tags": [
          "Public::Channels"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/public/comments": {
      "get": {
        "summary": "Get model comments",
        "tags": [
          "Public::Comments"
        ],
        "parameters": [
          {
            "name": "commentable_type",
            "in": "query",
            "type": "string",
            "required": true,
            "description": "Valid values are: 'Organization', 'Channel', 'Session', 'Video', 'Recording', 'Comment'"
          },
          {
            "name": "commentable_id",
            "in": "query",
            "type": "integer",
            "required": true
          },
          {
            "name": "order",
            "in": "query",
            "type": "string",
            "description": "Valid values are: 'asc', 'desc'. Default: 'asc'"
          },
          {
            "name": "offset",
            "in": "query",
            "type": "integer"
          },
          {
            "name": "limit",
            "in": "query",
            "type": "integer"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/public/comments/{commentable_type}/{commentable_id}": {
      "get": {
        "summary": "Get model comments",
        "tags": [
          "Public::Comments"
        ],
        "parameters": [
          {
            "name": "commentable_type",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "Valid values are: 'Organization', 'Channel', 'Session', 'Video', 'Recording', 'Comment'"
          },
          {
            "name": "commentable_id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "order",
            "in": "query",
            "type": "string",
            "description": "Valid values are: 'asc', 'desc'. Default: 'asc'"
          },
          {
            "name": "offset",
            "in": "query",
            "type": "integer"
          },
          {
            "name": "limit",
            "in": "query",
            "type": "integer"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "api/v1/public/documents": {
      "get": {
        "summary": "Get documents",
        "tags": [
          "Public::Documents"
        ],
        "parameters": [
          {
            "name": "channel_id",
            "in": "query",
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "type": "integer"
          },
          {
            "name": "limit",
            "in": "query",
            "type": "integer"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "api/v1/public/documents/{document_id}": {
      "get": {
        "summary": "Get document",
        "tags": [
          "Public::Documents"
        ],
        "parameters": [
          {
            "name": "document_id",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/public/followers/{followable_type}/{followable_id}": {
      "get": {
        "summary": "Get followers",
        "tags": [
          "Public::Followers"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": false
          },
          {
            "name": "followable_type",
            "in": "path",
            "type": "string",
            "description": "User/Channel/Organization",
            "required": true
          },
          {
            "name": "followable_id",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "order_by",
            "in": "query",
            "type": "string",
            "description": "Valid values are: 'created_at', 'updated_at'. Default: 'created_at'"
          },
          {
            "name": "order",
            "in": "query",
            "type": "string",
            "description": "Valid values are: 'asc', 'desc'. Default: 'desc'"
          },
          {
            "name": "limit",
            "in": "query",
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "type": "integer"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/public/follows/{follower_type}/{follower_id}": {
      "get": {
        "summary": "Get followings",
        "tags": [
          "Public::Follows"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "follower_type",
            "in": "path",
            "type": "string",
            "description": "Only \"user\" is available at the moment",
            "required": true
          },
          {
            "name": "follower_id",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "followable_type",
            "in": "query",
            "type": "string",
            "description": "'User', 'Channel' or 'Organization'"
          },
          {
            "name": "order_by",
            "in": "query",
            "type": "string",
            "description": "Valid values are: 'created_at', 'updated_at'. Default: 'created_at'"
          },
          {
            "name": "order",
            "in": "query",
            "type": "string",
            "description": "Valid values are: 'asc', 'desc'. Default: 'desc'"
          },
          {
            "name": "limit",
            "in": "query",
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "type": "integer"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/public/home/organizations": {
      "get": {
        "summary": "List all organizations for homepage",
        "tags": [
          "Public::Home::Organizations"
        ],
        "parameters": [
          {
            "name": "order_by",
            "in": "query",
            "type": "string",
            "description": "Valid values are: 'created_at', 'views_count'. Default: 'views_count'"
          },
          {
            "name": "order",
            "in": "query",
            "type": "string",
            "description": "Valid values are: 'asc', 'desc'. Default: 'desc'"
          },
          {
            "name": "limit",
            "in": "query",
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "type": "integer"
          },
          {
            "name": "promo_weight",
            "in": "query",
            "type": "integer"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/public/interactive_access_tokens/{id}": {
      "get": {
        "summary": "Get InteractiveAccessToken info",
        "tags": [
          "Public::InteractiveAccessTokens"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "Token value"
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/public/marketing_tools/opt_in_modal_submits": {
      "post": {
        "summary": "Create Opt-in Modal Submit",
        "tags": [
          "Public::MarketingTools::OptInModalSubmits"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": false
          },
          {
            "name": "opt_in_modal_id",
            "in": "query",
            "type": "string",
            "required": true
          },
          {
            "name": "data",
            "in": "query",
            "type": "string",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/public/marketing_tools/opt_in_modals": {
      "get": {
        "summary": "List all Opt-in Modals",
        "tags": [
          "Public::MarketingTools::OptInModals"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": false
          },
          {
            "name": "limit",
            "in": "query",
            "type": "string"
          },
          {
            "name": "offset",
            "in": "query",
            "type": "string"
          },
          {
            "name": "order_by",
            "in": "query",
            "type": "string",
            "description": "Valid values are: 'title', 'created_at'. Default: 'title'"
          },
          {
            "name": "order",
            "in": "query",
            "type": "string",
            "description": "Valid values are: 'asc', 'desc'. Default: 'desc'"
          },
          {
            "name": "model_type",
            "in": "query",
            "type": "string",
            "required": true,
            "description": "Valid values are: 'Channel', 'Video', 'Recording', 'Session'"
          },
          {
            "name": "model_id",
            "in": "query",
            "type": "string",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/public/marketing_tools/opt_in_modals/{id}/track_view": {
      "put": {
        "summary": "Track Opt-in Modal view",
        "tags": [
          "Public::MarketingTools::OptInModals"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": false
          },
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/public/mind_body/class_schedules": {
      "get": {
        "summary": "ClassSchedules",
        "tags": [
          "Public::MindBody::ClassSchedules"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/public/organizations/{organization_id}/organization_members": {
      "get": {
        "summary": "Get Organization Members info",
        "tags": [
          "Public::OrganizationMembers"
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "scope",
            "in": "query",
            "type": "string",
            "description": "Possible values: presenters, blog"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/public/organization_memberships": {
      "get": {
        "summary": "Get organization memberships",
        "tags": [
          "Public::OrganizationMemberships"
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "query",
            "type": "string"
          },
          {
            "name": "order_by",
            "in": "query",
            "type": "string",
            "description": "Valid values are: 'id', 'created_at', 'updated_at'. Default: 'created_at'"
          },
          {
            "name": "order",
            "in": "query",
            "type": "string",
            "description": "Valid values are: 'asc', 'desc'. Default: 'asc'"
          },
          {
            "name": "limit",
            "in": "query",
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "type": "integer"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/public/organizations/{organization_id}/organization_memberships": {
      "get": {
        "summary": "Get organization memberships",
        "tags": [
          "Public::Organizations"
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "order_by",
            "in": "query",
            "type": "string",
            "description": "Valid values are: 'id', 'created_at', 'updated_at'. Default: 'created_at'"
          },
          {
            "name": "order",
            "in": "query",
            "type": "string",
            "description": "Valid values are: 'asc', 'desc'. Default: 'asc'"
          },
          {
            "name": "limit",
            "in": "query",
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "type": "integer"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/public/organizations": {
      "get": {
        "summary": "List all organizations",
        "tags": [
          "Public::Organizations"
        ],
        "parameters": [
          {
            "name": "show_on_home",
            "in": "query",
            "type": "boolean",
            "required": false
          },
          {
            "name": "order_by",
            "in": "query",
            "type": "string",
            "description": "Valid values are: 'created_at', 'views_count'. Default: 'views_count'"
          },
          {
            "name": "order",
            "in": "query",
            "type": "string",
            "description": "Valid values are: 'asc', 'desc'. Default: 'desc'"
          },
          {
            "name": "limit",
            "in": "query",
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "type": "integer"
          },
          {
            "name": "promo_weight",
            "in": "query",
            "type": "integer"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/public/organizations/{id}": {
      "get": {
        "summary": "Get organization info",
        "tags": [
          "Public::Organizations"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/public/organizations/{id}/default_location": {
      "get": {
        "summary": "Get organization default_location for current user",
        "tags": [
          "Public::Organizations"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": false
          },
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/public/page_builder/model_templates/template": {
      "get": {
        "summary": "Show Model Template",
        "tags": [
          "Public::PageBuilder::ModelTemplates"
        ],
        "parameters": [
          {
            "name": "model_id",
            "in": "query",
            "type": "string",
            "required": true
          },
          {
            "name": "model_type",
            "in": "query",
            "type": "string",
            "required": true,
            "description": "Valid values are: 'User', 'Channel', 'Organization'"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/public/page_builder/system_templates/template": {
      "get": {
        "summary": "Show System Template",
        "tags": [
          "Public::PageBuilder::SystemTemplates"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "type": "string",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/public/plan_packages": {
      "get": {
        "summary": "Get plan packages info",
        "tags": [
          "Public::PlanPackages"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/public/poll/polls/{id}": {
      "get": {
        "summary": "Get poll",
        "tags": [
          "Public::Poll::Polls"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/public/recordings": {
      "get": {
        "summary": "Get recording info",
        "tags": [
          "Public::Recordings"
        ],
        "parameters": [
          {
            "name": "channel_id",
            "in": "query",
            "type": "integer"
          },
          {
            "name": "organization_id",
            "in": "query",
            "type": "integer"
          },
          {
            "name": "order_by",
            "in": "query",
            "type": "string",
            "description": "Valid values are: 'id', 'duration', 'created_at', 'updated_at'. Default: 'created_at'"
          },
          {
            "name": "order",
            "in": "query",
            "type": "string",
            "description": "Valid values are: 'asc', 'desc'. Default: 'asc'"
          },
          {
            "name": "created_at_from",
            "in": "query",
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "created_at_to",
            "in": "query",
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "offset",
            "in": "query",
            "type": "integer"
          },
          {
            "name": "limit",
            "in": "query",
            "type": "integer"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/public/recordings/{id}": {
      "get": {
        "summary": "Get recording details",
        "tags": [
          "Public::Recordings"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/public/recordings/{recording_id}/embeds": {
      "get": {
        "summary": "Get embeds list",
        "tags": [
          "Public::Recordings"
        ],
        "parameters": [
          {
            "name": "recording_id",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/public/reviews": {
      "get": {
        "summary": "Get model reviews",
        "tags": [
          "Public::Reviews"
        ],
        "parameters": [
          {
            "name": "reviewable_type",
            "in": "query",
            "type": "string",
            "required": true,
            "description": "Valid values are: 'Organization', 'Channel', 'Session', 'Video', 'Recording'"
          },
          {
            "name": "reviewable_id",
            "in": "query",
            "type": "integer",
            "required": true
          },
          {
            "name": "created_at_from",
            "in": "query",
            "type": "string",
            "description": "Example: \"2021-09-29T00:00:00.000+00:00\""
          },
          {
            "name": "created_at_to",
            "in": "query",
            "type": "string",
            "description": "Example: \"2021-09-30T23:59:59.999+00:00\""
          },
          {
            "name": "order",
            "in": "query",
            "type": "string",
            "description": "Valid values are: 'asc', 'desc'. Default: 'asc'"
          },
          {
            "name": "offset",
            "in": "query",
            "type": "integer"
          },
          {
            "name": "limit",
            "in": "query",
            "type": "integer"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/public/reviews/{reviewable_type}/{reviewable_id}": {
      "get": {
        "summary": "Get model reviews",
        "tags": [
          "Public::Reviews"
        ],
        "parameters": [
          {
            "name": "reviewable_type",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "Valid values are: 'Organization', 'Channel', 'Session', 'Video', 'Recording'"
          },
          {
            "name": "reviewable_id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "order",
            "in": "query",
            "type": "string",
            "description": "Valid values are: 'asc', 'desc'. Default: 'asc'"
          },
          {
            "name": "offset",
            "in": "query",
            "type": "integer"
          },
          {
            "name": "limit",
            "in": "query",
            "type": "integer"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/public/search": {
      "get": {
        "summary": "Global Search",
        "tags": [
          "Public::Search"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "type": "string"
          },
          {
            "name": "promo_weight",
            "in": "query",
            "type": "integer"
          },
          {
            "name": "search_by",
            "in": "query",
            "type": "string",
            "description": "Available options: \"title\". Othervise search will be performed through all data"
          },
          {
            "name": "limit",
            "in": "query",
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "type": "integer"
          },
          {
            "name": "order_by",
            "in": "query",
            "type": "string",
            "description": "Valid values are: 'adult', 'age_restrictions', 'archived', 'category_id', 'channel_id', 'channel_type_id', 'created_after', 'created_before', 'deleted', 'duration', 'duration_from', 'duration_to', 'end_after', 'end_at', 'end_before', 'fake', 'featured', 'free', 'immersive_purchase_price', 'listed_at', 'livestream_purchase_price', 'model_created_at', 'organization_id', 'popularity', 'presenter_id', 'private', 'published', 'purchase_price', 'recorded_purchase_price', 'searchable_type', 'show_on_home', 'hide_on_home', 'show_on_profile', 'start_after', 'start_at', 'start_at_and_duration', 'start_before', 'status', 'user_id', 'valid_channels_count', 'views_count', 'visible'. Default: 'adult'"
          },
          {
            "name": "order",
            "in": "query",
            "type": "string",
            "description": "Valid values are: 'asc', 'desc'. Default: 'desc'"
          },
          {
            "name": "adult",
            "in": "query",
            "type": false
          },
          {
            "name": "age_restrictions",
            "in": "query",
            "type": false
          },
          {
            "name": "archived",
            "in": "query",
            "type": false
          },
          {
            "name": "category_id",
            "in": "query",
            "type": false
          },
          {
            "name": "channel_id",
            "in": "query",
            "type": false
          },
          {
            "name": "channel_type_id",
            "in": "query",
            "type": false
          },
          {
            "name": "created_after",
            "in": "query",
            "type": false
          },
          {
            "name": "created_before",
            "in": "query",
            "type": false
          },
          {
            "name": "deleted",
            "in": "query",
            "type": false
          },
          {
            "name": "duration",
            "in": "query",
            "type": false
          },
          {
            "name": "duration_from",
            "in": "query",
            "type": false
          },
          {
            "name": "duration_to",
            "in": "query",
            "type": false
          },
          {
            "name": "end_after",
            "in": "query",
            "type": false
          },
          {
            "name": "end_at",
            "in": "query",
            "type": false
          },
          {
            "name": "end_before",
            "in": "query",
            "type": false
          },
          {
            "name": "fake",
            "in": "query",
            "type": false
          },
          {
            "name": "featured",
            "in": "query",
            "type": false
          },
          {
            "name": "free",
            "in": "query",
            "type": false
          },
          {
            "name": "immersive_purchase_price",
            "in": "query",
            "type": false
          },
          {
            "name": "listed_at",
            "in": "query",
            "type": false
          },
          {
            "name": "livestream_purchase_price",
            "in": "query",
            "type": false
          },
          {
            "name": "model_created_at",
            "in": "query",
            "type": false
          },
          {
            "name": "organization_id",
            "in": "query",
            "type": false
          },
          {
            "name": "popularity",
            "in": "query",
            "type": false
          },
          {
            "name": "presenter_id",
            "in": "query",
            "type": false
          },
          {
            "name": "private",
            "in": "query",
            "type": false
          },
          {
            "name": "published",
            "in": "query",
            "type": false
          },
          {
            "name": "purchase_price",
            "in": "query",
            "type": false
          },
          {
            "name": "recorded_purchase_price",
            "in": "query",
            "type": false
          },
          {
            "name": "searchable_type",
            "in": "query",
            "type": false
          },
          {
            "name": "show_on_home",
            "in": "query",
            "type": false
          },
          {
            "name": "hide_on_home",
            "in": "query",
            "type": false
          },
          {
            "name": "show_on_profile",
            "in": "query",
            "type": false
          },
          {
            "name": "start_after",
            "in": "query",
            "type": false
          },
          {
            "name": "start_at",
            "in": "query",
            "type": false
          },
          {
            "name": "start_at_and_duration",
            "in": "query",
            "type": false
          },
          {
            "name": "start_before",
            "in": "query",
            "type": false
          },
          {
            "name": "status",
            "in": "query",
            "type": false
          },
          {
            "name": "user_id",
            "in": "query",
            "type": false
          },
          {
            "name": "valid_channels_count",
            "in": "query",
            "type": false
          },
          {
            "name": "views_count",
            "in": "query",
            "type": false
          },
          {
            "name": "visible",
            "in": "query",
            "type": false
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/public/search/users": {
      "get": {
        "summary": "Users Search",
        "tags": [
          "Public::Search"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "type": "string"
          },
          {
            "name": "promo_weight",
            "in": "query",
            "type": "integer"
          },
          {
            "name": "search_by",
            "in": "query",
            "type": "string",
            "description": "Available options: \"title\". Othervise search will be performed through all data"
          },
          {
            "name": "limit",
            "in": "query",
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "type": "integer"
          },
          {
            "name": "order_by",
            "in": "query",
            "type": "string",
            "description": "Valid values are: 'adult', 'age_restrictions', 'archived', 'category_id', 'channel_id', 'channel_type_id', 'created_after', 'created_before', 'deleted', 'duration', 'duration_from', 'duration_to', 'end_after', 'end_at', 'end_before', 'fake', 'featured', 'free', 'immersive_purchase_price', 'listed_at', 'livestream_purchase_price', 'model_created_at', 'organization_id', 'popularity', 'presenter_id', 'private', 'published', 'purchase_price', 'recorded_purchase_price', 'searchable_type', 'show_on_home', 'hide_on_home', 'show_on_profile', 'start_after', 'start_at', 'start_at_and_duration', 'start_before', 'status', 'user_id', 'valid_channels_count', 'views_count', 'visible'. Default: 'adult'"
          },
          {
            "name": "order",
            "in": "query",
            "type": "string",
            "description": "Valid values are: 'asc', 'desc'. Default: 'desc'"
          },
          {
            "name": "adult",
            "in": "query",
            "type": false
          },
          {
            "name": "age_restrictions",
            "in": "query",
            "type": false
          },
          {
            "name": "archived",
            "in": "query",
            "type": false
          },
          {
            "name": "category_id",
            "in": "query",
            "type": false
          },
          {
            "name": "channel_id",
            "in": "query",
            "type": false
          },
          {
            "name": "channel_type_id",
            "in": "query",
            "type": false
          },
          {
            "name": "created_after",
            "in": "query",
            "type": false
          },
          {
            "name": "created_before",
            "in": "query",
            "type": false
          },
          {
            "name": "deleted",
            "in": "query",
            "type": false
          },
          {
            "name": "duration",
            "in": "query",
            "type": false
          },
          {
            "name": "duration_from",
            "in": "query",
            "type": false
          },
          {
            "name": "duration_to",
            "in": "query",
            "type": false
          },
          {
            "name": "end_after",
            "in": "query",
            "type": false
          },
          {
            "name": "end_at",
            "in": "query",
            "type": false
          },
          {
            "name": "end_before",
            "in": "query",
            "type": false
          },
          {
            "name": "fake",
            "in": "query",
            "type": false
          },
          {
            "name": "featured",
            "in": "query",
            "type": false
          },
          {
            "name": "free",
            "in": "query",
            "type": false
          },
          {
            "name": "immersive_purchase_price",
            "in": "query",
            "type": false
          },
          {
            "name": "listed_at",
            "in": "query",
            "type": false
          },
          {
            "name": "livestream_purchase_price",
            "in": "query",
            "type": false
          },
          {
            "name": "model_created_at",
            "in": "query",
            "type": false
          },
          {
            "name": "organization_id",
            "in": "query",
            "type": false
          },
          {
            "name": "popularity",
            "in": "query",
            "type": false
          },
          {
            "name": "presenter_id",
            "in": "query",
            "type": false
          },
          {
            "name": "private",
            "in": "query",
            "type": false
          },
          {
            "name": "published",
            "in": "query",
            "type": false
          },
          {
            "name": "purchase_price",
            "in": "query",
            "type": false
          },
          {
            "name": "recorded_purchase_price",
            "in": "query",
            "type": false
          },
          {
            "name": "searchable_type",
            "in": "query",
            "type": false
          },
          {
            "name": "show_on_home",
            "in": "query",
            "type": false
          },
          {
            "name": "hide_on_home",
            "in": "query",
            "type": false
          },
          {
            "name": "show_on_profile",
            "in": "query",
            "type": false
          },
          {
            "name": "start_after",
            "in": "query",
            "type": false
          },
          {
            "name": "start_at",
            "in": "query",
            "type": false
          },
          {
            "name": "start_at_and_duration",
            "in": "query",
            "type": false
          },
          {
            "name": "start_before",
            "in": "query",
            "type": false
          },
          {
            "name": "status",
            "in": "query",
            "type": false
          },
          {
            "name": "user_id",
            "in": "query",
            "type": false
          },
          {
            "name": "valid_channels_count",
            "in": "query",
            "type": false
          },
          {
            "name": "views_count",
            "in": "query",
            "type": false
          },
          {
            "name": "visible",
            "in": "query",
            "type": false
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/public/search/channels": {
      "get": {
        "summary": "Channels Search",
        "tags": [
          "Public::Search"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "type": "string"
          },
          {
            "name": "promo_weight",
            "in": "query",
            "type": "integer"
          },
          {
            "name": "search_by",
            "in": "query",
            "type": "string",
            "description": "Available options: \"title\". Othervise search will be performed through all data"
          },
          {
            "name": "limit",
            "in": "query",
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "type": "integer"
          },
          {
            "name": "order_by",
            "in": "query",
            "type": "string",
            "description": "Valid values are: 'adult', 'age_restrictions', 'archived', 'category_id', 'channel_id', 'channel_type_id', 'created_after', 'created_before', 'deleted', 'duration', 'duration_from', 'duration_to', 'end_after', 'end_at', 'end_before', 'fake', 'featured', 'free', 'immersive_purchase_price', 'listed_at', 'livestream_purchase_price', 'model_created_at', 'organization_id', 'popularity', 'presenter_id', 'private', 'published', 'purchase_price', 'recorded_purchase_price', 'searchable_type', 'show_on_home', 'hide_on_home', 'show_on_profile', 'start_after', 'start_at', 'start_at_and_duration', 'start_before', 'status', 'user_id', 'valid_channels_count', 'views_count', 'visible'. Default: 'adult'"
          },
          {
            "name": "order",
            "in": "query",
            "type": "string",
            "description": "Valid values are: 'asc', 'desc'. Default: 'desc'"
          },
          {
            "name": "adult",
            "in": "query",
            "type": false
          },
          {
            "name": "age_restrictions",
            "in": "query",
            "type": false
          },
          {
            "name": "archived",
            "in": "query",
            "type": false
          },
          {
            "name": "category_id",
            "in": "query",
            "type": false
          },
          {
            "name": "channel_id",
            "in": "query",
            "type": false
          },
          {
            "name": "channel_type_id",
            "in": "query",
            "type": false
          },
          {
            "name": "created_after",
            "in": "query",
            "type": false
          },
          {
            "name": "created_before",
            "in": "query",
            "type": false
          },
          {
            "name": "deleted",
            "in": "query",
            "type": false
          },
          {
            "name": "duration",
            "in": "query",
            "type": false
          },
          {
            "name": "duration_from",
            "in": "query",
            "type": false
          },
          {
            "name": "duration_to",
            "in": "query",
            "type": false
          },
          {
            "name": "end_after",
            "in": "query",
            "type": false
          },
          {
            "name": "end_at",
            "in": "query",
            "type": false
          },
          {
            "name": "end_before",
            "in": "query",
            "type": false
          },
          {
            "name": "fake",
            "in": "query",
            "type": false
          },
          {
            "name": "featured",
            "in": "query",
            "type": false
          },
          {
            "name": "free",
            "in": "query",
            "type": false
          },
          {
            "name": "immersive_purchase_price",
            "in": "query",
            "type": false
          },
          {
            "name": "listed_at",
            "in": "query",
            "type": false
          },
          {
            "name": "livestream_purchase_price",
            "in": "query",
            "type": false
          },
          {
            "name": "model_created_at",
            "in": "query",
            "type": false
          },
          {
            "name": "organization_id",
            "in": "query",
            "type": false
          },
          {
            "name": "popularity",
            "in": "query",
            "type": false
          },
          {
            "name": "presenter_id",
            "in": "query",
            "type": false
          },
          {
            "name": "private",
            "in": "query",
            "type": false
          },
          {
            "name": "published",
            "in": "query",
            "type": false
          },
          {
            "name": "purchase_price",
            "in": "query",
            "type": false
          },
          {
            "name": "recorded_purchase_price",
            "in": "query",
            "type": false
          },
          {
            "name": "searchable_type",
            "in": "query",
            "type": false
          },
          {
            "name": "show_on_home",
            "in": "query",
            "type": false
          },
          {
            "name": "hide_on_home",
            "in": "query",
            "type": false
          },
          {
            "name": "show_on_profile",
            "in": "query",
            "type": false
          },
          {
            "name": "start_after",
            "in": "query",
            "type": false
          },
          {
            "name": "start_at",
            "in": "query",
            "type": false
          },
          {
            "name": "start_at_and_duration",
            "in": "query",
            "type": false
          },
          {
            "name": "start_before",
            "in": "query",
            "type": false
          },
          {
            "name": "status",
            "in": "query",
            "type": false
          },
          {
            "name": "user_id",
            "in": "query",
            "type": false
          },
          {
            "name": "valid_channels_count",
            "in": "query",
            "type": false
          },
          {
            "name": "views_count",
            "in": "query",
            "type": false
          },
          {
            "name": "visible",
            "in": "query",
            "type": false
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/public/search/sessions": {
      "get": {
        "summary": "Sessions Search",
        "tags": [
          "Public::Search"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "type": "string"
          },
          {
            "name": "promo_weight",
            "in": "query",
            "type": "integer"
          },
          {
            "name": "search_by",
            "in": "query",
            "type": "string",
            "description": "Available options: \"title\". Othervise search will be performed through all data"
          },
          {
            "name": "limit",
            "in": "query",
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "type": "integer"
          },
          {
            "name": "order_by",
            "in": "query",
            "type": "string",
            "description": "Valid values are: 'adult', 'age_restrictions', 'archived', 'category_id', 'channel_id', 'channel_type_id', 'created_after', 'created_before', 'deleted', 'duration', 'duration_from', 'duration_to', 'end_after', 'end_at', 'end_before', 'fake', 'featured', 'free', 'immersive_purchase_price', 'listed_at', 'livestream_purchase_price', 'model_created_at', 'organization_id', 'popularity', 'presenter_id', 'private', 'published', 'purchase_price', 'recorded_purchase_price', 'searchable_type', 'show_on_home', 'hide_on_home', 'show_on_profile', 'start_after', 'start_at', 'start_at_and_duration', 'start_before', 'status', 'user_id', 'valid_channels_count', 'views_count', 'visible'. Default: 'adult'"
          },
          {
            "name": "order",
            "in": "query",
            "type": "string",
            "description": "Valid values are: 'asc', 'desc'. Default: 'desc'"
          },
          {
            "name": "adult",
            "in": "query",
            "type": false
          },
          {
            "name": "age_restrictions",
            "in": "query",
            "type": false
          },
          {
            "name": "archived",
            "in": "query",
            "type": false
          },
          {
            "name": "category_id",
            "in": "query",
            "type": false
          },
          {
            "name": "channel_id",
            "in": "query",
            "type": false
          },
          {
            "name": "channel_type_id",
            "in": "query",
            "type": false
          },
          {
            "name": "created_after",
            "in": "query",
            "type": false
          },
          {
            "name": "created_before",
            "in": "query",
            "type": false
          },
          {
            "name": "deleted",
            "in": "query",
            "type": false
          },
          {
            "name": "duration",
            "in": "query",
            "type": false
          },
          {
            "name": "duration_from",
            "in": "query",
            "type": false
          },
          {
            "name": "duration_to",
            "in": "query",
            "type": false
          },
          {
            "name": "end_after",
            "in": "query",
            "type": false
          },
          {
            "name": "end_at",
            "in": "query",
            "type": false
          },
          {
            "name": "end_before",
            "in": "query",
            "type": false
          },
          {
            "name": "fake",
            "in": "query",
            "type": false
          },
          {
            "name": "featured",
            "in": "query",
            "type": false
          },
          {
            "name": "free",
            "in": "query",
            "type": false
          },
          {
            "name": "immersive_purchase_price",
            "in": "query",
            "type": false
          },
          {
            "name": "listed_at",
            "in": "query",
            "type": false
          },
          {
            "name": "livestream_purchase_price",
            "in": "query",
            "type": false
          },
          {
            "name": "model_created_at",
            "in": "query",
            "type": false
          },
          {
            "name": "organization_id",
            "in": "query",
            "type": false
          },
          {
            "name": "popularity",
            "in": "query",
            "type": false
          },
          {
            "name": "presenter_id",
            "in": "query",
            "type": false
          },
          {
            "name": "private",
            "in": "query",
            "type": false
          },
          {
            "name": "published",
            "in": "query",
            "type": false
          },
          {
            "name": "purchase_price",
            "in": "query",
            "type": false
          },
          {
            "name": "recorded_purchase_price",
            "in": "query",
            "type": false
          },
          {
            "name": "searchable_type",
            "in": "query",
            "type": false
          },
          {
            "name": "show_on_home",
            "in": "query",
            "type": false
          },
          {
            "name": "hide_on_home",
            "in": "query",
            "type": false
          },
          {
            "name": "show_on_profile",
            "in": "query",
            "type": false
          },
          {
            "name": "start_after",
            "in": "query",
            "type": false
          },
          {
            "name": "start_at",
            "in": "query",
            "type": false
          },
          {
            "name": "start_at_and_duration",
            "in": "query",
            "type": false
          },
          {
            "name": "start_before",
            "in": "query",
            "type": false
          },
          {
            "name": "status",
            "in": "query",
            "type": false
          },
          {
            "name": "user_id",
            "in": "query",
            "type": false
          },
          {
            "name": "valid_channels_count",
            "in": "query",
            "type": false
          },
          {
            "name": "views_count",
            "in": "query",
            "type": false
          },
          {
            "name": "visible",
            "in": "query",
            "type": false
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/public/search/videos": {
      "get": {
        "summary": "Videos Search",
        "tags": [
          "Public::Search"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "type": "string"
          },
          {
            "name": "promo_weight",
            "in": "query",
            "type": "integer"
          },
          {
            "name": "search_by",
            "in": "query",
            "type": "string",
            "description": "Available options: \"title\". Othervise search will be performed through all data"
          },
          {
            "name": "limit",
            "in": "query",
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "type": "integer"
          },
          {
            "name": "order_by",
            "in": "query",
            "type": "string",
            "description": "Valid values are: 'adult', 'age_restrictions', 'archived', 'category_id', 'channel_id', 'channel_type_id', 'created_after', 'created_before', 'deleted', 'duration', 'duration_from', 'duration_to', 'end_after', 'end_at', 'end_before', 'fake', 'featured', 'free', 'immersive_purchase_price', 'listed_at', 'livestream_purchase_price', 'model_created_at', 'organization_id', 'popularity', 'presenter_id', 'private', 'published', 'purchase_price', 'recorded_purchase_price', 'searchable_type', 'show_on_home', 'hide_on_home', 'show_on_profile', 'start_after', 'start_at', 'start_at_and_duration', 'start_before', 'status', 'user_id', 'valid_channels_count', 'views_count', 'visible'. Default: 'adult'"
          },
          {
            "name": "order",
            "in": "query",
            "type": "string",
            "description": "Valid values are: 'asc', 'desc'. Default: 'desc'"
          },
          {
            "name": "adult",
            "in": "query",
            "type": false
          },
          {
            "name": "age_restrictions",
            "in": "query",
            "type": false
          },
          {
            "name": "archived",
            "in": "query",
            "type": false
          },
          {
            "name": "category_id",
            "in": "query",
            "type": false
          },
          {
            "name": "channel_id",
            "in": "query",
            "type": false
          },
          {
            "name": "channel_type_id",
            "in": "query",
            "type": false
          },
          {
            "name": "created_after",
            "in": "query",
            "type": false
          },
          {
            "name": "created_before",
            "in": "query",
            "type": false
          },
          {
            "name": "deleted",
            "in": "query",
            "type": false
          },
          {
            "name": "duration",
            "in": "query",
            "type": false
          },
          {
            "name": "duration_from",
            "in": "query",
            "type": false
          },
          {
            "name": "duration_to",
            "in": "query",
            "type": false
          },
          {
            "name": "end_after",
            "in": "query",
            "type": false
          },
          {
            "name": "end_at",
            "in": "query",
            "type": false
          },
          {
            "name": "end_before",
            "in": "query",
            "type": false
          },
          {
            "name": "fake",
            "in": "query",
            "type": false
          },
          {
            "name": "featured",
            "in": "query",
            "type": false
          },
          {
            "name": "free",
            "in": "query",
            "type": false
          },
          {
            "name": "immersive_purchase_price",
            "in": "query",
            "type": false
          },
          {
            "name": "listed_at",
            "in": "query",
            "type": false
          },
          {
            "name": "livestream_purchase_price",
            "in": "query",
            "type": false
          },
          {
            "name": "model_created_at",
            "in": "query",
            "type": false
          },
          {
            "name": "organization_id",
            "in": "query",
            "type": false
          },
          {
            "name": "popularity",
            "in": "query",
            "type": false
          },
          {
            "name": "presenter_id",
            "in": "query",
            "type": false
          },
          {
            "name": "private",
            "in": "query",
            "type": false
          },
          {
            "name": "published",
            "in": "query",
            "type": false
          },
          {
            "name": "purchase_price",
            "in": "query",
            "type": false
          },
          {
            "name": "recorded_purchase_price",
            "in": "query",
            "type": false
          },
          {
            "name": "searchable_type",
            "in": "query",
            "type": false
          },
          {
            "name": "show_on_home",
            "in": "query",
            "type": false
          },
          {
            "name": "hide_on_home",
            "in": "query",
            "type": false
          },
          {
            "name": "show_on_profile",
            "in": "query",
            "type": false
          },
          {
            "name": "start_after",
            "in": "query",
            "type": false
          },
          {
            "name": "start_at",
            "in": "query",
            "type": false
          },
          {
            "name": "start_at_and_duration",
            "in": "query",
            "type": false
          },
          {
            "name": "start_before",
            "in": "query",
            "type": false
          },
          {
            "name": "status",
            "in": "query",
            "type": false
          },
          {
            "name": "user_id",
            "in": "query",
            "type": false
          },
          {
            "name": "valid_channels_count",
            "in": "query",
            "type": false
          },
          {
            "name": "views_count",
            "in": "query",
            "type": false
          },
          {
            "name": "visible",
            "in": "query",
            "type": false
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/public/search/recordings": {
      "get": {
        "summary": "Recordings Search",
        "tags": [
          "Public::Search"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "type": "string"
          },
          {
            "name": "promo_weight",
            "in": "query",
            "type": "integer"
          },
          {
            "name": "search_by",
            "in": "query",
            "type": "string",
            "description": "Available options: \"title\". Othervise search will be performed through all data"
          },
          {
            "name": "limit",
            "in": "query",
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "type": "integer"
          },
          {
            "name": "order_by",
            "in": "query",
            "type": "string",
            "description": "Valid values are: 'adult', 'age_restrictions', 'archived', 'category_id', 'channel_id', 'channel_type_id', 'created_after', 'created_before', 'deleted', 'duration', 'duration_from', 'duration_to', 'end_after', 'end_at', 'end_before', 'fake', 'featured', 'free', 'immersive_purchase_price', 'listed_at', 'livestream_purchase_price', 'model_created_at', 'organization_id', 'popularity', 'presenter_id', 'private', 'published', 'purchase_price', 'recorded_purchase_price', 'searchable_type', 'show_on_home', 'hide_on_home', 'show_on_profile', 'start_after', 'start_at', 'start_at_and_duration', 'start_before', 'status', 'user_id', 'valid_channels_count', 'views_count', 'visible'. Default: 'adult'"
          },
          {
            "name": "order",
            "in": "query",
            "type": "string",
            "description": "Valid values are: 'asc', 'desc'. Default: 'desc'"
          },
          {
            "name": "adult",
            "in": "query",
            "type": false
          },
          {
            "name": "age_restrictions",
            "in": "query",
            "type": false
          },
          {
            "name": "archived",
            "in": "query",
            "type": false
          },
          {
            "name": "category_id",
            "in": "query",
            "type": false
          },
          {
            "name": "channel_id",
            "in": "query",
            "type": false
          },
          {
            "name": "channel_type_id",
            "in": "query",
            "type": false
          },
          {
            "name": "created_after",
            "in": "query",
            "type": false
          },
          {
            "name": "created_before",
            "in": "query",
            "type": false
          },
          {
            "name": "deleted",
            "in": "query",
            "type": false
          },
          {
            "name": "duration",
            "in": "query",
            "type": false
          },
          {
            "name": "duration_from",
            "in": "query",
            "type": false
          },
          {
            "name": "duration_to",
            "in": "query",
            "type": false
          },
          {
            "name": "end_after",
            "in": "query",
            "type": false
          },
          {
            "name": "end_at",
            "in": "query",
            "type": false
          },
          {
            "name": "end_before",
            "in": "query",
            "type": false
          },
          {
            "name": "fake",
            "in": "query",
            "type": false
          },
          {
            "name": "featured",
            "in": "query",
            "type": false
          },
          {
            "name": "free",
            "in": "query",
            "type": false
          },
          {
            "name": "immersive_purchase_price",
            "in": "query",
            "type": false
          },
          {
            "name": "listed_at",
            "in": "query",
            "type": false
          },
          {
            "name": "livestream_purchase_price",
            "in": "query",
            "type": false
          },
          {
            "name": "model_created_at",
            "in": "query",
            "type": false
          },
          {
            "name": "organization_id",
            "in": "query",
            "type": false
          },
          {
            "name": "popularity",
            "in": "query",
            "type": false
          },
          {
            "name": "presenter_id",
            "in": "query",
            "type": false
          },
          {
            "name": "private",
            "in": "query",
            "type": false
          },
          {
            "name": "published",
            "in": "query",
            "type": false
          },
          {
            "name": "purchase_price",
            "in": "query",
            "type": false
          },
          {
            "name": "recorded_purchase_price",
            "in": "query",
            "type": false
          },
          {
            "name": "searchable_type",
            "in": "query",
            "type": false
          },
          {
            "name": "show_on_home",
            "in": "query",
            "type": false
          },
          {
            "name": "hide_on_home",
            "in": "query",
            "type": false
          },
          {
            "name": "show_on_profile",
            "in": "query",
            "type": false
          },
          {
            "name": "start_after",
            "in": "query",
            "type": false
          },
          {
            "name": "start_at",
            "in": "query",
            "type": false
          },
          {
            "name": "start_at_and_duration",
            "in": "query",
            "type": false
          },
          {
            "name": "start_before",
            "in": "query",
            "type": false
          },
          {
            "name": "status",
            "in": "query",
            "type": false
          },
          {
            "name": "user_id",
            "in": "query",
            "type": false
          },
          {
            "name": "valid_channels_count",
            "in": "query",
            "type": false
          },
          {
            "name": "views_count",
            "in": "query",
            "type": false
          },
          {
            "name": "visible",
            "in": "query",
            "type": false
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/public/search/blog/posts": {
      "get": {
        "summary": "Blog/Posts Search",
        "tags": [
          "Public::Search"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "type": "string"
          },
          {
            "name": "promo_weight",
            "in": "query",
            "type": "integer"
          },
          {
            "name": "search_by",
            "in": "query",
            "type": "string",
            "description": "Available options: \"title\". Othervise search will be performed through all data"
          },
          {
            "name": "limit",
            "in": "query",
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "type": "integer"
          },
          {
            "name": "order_by",
            "in": "query",
            "type": "string",
            "description": "Valid values are: 'adult', 'age_restrictions', 'archived', 'category_id', 'channel_id', 'channel_type_id', 'created_after', 'created_before', 'deleted', 'duration', 'duration_from', 'duration_to', 'end_after', 'end_at', 'end_before', 'fake', 'featured', 'free', 'immersive_purchase_price', 'listed_at', 'livestream_purchase_price', 'model_created_at', 'organization_id', 'popularity', 'presenter_id', 'private', 'published', 'purchase_price', 'recorded_purchase_price', 'searchable_type', 'show_on_home', 'hide_on_home', 'show_on_profile', 'start_after', 'start_at', 'start_at_and_duration', 'start_before', 'status', 'user_id', 'valid_channels_count', 'views_count', 'visible'. Default: 'adult'"
          },
          {
            "name": "order",
            "in": "query",
            "type": "string",
            "description": "Valid values are: 'asc', 'desc'. Default: 'desc'"
          },
          {
            "name": "adult",
            "in": "query",
            "type": false
          },
          {
            "name": "age_restrictions",
            "in": "query",
            "type": false
          },
          {
            "name": "archived",
            "in": "query",
            "type": false
          },
          {
            "name": "category_id",
            "in": "query",
            "type": false
          },
          {
            "name": "channel_id",
            "in": "query",
            "type": false
          },
          {
            "name": "channel_type_id",
            "in": "query",
            "type": false
          },
          {
            "name": "created_after",
            "in": "query",
            "type": false
          },
          {
            "name": "created_before",
            "in": "query",
            "type": false
          },
          {
            "name": "deleted",
            "in": "query",
            "type": false
          },
          {
            "name": "duration",
            "in": "query",
            "type": false
          },
          {
            "name": "duration_from",
            "in": "query",
            "type": false
          },
          {
            "name": "duration_to",
            "in": "query",
            "type": false
          },
          {
            "name": "end_after",
            "in": "query",
            "type": false
          },
          {
            "name": "end_at",
            "in": "query",
            "type": false
          },
          {
            "name": "end_before",
            "in": "query",
            "type": false
          },
          {
            "name": "fake",
            "in": "query",
            "type": false
          },
          {
            "name": "featured",
            "in": "query",
            "type": false
          },
          {
            "name": "free",
            "in": "query",
            "type": false
          },
          {
            "name": "immersive_purchase_price",
            "in": "query",
            "type": false
          },
          {
            "name": "listed_at",
            "in": "query",
            "type": false
          },
          {
            "name": "livestream_purchase_price",
            "in": "query",
            "type": false
          },
          {
            "name": "model_created_at",
            "in": "query",
            "type": false
          },
          {
            "name": "organization_id",
            "in": "query",
            "type": false
          },
          {
            "name": "popularity",
            "in": "query",
            "type": false
          },
          {
            "name": "presenter_id",
            "in": "query",
            "type": false
          },
          {
            "name": "private",
            "in": "query",
            "type": false
          },
          {
            "name": "published",
            "in": "query",
            "type": false
          },
          {
            "name": "purchase_price",
            "in": "query",
            "type": false
          },
          {
            "name": "recorded_purchase_price",
            "in": "query",
            "type": false
          },
          {
            "name": "searchable_type",
            "in": "query",
            "type": false
          },
          {
            "name": "show_on_home",
            "in": "query",
            "type": false
          },
          {
            "name": "hide_on_home",
            "in": "query",
            "type": false
          },
          {
            "name": "show_on_profile",
            "in": "query",
            "type": false
          },
          {
            "name": "start_after",
            "in": "query",
            "type": false
          },
          {
            "name": "start_at",
            "in": "query",
            "type": false
          },
          {
            "name": "start_at_and_duration",
            "in": "query",
            "type": false
          },
          {
            "name": "start_before",
            "in": "query",
            "type": false
          },
          {
            "name": "status",
            "in": "query",
            "type": false
          },
          {
            "name": "user_id",
            "in": "query",
            "type": false
          },
          {
            "name": "valid_channels_count",
            "in": "query",
            "type": false
          },
          {
            "name": "views_count",
            "in": "query",
            "type": false
          },
          {
            "name": "visible",
            "in": "query",
            "type": false
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/public/sessions": {
      "get": {
        "summary": "List all sessions",
        "tags": [
          "Public::Sessions"
        ],
        "parameters": [
          {
            "name": "channel_id",
            "in": "query",
            "type": "integer"
          },
          {
            "name": "presenter_id",
            "in": "query",
            "type": "integer"
          },
          {
            "name": "organization_id",
            "in": "query",
            "type": "integer"
          },
          {
            "name": "owner_id",
            "in": "query",
            "type": "integer"
          },
          {
            "name": "start_at_from",
            "in": "query",
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "start_at_to",
            "in": "query",
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "end_at_from",
            "in": "query",
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "end_at_to",
            "in": "query",
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "duration_from",
            "in": "query",
            "type": "integer"
          },
          {
            "name": "duration_to",
            "in": "query",
            "type": "integer"
          },
          {
            "name": "order_by",
            "in": "query",
            "type": "string",
            "description": "Valid values are: 'start_at', 'end_at'. Default: 'start_at'"
          },
          {
            "name": "order",
            "in": "query",
            "type": "string",
            "description": "Valid values are: 'asc', 'desc'. Default: 'asc'"
          },
          {
            "name": "limit",
            "in": "query",
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "type": "integer"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/public/sessions/{id}": {
      "get": {
        "summary": "Get session info",
        "tags": [
          "Public::Sessions"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/public/sessions/{session_id}/embeds": {
      "get": {
        "summary": "Get embeds list",
        "tags": [
          "Public::Sessions"
        ],
        "parameters": [
          {
            "name": "session_id",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/public/share": {
      "get": {
        "summary": "Share model",
        "tags": [
          "Public::Share"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": false,
            "optional": true
          },
          {
            "name": "model_type",
            "in": "query",
            "type": "string",
            "description": "Available options: User, Channel, Session, Video, Recording"
          },
          {
            "name": "model_id",
            "in": "query",
            "type": "integer",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/public/share/email": {
      "post": {
        "summary": "Email Share",
        "tags": [
          "Public::Share"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "model_type",
            "in": "query",
            "type": "string",
            "description": "Available options: User, Channel, Session, Video, Recording, Blog::Post"
          },
          {
            "name": "model_id",
            "in": "query",
            "type": "integer",
            "required": true
          },
          {
            "name": "subject",
            "in": "query",
            "type": "string",
            "required": true
          },
          {
            "name": "body",
            "in": "query",
            "type": "string",
            "required": true
          },
          {
            "name": "emails",
            "in": "query",
            "type": "string",
            "description": "email1@example.com,email2@example.com",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/public/shop/lists": {
      "get": {
        "summary": "Get all lists of current_user",
        "tags": [
          "Public::Shop::Lists"
        ],
        "description": "Get all lists",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "model_id",
            "in": "query",
            "type": "integer",
            "required": true
          },
          {
            "name": "model_type",
            "in": "query",
            "type": "string",
            "required": true,
            "description": "Valid values are: Channel, Recording, Session, User, Video"
          },
          {
            "name": "order_by",
            "in": "query",
            "type": "string",
            "description": "Valid values are: 'created_at', 'updated_at'. Default: 'updated_at'"
          },
          {
            "name": "order",
            "in": "query",
            "type": "string",
            "description": "Valid values are: 'asc', 'desc'. Default: 'desc'"
          },
          {
            "name": "offset",
            "in": "query",
            "type": "integer"
          },
          {
            "name": "limit",
            "in": "query",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/public/shop/lists/{id}": {
      "get": {
        "summary": "Get List info",
        "tags": [
          "Public::Shop::Lists"
        ],
        "description": "",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/public/shop/products": {
      "get": {
        "summary": "Get all products",
        "tags": [
          "Public::Shop::Products"
        ],
        "description": "Get all products",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "list_id",
            "in": "query",
            "type": "integer",
            "required": true
          },
          {
            "name": "order_by",
            "in": "query",
            "type": "string",
            "description": "Valid values are: 'created_at', 'updated_at'. Default: 'updated_at'"
          },
          {
            "name": "order",
            "in": "query",
            "type": "string",
            "description": "Valid values are: 'asc', 'desc'. Default: 'desc'"
          },
          {
            "name": "offset",
            "in": "query",
            "type": "integer"
          },
          {
            "name": "limit",
            "in": "query",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/public/shop/products/{id}": {
      "get": {
        "summary": "Get Product info",
        "tags": [
          "Public::Shop::Products"
        ],
        "description": "",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/public/support_messages/contact_us": {
      "post": {
        "summary": "Send Contact Us mail",
        "tags": [
          "Public::SupportMessages"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "type": "string",
            "required": false
          },
          {
            "name": "company",
            "in": "query",
            "type": "string",
            "required": false
          },
          {
            "name": "first_name",
            "in": "query",
            "type": "string",
            "required": false
          },
          {
            "name": "last_name",
            "in": "query",
            "type": "string",
            "required": false
          },
          {
            "name": "email",
            "in": "query",
            "type": "string",
            "required": false
          },
          {
            "name": "phone",
            "in": "query",
            "type": "string",
            "required": false
          },
          {
            "name": "about",
            "in": "query",
            "type": "string",
            "required": false
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/public/user_accounts/{id}": {
      "get": {
        "summary": "Get user account info",
        "tags": [
          "Public::UserAccounts"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/public/users/{id}": {
      "get": {
        "summary": "Get user info",
        "tags": [
          "Public::Users"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/public/users/fetch_avatar": {
      "get": {
        "summary": "Get user avatar",
        "tags": [
          "Public::Users"
        ],
        "parameters": [
          {
            "name": "email",
            "in": "query",
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/public/users/{id}/creator_info": {
      "get": {
        "summary": "Get creator info",
        "tags": [
          "Public::Users"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": false
          },
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "log_activity",
            "in": "query",
            "type": "string",
            "description": "Pass 0 to skip saving activity in browsing history"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/public/videos": {
      "get": {
        "summary": "Get video info",
        "tags": [
          "Public::Videos"
        ],
        "parameters": [
          {
            "name": "user_id",
            "in": "query",
            "type": "integer"
          },
          {
            "name": "room_id",
            "in": "query",
            "type": "integer"
          },
          {
            "name": "session_id",
            "in": "query",
            "type": "integer"
          },
          {
            "name": "channel_id",
            "in": "query",
            "type": "integer"
          },
          {
            "name": "start_at_from",
            "in": "query",
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "start_at_to",
            "in": "query",
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "end_at_from",
            "in": "query",
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "end_at_to",
            "in": "query",
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "duration_from",
            "in": "query",
            "type": "integer"
          },
          {
            "name": "duration_to",
            "in": "query",
            "type": "integer"
          },
          {
            "name": "show_on_home",
            "in": "query",
            "type": "boolean"
          },
          {
            "name": "order_by",
            "in": "query",
            "type": "string",
            "description": "Valid values are: 'id', 'duration', 'created_at', 'updated_at'. Default: promo weight"
          },
          {
            "name": "order",
            "in": "query",
            "type": "string",
            "description": "Valid values are: 'asc', 'desc'. Default: 'asc'"
          },
          {
            "name": "limit",
            "in": "query",
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "type": "integer"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/public/videos/{id}": {
      "get": {
        "summary": "Get video details",
        "tags": [
          "Public::Videos"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/public/videos/{video_id}/embeds": {
      "get": {
        "summary": "Get embeds list",
        "tags": [
          "Public::Videos"
        ],
        "parameters": [
          {
            "name": "video_id",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/sandbox/system_themes": {
      "get": {
        "summary": "Get system themes info",
        "tags": [
          "Sandbox::SystemThemes"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/system/cable": {
      "post": {
        "summary": "Send cable notification",
        "tags": [
          "System"
        ],
        "description": "Use Authorization header from organization if user password is blank",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true,
            "description": "Generate basic auth token at /service_admin_panel/basic_auth"
          },
          {
            "name": "channel",
            "in": "query",
            "type": "string",
            "required": true,
            "description": "Available channels are: 'UsersChannel', 'SessionsChannel', 'PaypalDonationsChannel', 'PresenceImmersiveRoomsChannel', 'PresenceSourceRoomsChannel',\n                              'PrivateLivestreamRoomsChannel', 'PublicLivestreamRoomsChannel', 'RoomsChannel', 'StreamPreviewsChannel'"
          },
          {
            "name": "event",
            "in": "query",
            "type": "string",
            "required": true,
            "description": "Event name"
          },
          {
            "name": "data",
            "in": "query",
            "type": "string",
            "required": false,
            "description": "Data encoded in json"
          },
          {
            "name": "to_object",
            "in": "query",
            "type": "string",
            "required": false,
            "description": "Object class and id in json: {\"class\":\"User\",\"id\":1}"
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/system/logs": {
      "post": {
        "summary": "Create log",
        "tags": [
          "System"
        ],
        "description": "Use Authorization header from organization if user password is blank",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": false
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "example": {
                  "type": "string",
                  "example": "test test test"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/user/abstract_session_cancel_reasons": {
      "get": {
        "summary": "All AbstractSessionCancelReasons",
        "tags": [
          "User::AbstractSessionCancelReasons"
        ],
        "description": "Get all AbstractSessionCancelReasons",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "limit",
            "in": "query",
            "type": "string"
          },
          {
            "name": "offset",
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/user/access_management/channels": {
      "get": {
        "summary": "All credentials",
        "tags": [
          "User::AccessManagement::Channels"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": false
          },
          {
            "name": "permission_code",
            "in": "query",
            "type": "string",
            "description": "eg. create_session"
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/user/access_management/credentials": {
      "get": {
        "summary": "All credentials",
        "tags": [
          "User::AccessManagement::Credentials"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/user/access_management/organizations/{organization_id}/group_members/{id}": {
      "put": {
        "summary": "Update RoleMember",
        "tags": [
          "User::AccessManagement::GroupMembers"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "channel_ids",
            "in": "query",
            "type": "array",
            "items": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/user/access_management/groups": {
      "get": {
        "summary": "All groups",
        "tags": [
          "User::AccessManagement::Groups"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/user/access_management/groups/{id}": {
      "get": {
        "summary": "Get group",
        "tags": [
          "User::AccessManagement::Groups"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      },
      "put": {
        "summary": "Update group",
        "tags": [
          "User::AccessManagement::Groups"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": false
          },
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "example": "My first group"
                },
                "enabled": {
                  "type": "boolean",
                  "example": true
                },
                "description": {
                  "type": "string",
                  "example": "Description"
                },
                "credential_ids": {
                  "type": "array",
                  "items": {
                    "type": "integer"
                  },
                  "example": [
                    1,
                    2,
                    3
                  ]
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      },
      "delete": {
        "summary": "Delete group",
        "tags": [
          "User::AccessManagement::Groups"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/user/access_management/groups/": {
      "post": {
        "summary": "Create group",
        "tags": [
          "User::AccessManagement::Groups"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": false
          },
          {
            "name": "group",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "example": "My first group"
                },
                "description": {
                  "type": "string",
                  "example": "Description"
                },
                "enabled": {
                  "type": "boolean",
                  "example": true
                },
                "credential_ids": {
                  "type": "array",
                  "items": {
                    "type": "integer"
                  },
                  "example": [
                    1,
                    2,
                    3
                  ]
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/user/access_management/organizations/{organization_id}/organization_memberships": {
      "get": {
        "summary": "All OrganizationMemberships for organization",
        "tags": [
          "User::AccessManagement::OrganizationMemberships"
        ],
        "description": "",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "organization_id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "order_by",
            "in": "query",
            "type": "string",
            "description": "Valid values are: 'id', 'created_at', 'updated_at'. Default: 'id'"
          },
          {
            "name": "order",
            "in": "query",
            "type": "string",
            "description": "Valid values are: 'asc', 'desc'. Default: 'asc'"
          },
          {
            "name": "offset",
            "in": "query",
            "type": "integer"
          },
          {
            "name": "limit",
            "in": "query",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      },
      "post": {
        "summary": "Create OrganizationMembership",
        "tags": [
          "User::AccessManagement::OrganizationMemberships"
        ],
        "description": "",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "email",
            "in": "query",
            "type": "string"
          },
          {
            "name": "first_name",
            "in": "query",
            "type": "string"
          },
          {
            "name": "last_name",
            "in": "query",
            "type": "string"
          },
          {
            "name": "user_id",
            "in": "query",
            "type": "integer"
          },
          {
            "name": "group_ids",
            "in": "query",
            "type": "array",
            "items": {
              "type": "integer"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/user/access_management/organizations/{organization_id}/organization_memberships/{id}": {
      "get": {
        "summary": "Get OrganizationMembership info",
        "tags": [
          "User::AccessManagement::OrganizationMemberships"
        ],
        "description": "",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      },
      "put": {
        "summary": "Update OrganizationMembership",
        "tags": [
          "User::AccessManagement::OrganizationMemberships"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "group_ids",
            "in": "query",
            "type": "array",
            "items": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      },
      "delete": {
        "summary": "Destroy OrganizationMembership",
        "tags": [
          "User::AccessManagement::OrganizationMemberships"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/user/access_management/organizations/{organization_id}/organization_memberships/import_from_csv": {
      "post": {
        "summary": "Import OrganizationMembership",
        "tags": [
          "User::AccessManagement::OrganizationMemberships"
        ],
        "description": "",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "file",
            "in": "formData",
            "type": "file",
            "required": true
          },
          {
            "name": "groups",
            "in": "query",
            "type": "string",
            "description": "[{\"group_id\":\"3\",\"channel_ids\":[]},{\"group_id\":\"4\",\"channel_ids\":[319]}]"
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/user/activities": {
      "get": {
        "summary": "All User Activities",
        "tags": [
          "User::Activities"
        ],
        "description": "Get all user activities matching specified filters",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "trackable_type",
            "in": "query",
            "type": "string",
            "required": false,
            "example": "Video",
            "description": "Valid values are: 'User', 'Organization', 'Channel', 'Session', 'Video', 'Recording'"
          },
          {
            "name": "date_from",
            "in": "query",
            "type": "string",
            "example": "2020-12-09T14:02:15.620Z",
            "format": "date-time"
          },
          {
            "name": "date_to",
            "in": "query",
            "type": "string",
            "example": "2020-12-10T14:02:15.620Z",
            "format": "date-time"
          },
          {
            "name": "order_by",
            "in": "query",
            "type": "string",
            "description": "Valid values are: 'created_at', 'updated_at'. Default: 'updated_at'"
          },
          {
            "name": "order",
            "in": "query",
            "type": "string",
            "description": "Valid values are: 'asc', 'desc'. Default: 'desc'"
          },
          {
            "name": "offset",
            "in": "query",
            "type": "integer"
          },
          {
            "name": "limit",
            "in": "query",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/user/activities/{id}": {
      "get": {
        "summary": "Get Activity info",
        "tags": [
          "User::Activities"
        ],
        "description": "",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/user/activities/": {
      "delete": {
        "summary": "Delete Activity/Activities",
        "tags": [
          "User::Activities"
        ],
        "description": "",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "id",
            "in": "query",
            "type": "string",
            "required": false
          },
          {
            "name": "date_from",
            "in": "query",
            "type": "string",
            "required": false
          },
          {
            "name": "date_to",
            "in": "query",
            "type": "string",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/user/activities/destroy_all": {
      "get": {
        "summary": "Clear all user Activities",
        "tags": [
          "User::Activities"
        ],
        "description": "",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/user/booking/booking_categories": {
      "get": {
        "summary": "All booking categories",
        "tags": [
          "User::Booking::BookingCategories"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/user/booking/booking_slots": {
      "get": {
        "summary": "All bookings",
        "tags": [
          "User::Booking::BookingSlots"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "user_id",
            "in": "query",
            "type": "integer",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      },
      "post": {
        "summary": "Create booking slot",
        "tags": [
          "User::Booking::BookingSlots"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "booking_slot",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "booking_category_id": {
                  "type": "integer",
                  "required": true
                },
                "channel_id": {
                  "type": "integer",
                  "required": true
                },
                "name": {
                  "type": "string",
                  "required": true
                },
                "description": {
                  "type": "string",
                  "required": true
                },
                "replay": {
                  "type": "boolean",
                  "required": true
                },
                "replay_price_cents": {
                  "type": "integer"
                },
                "currency": {
                  "type": "string",
                  "example": "USD"
                },
                "tags": {
                  "type": "string"
                },
                "slot_rules": {
                  "type": "string",
                  "required": true
                },
                "week_rules": {
                  "type": "string"
                },
                "booking_prices_attributes": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "duration": {
                        "type": "integer",
                        "required": true
                      },
                      "price_cents": {
                        "type": "integer",
                        "required": true
                      },
                      "currency": {
                        "type": "string",
                        "example": "USD"
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/user/booking/booking_slots/{id}": {
      "get": {
        "summary": "Get booking slot",
        "tags": [
          "User::Booking::BookingSlots"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      },
      "put": {
        "summary": "Update booking slot",
        "tags": [
          "User::Booking::BookingSlots"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "booking_slot",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "booking_category_id": {
                  "type": "integer",
                  "required": true
                },
                "channel_id": {
                  "type": "integer",
                  "required": true
                },
                "name": {
                  "type": "string",
                  "required": true
                },
                "description": {
                  "type": "string",
                  "required": true
                },
                "replay": {
                  "type": "boolean",
                  "required": true
                },
                "replay_price_cents": {
                  "type": "integer"
                },
                "currency": {
                  "type": "string",
                  "example": "USD"
                },
                "tags": {
                  "type": "string"
                },
                "slot_rules": {
                  "type": "string",
                  "required": true
                },
                "week_rules": {
                  "type": "string"
                },
                "booking_prices_attributes": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer"
                      },
                      "duration": {
                        "type": "integer",
                        "required": true
                      },
                      "price_cents": {
                        "type": "integer",
                        "required": true
                      },
                      "currency": {
                        "type": "string",
                        "example": "USD"
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      },
      "delete": {
        "summary": "Delete booking slot",
        "tags": [
          "User::Booking::BookingSlots"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/user/booking/booking_slots/{id}/calculate_price": {
      "get": {
        "summary": "Calculate booking slot price",
        "tags": [
          "User::Booking::BookingSlots"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "price_id",
            "in": "query",
            "type": "integer",
            "required": true
          },
          {
            "name": "start_at",
            "in": "query",
            "type": "string",
            "required": true,
            "example": "2001-02-03T04:05:06+07:00"
          },
          {
            "name": "end_at",
            "in": "query",
            "type": "string",
            "required": true,
            "example": "2001-02-03T04:05:06+07:00"
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/user/booking/booking_slots/{id}/bookings": {
      "get": {
        "summary": "Get booking slots bookings per day",
        "tags": [
          "User::Booking::BookingSlots"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "date",
            "in": "query",
            "type": "string",
            "required": false,
            "example": "2023-04-20"
          },
          {
            "name": "date_from",
            "in": "query",
            "type": "string",
            "required": false,
            "example": "2023-04-20"
          },
          {
            "name": "date_to",
            "in": "query",
            "type": "string",
            "required": false,
            "example": "2023-04-20"
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/user/booking/bookings": {
      "get": {
        "summary": "All bookings",
        "tags": [
          "User::Booking::Bookings"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": false
          },
          {
            "name": "date",
            "in": "query",
            "type": "string",
            "required": false,
            "example": "2023-04-20"
          },
          {
            "name": "date_from",
            "in": "query",
            "type": "string",
            "required": false,
            "example": "2023-04-20"
          },
          {
            "name": "date_to",
            "in": "query",
            "type": "string",
            "required": false,
            "example": "2023-04-20"
          },
          {
            "name": "requested_bookings",
            "in": "query",
            "type": "boolean",
            "required": false,
            "example": "true",
            "description": "to see my bookings from users"
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      },
      "post": {
        "summary": "Create booking",
        "tags": [
          "User::Booking::Bookings"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": false
          },
          {
            "name": "booking",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "booking_slot_id": {
                  "type": "integer",
                  "required": true
                },
                "duration": {
                  "type": "integer",
                  "required": true
                },
                "start_at": {
                  "type": "string",
                  "required": true,
                  "example": "2001-02-03T04:05:06+07:00"
                },
                "end_at": {
                  "type": "string",
                  "required": true,
                  "example": "2001-02-03T04:05:06+07:00"
                },
                "stripe_token": {
                  "type": "string",
                  "required": false
                },
                "stripe_card": {
                  "type": "string",
                  "required": false
                },
                "price_cents": {
                  "type": "integer",
                  "required": true,
                  "example": "5000 (50 in cents)"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/user/booking/bookings/{id}": {
      "get": {
        "summary": "Get booking",
        "tags": [
          "User::Booking::Bookings"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      },
      "delete": {
        "summary": "Delete booking",
        "tags": [
          "User::Booking::Bookings"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/user/channel_free_subscriptions": {
      "get": {
        "summary": "Get all user free subscriptions",
        "tags": [
          "User::ChannelFreeSubscriptions"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "offset",
            "in": "query",
            "type": "integer"
          },
          {
            "name": "limit",
            "in": "query",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/user/channel_free_subscriptions/{id}": {
      "get": {
        "summary": "Get user free subscription",
        "tags": [
          "User::ChannelFreeSubscriptions"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/user/channel_invited_presenterships": {
      "get": {
        "summary": "Get all user channel invited presenterships",
        "tags": [
          "User::ChannelInvitedPresenterships"
        ],
        "description": "Get all user channel invited presenterships",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "status",
            "in": "query",
            "type": "string",
            "required": false,
            "description": "Available values are: \"pending\", \"accepted\", \"rejected\""
          },
          {
            "name": "channel_id",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "order",
            "in": "query",
            "type": "string",
            "description": "Valid values are: 'asc', 'desc'. Default: 'desc'"
          },
          {
            "name": "order_by",
            "in": "query",
            "type": "string",
            "description": "Valid values are: 'created_at', 'updated_at', 'invitation_sent_at', 'status'. Default: 'invitation_sent_at'"
          },
          {
            "name": "offset",
            "in": "query",
            "type": "integer"
          },
          {
            "name": "limit",
            "in": "query",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/user/channel_invited_presenterships/{id}": {
      "get": {
        "summary": "Get channel invited presentership info",
        "tags": [
          "User::ChannelInvitedPresenterships"
        ],
        "description": "",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      },
      "put": {
        "summary": "Update pending channel invited presentership",
        "tags": [
          "User::ChannelInvitedPresenterships"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "status",
            "in": "query",
            "type": "string",
            "required": true,
            "description": "Valid values are: 'accepted', 'rejected'"
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/user/channel_subscriptions": {
      "get": {
        "summary": "Get all user subscriptions",
        "tags": [
          "User::ChannelSubscriptions"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "offset",
            "in": "query",
            "type": "integer"
          },
          {
            "name": "limit",
            "in": "query",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      },
      "post": {
        "summary": "Create new subscription",
        "tags": [
          "User::ChannelSubscriptions"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "plan_id",
            "in": "query",
            "type": "integer",
            "required": true
          },
          {
            "name": "gift",
            "in": "path",
            "type": "integer",
            "required": true,
            "description": "&gift=1"
          },
          {
            "name": "recipient",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "required if &gift=1"
          },
          {
            "name": "stripe_token",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "received from stripe js tok_ or card_ from payment methods list"
          },
          {
            "name": "country",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "eg. US"
          },
          {
            "name": "zip_code",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "required for US but lets add it always"
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/user/channel_subscriptions/{id}": {
      "get": {
        "summary": "Get user subscription",
        "tags": [
          "User::ChannelSubscriptions"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/user/channel_subscriptions/:id/check_recipient_email": {
      "post": {
        "summary": "Check user by email for gift subscription",
        "tags": [
          "User::ChannelSubscriptions"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "email",
            "in": "query",
            "type": "string",
            "required": true,
            "description": "&email=example@email.com"
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/user/channels": {
      "get": {
        "summary": "Get all user channels",
        "tags": [
          "User::Channels"
        ],
        "description": "Get all user channels",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "status",
            "in": "query",
            "type": "string",
            "required": false,
            "description": "Available values are: \"draft\", \"pending_review\", \"approved\", \"rejected\""
          },
          {
            "name": "order",
            "in": "query",
            "type": "string",
            "description": "Valid values are: 'asc', 'desc'. Default: 'desc'"
          },
          {
            "name": "order_by",
            "in": "query",
            "type": "string",
            "description": "Valid values are: 'created_at', 'updated_at'. Default: 'updated_at'"
          },
          {
            "name": "offset",
            "in": "query",
            "type": "integer"
          },
          {
            "name": "limit",
            "in": "query",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/user/comments": {
      "get": {
        "summary": "Get model comments",
        "tags": [
          "User::Comments"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "commentable_type",
            "in": "query",
            "type": "string",
            "required": true,
            "description": "Valid values are: 'Organization', 'Channel', 'Session', 'Video', 'Recording'"
          },
          {
            "name": "commentable_id",
            "in": "query",
            "type": "integer",
            "required": true
          },
          {
            "name": "order",
            "in": "query",
            "type": "string",
            "description": "Valid values are: 'asc', 'desc'. Default: 'asc'"
          },
          {
            "name": "offset",
            "in": "query",
            "type": "integer"
          },
          {
            "name": "limit",
            "in": "query",
            "type": "integer"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      },
      "post": {
        "summary": "Create comment for model",
        "tags": [
          "User::Comments"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "comment",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "body"
              ],
              "properties": {
                "commentable_type": {
                  "type": "string",
                  "example": "Comment",
                  "description": "Valid values are: 'Session', 'Video', 'Recording', 'Comment'"
                },
                "commentable_id": {
                  "type": "integer",
                  "example": "1"
                },
                "body": {
                  "type": "text",
                  "example": "Lorem Ipsum Dolores Sit Amet"
                }
              }
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/user/comments/{commentable_type}/{commentable_id}": {
      "get": {
        "summary": "Get model comments",
        "tags": [
          "User::Comments"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "commentable_type",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "Valid values are: 'Organization', 'Channel', 'Session', 'Video', 'Recording'"
          },
          {
            "name": "commentable_id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "order",
            "in": "query",
            "type": "string",
            "description": "Valid values are: 'asc', 'desc'. Default: 'asc'"
          },
          {
            "name": "offset",
            "in": "query",
            "type": "integer"
          },
          {
            "name": "limit",
            "in": "query",
            "type": "integer"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/user/comments/:id": {
      "get": {
        "summary": "Show specific comment for model",
        "tags": [
          "User::Comments"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      },
      "put": {
        "summary": "Update comment",
        "tags": [
          "User::Comments"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "comment",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "body"
              ],
              "properties": {
                "body": {
                  "type": "text",
                  "example": "Lorem Ipsum Dolores Sit Amet"
                },
                "visible": {
                  "type": "boolean",
                  "example": false,
                  "description": "Available only for moderator"
                }
              }
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      },
      "delete": {
        "summary": "Destroy comment",
        "tags": [
          "User::Comments"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/user/confirmations": {
      "post": {
        "summary": "Recend confirmations instructions for current user",
        "tags": [
          "User::Confirmations"
        ],
        "description": "",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/user/contacts": {
      "get": {
        "summary": "All Contacts",
        "tags": [
          "User::Contacts"
        ],
        "description": "Get all user contacts",
        "produces": [
          "application/json",
          "text/csv"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "q",
            "in": "query",
            "type": "string",
            "description": "Search by name or email"
          },
          {
            "name": "ids",
            "in": "query",
            "type": "string",
            "value": "all",
            "description": "Array of selected ids OR String value \"all\""
          },
          {
            "name": "status",
            "in": "query",
            "type": "string",
            "description": "Valid values are: 0..6; All status: , Contacts: 0, Subscription: 1, Unpaid: 2, Canceled: 3, Trial: 4, One time: 5, Opt In: 6"
          },
          {
            "name": "offset",
            "in": "query",
            "type": "integer"
          },
          {
            "name": "limit",
            "in": "query",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      },
      "post": {
        "summary": "Create Contact",
        "tags": [
          "User::Contacts"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "email",
            "in": "query",
            "type": "string",
            "required": true,
            "example": "user_contact@example.com"
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      },
      "delete": {
        "summary": "Delete Contacts",
        "tags": [
          "User::Contacts"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "ids",
            "in": "query",
            "type": "string",
            "required": true,
            "description": "id, array of ids"
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/user/contacts/{id}": {
      "put": {
        "summary": "Update Contact",
        "tags": [
          "User::Contacts"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "contact",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string",
                  "example": "user_contact@example.com"
                },
                "name": {
                  "type": "string",
                  "example": "name"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/user/contacts/import_from_csv": {
      "post": {
        "summary": "Import contacts from csv",
        "tags": [
          "User::Contacts"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "file",
            "in": "formData",
            "type": "file",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/user/contacts/export_to_csv": {
      "post": {
        "summary": "Export contacts to csv",
        "tags": [
          "User::Contacts"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "ids",
            "in": "body",
            "type": "array",
            "description": "\"all\" or array of ids"
          },
          {
            "name": "status",
            "in": "body",
            "type": "array",
            "description": "\"all\" or 0-6 or array of statuses"
          },
          {
            "name": "q",
            "in": "body",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/user/conversations": {
      "get": {
        "summary": "All User Conversations",
        "tags": [
          "User::Conversations"
        ],
        "description": "Get all user conversations matching specified filters",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "box",
            "in": "query",
            "type": "string",
            "description": "Valid values are: 'inbox', 'sentbox', 'trash', 'conversations'. Default: 'conversations'"
          },
          {
            "name": "order_by",
            "in": "query",
            "type": "string",
            "description": "Valid values are: 'created_at', 'updated_at'. Default: 'updated_at'"
          },
          {
            "name": "order",
            "in": "query",
            "type": "string",
            "description": "Valid values are: 'asc', 'desc'. Default: 'desc'"
          },
          {
            "name": "offset",
            "in": "query",
            "type": "integer"
          },
          {
            "name": "limit",
            "in": "query",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/user/conversations/{id}": {
      "get": {
        "summary": "Get Conversation info",
        "tags": [
          "User::Conversations"
        ],
        "description": "",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "limit",
            "in": "query",
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/user/conversations/{id}/mark_as_read": {
      "post": {
        "summary": "Mark all conversation receipts as read",
        "tags": [
          "User::Conversations"
        ],
        "description": "",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "limit",
            "in": "query",
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/user/conversations/{id}/mark_as_unread": {
      "post": {
        "summary": "Mark all conversation receipts as unread",
        "tags": [
          "User::Conversations"
        ],
        "description": "",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "limit",
            "in": "query",
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/user/conversations/": {
      "delete": {
        "summary": "Delete Conversation/Conversations",
        "tags": [
          "User::Conversations"
        ],
        "description": "Mark conversation receipts as deleted",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "id",
            "in": "query",
            "type": "string",
            "required": false
          },
          {
            "name": "limit",
            "in": "query",
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/user/customer/free_subscriptions": {
      "get": {
        "summary": "List all free subscriptions",
        "tags": [
          "User::Customer::FreeSubscriptions"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "order_by",
            "in": "query",
            "type": "string",
            "description": "Valid values are: 'created_at', 'start_at', 'end_at'. Default: 'created_at'"
          },
          {
            "name": "order",
            "in": "query",
            "type": "string",
            "description": "Valid values are: 'asc', 'desc'. Default: 'desc'"
          },
          {
            "name": "limit",
            "in": "query",
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "type": "integer"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/user/customer/subscriptions": {
      "get": {
        "summary": "List all user subscriptions",
        "tags": [
          "User::Customer::Subscriptions"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "status",
            "in": "query",
            "type": "string"
          },
          {
            "name": "channel_id",
            "in": "query",
            "type": "string"
          },
          {
            "name": "order_by",
            "in": "query",
            "type": "string",
            "description": "Valid values are: 'created_at', 'status', 'canceled_at'. Default: 'created_at'"
          },
          {
            "name": "order",
            "in": "query",
            "type": "string",
            "description": "Valid values are: 'asc', 'desc'. Default: 'desc'"
          },
          {
            "name": "limit",
            "in": "query",
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "type": "integer"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "api/v1/user/documents": {
      "get": {
        "summary": "Get documents",
        "tags": [
          "User::Documents"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "channel_id",
            "in": "query",
            "type": "integer"
          },
          {
            "name": "visible",
            "in": "query",
            "type": "integer"
          },
          {
            "name": "dashboard",
            "in": "query",
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "type": "integer"
          },
          {
            "name": "limit",
            "in": "query",
            "type": "integer"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      },
      "post": {
        "summary": "Create document",
        "tags": [
          "User::Documents"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "channel_id",
            "in": "query",
            "type": "string",
            "required": true
          },
          {
            "name": "file",
            "in": "formData",
            "type": "string",
            "required": true
          },
          {
            "name": "title",
            "in": "query",
            "type": "string"
          },
          {
            "name": "description",
            "in": "query",
            "type": "string"
          },
          {
            "name": "hidden",
            "in": "query",
            "type": "boolean"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "api/v1/user/documents/{document_id}": {
      "get": {
        "summary": "Get document",
        "tags": [
          "User::Documents"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "document_id",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      },
      "put": {
        "summary": "Update document",
        "tags": [
          "User::Documents"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "document_id",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "title",
            "in": "query",
            "type": "string"
          },
          {
            "name": "description",
            "in": "query",
            "type": "string"
          },
          {
            "name": "hidden",
            "in": "query",
            "type": "boolean"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      },
      "delete": {
        "summary": "Delete document",
        "tags": [
          "User::Documents"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "document_id",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "api/v1/user/documents/{document_id}/buy": {
      "post": {
        "summary": "Buy document",
        "tags": [
          "User::Documents"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "document_id",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "token",
            "in": "query",
            "type": "string",
            "required": true
          },
          {
            "name": "country",
            "in": "query",
            "type": "string",
            "required": true
          },
          {
            "name": "zip_code",
            "in": "query",
            "type": "string",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "api/v1/user/feature_history_usages": {
      "get": {
        "summary": "Get all FeatureHistoryUsages of current organization of current user",
        "tags": [
          "User::FeatureHistoryUsage"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "code",
            "in": "query",
            "type": "string"
          },
          {
            "name": "plan_feature_id",
            "in": "query",
            "type": "integer"
          },
          {
            "name": "feature_usage_id",
            "in": "query",
            "type": "string"
          },
          {
            "name": "model_id",
            "in": "query",
            "type": "string"
          },
          {
            "name": "model_type",
            "in": "query",
            "type": "string"
          },
          {
            "name": "created_at_from",
            "in": "query",
            "type": "string"
          },
          {
            "name": "created_at_to",
            "in": "query",
            "type": "string"
          },
          {
            "name": "offset",
            "in": "query",
            "type": "integer"
          },
          {
            "name": "limit",
            "in": "query",
            "type": "integer"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "api/v1/user/feature_usages": {
      "get": {
        "summary": "Get all FeatureUsages of current organization of current user",
        "tags": [
          "User::FeatureUsage"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "code",
            "in": "query",
            "type": "string"
          },
          {
            "name": "plan_feature_id",
            "in": "query",
            "type": "integer"
          },
          {
            "name": "created_at_from",
            "in": "query",
            "type": "string"
          },
          {
            "name": "created_at_to",
            "in": "query",
            "type": "string"
          },
          {
            "name": "offset",
            "in": "query",
            "type": "integer"
          },
          {
            "name": "limit",
            "in": "query",
            "type": "integer"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/user/feed/documents": {
      "get": {
        "summary": "Get all documents of current_user",
        "tags": [
          "User::Feed::Documents"
        ],
        "description": "Get all purchased documents of current_user",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "channel_id",
            "in": "query",
            "type": "integer",
            "description": "Channel ID"
          },
          {
            "name": "organization_id",
            "in": "query",
            "type": "integer",
            "description": "Org ID"
          },
          {
            "name": "order",
            "in": "query",
            "type": "string",
            "description": "Valid values are: 'asc', 'desc'. Default: 'desc'"
          },
          {
            "name": "offset",
            "in": "query",
            "type": "integer"
          },
          {
            "name": "limit",
            "in": "query",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/user/feed/recordings": {
      "get": {
        "summary": "Get all recordings of current_user",
        "tags": [
          "User::Feed::Recordings"
        ],
        "description": "Get all purchased recordings of current_user",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "channel_id",
            "in": "query",
            "type": "integer",
            "description": "Channel ID"
          },
          {
            "name": "organization_id",
            "in": "query",
            "type": "integer",
            "description": "Org ID"
          },
          {
            "name": "order",
            "in": "query",
            "type": "string",
            "description": "Valid values are: 'asc', 'desc'. Default: 'desc'"
          },
          {
            "name": "offset",
            "in": "query",
            "type": "integer"
          },
          {
            "name": "limit",
            "in": "query",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/user/feed/sessions": {
      "get": {
        "summary": "Get all sessions of current_user",
        "tags": [
          "User::Feed::Sessions"
        ],
        "description": "Get all purchased sessions of current_user",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "channel_id",
            "in": "query",
            "type": "integer",
            "description": "Channel ID"
          },
          {
            "name": "organization_id",
            "in": "query",
            "type": "integer",
            "description": "Org ID"
          },
          {
            "name": "presenter_id",
            "in": "query",
            "type": "integer",
            "description": "Presenter ID"
          },
          {
            "name": "booking",
            "in": "query",
            "type": "boolean",
            "description": "Booked session"
          },
          {
            "name": "order_by",
            "in": "query",
            "type": "string",
            "description": "Valid values are: 'start_at', 'end_at'. Default: 'start_at'"
          },
          {
            "name": "order",
            "in": "query",
            "type": "string",
            "description": "Valid values are: 'asc', 'desc'. Default: 'asc'"
          },
          {
            "name": "offset",
            "in": "query",
            "type": "integer"
          },
          {
            "name": "limit",
            "in": "query",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/user/feed/videos": {
      "get": {
        "summary": "Get all videos of current_user",
        "tags": [
          "User::Feed::Videos"
        ],
        "description": "Get all purchased videos of current_user",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "channel_id",
            "in": "query",
            "type": "integer",
            "description": "Channel ID"
          },
          {
            "name": "organization_id",
            "in": "query",
            "type": "integer",
            "description": "Org ID"
          },
          {
            "name": "presenter_id",
            "in": "query",
            "type": "integer",
            "description": "Presenter ID"
          },
          {
            "name": "order",
            "in": "query",
            "type": "string",
            "description": "Valid values are: 'asc', 'desc'. Default: 'asc'"
          },
          {
            "name": "offset",
            "in": "query",
            "type": "integer"
          },
          {
            "name": "limit",
            "in": "query",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/user/follows": {
      "get": {
        "summary": "Get all user follows",
        "tags": [
          "User::Follows"
        ],
        "description": "Get all user follows",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "followable_type",
            "in": "query",
            "type": "string",
            "required": false,
            "description": "Available values are: \"User\", \"Channel\", \"Organization\""
          },
          {
            "name": "order_by",
            "in": "query",
            "type": "string",
            "description": "Valid values are: 'created_at', 'updated_at'. Default: 'updated_at'"
          },
          {
            "name": "order",
            "in": "query",
            "type": "string",
            "description": "Valid values are: 'asc', 'desc'. Default: 'desc'"
          },
          {
            "name": "offset",
            "in": "query",
            "type": "integer"
          },
          {
            "name": "limit",
            "in": "query",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      },
      "post": {
        "summary": "Create new follow",
        "tags": [
          "User::Follows"
        ],
        "description": "Create new follow",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "followable_id",
            "in": "query",
            "type": "integer",
            "required": true
          },
          {
            "name": "followable_type",
            "in": "query",
            "type": "string",
            "required": true,
            "description": "Available values are: \"User\", \"Channel\", \"Organization\""
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/user/follows/{id}": {
      "get": {
        "summary": "Destroy follow",
        "tags": [
          "User::Follows"
        ],
        "description": "Destroy follow",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/user/follows/{followable_type}/{followable_id}": {
      "get": {
        "summary": "Show follow info",
        "tags": [
          "User::Follows"
        ],
        "description": "Show follow info",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "followable_id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "followable_type",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "Available values are: \"User\", \"Channel\", \"Organization\""
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      },
      "post": {
        "summary": "Create new follow",
        "tags": [
          "User::Follows"
        ],
        "description": "Create new follow",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "followable_id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "followable_type",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "Available values are: \"User\", \"Channel\", \"Organization\""
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      },
      "delete": {
        "summary": "Destroy follow",
        "tags": [
          "User::Follows"
        ],
        "description": "Destroy follow",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "followable_id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "followable_type",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "Available values are: \"User\", \"Channel\", \"Organization\""
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/user/free_subscriptions": {
      "get": {
        "summary": "Get all free subscriptions",
        "tags": [
          "User::FreeSubscriptions"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "offset",
            "in": "query",
            "type": "integer"
          },
          {
            "name": "limit",
            "in": "query",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      },
      "post": {
        "summary": "Create new subscription",
        "tags": [
          "User::FreeSubscriptions"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "file",
            "in": "formData",
            "type": "file",
            "description": "csv file or email"
          },
          {
            "name": "email",
            "in": "query",
            "type": "string",
            "description": "csv file or email"
          },
          {
            "name": "channel_id",
            "in": "query",
            "type": "integer",
            "required": true,
            "description": "channel id"
          },
          {
            "name": "months",
            "in": "query",
            "type": "integer",
            "required": true,
            "description": "1, 3, 6, 12"
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/user/free_subscriptions/new": {
      "get": {
        "summary": "Get channels list for new subscription",
        "tags": [
          "User::FreeSubscriptions"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/user/im/channel_conversations": {
      "get": {
        "summary": "All User Channel Conversations",
        "tags": [
          "User::Im::Channel::Conversation"
        ],
        "description": "Get all conversations with pagination",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "limit",
            "in": "query",
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/user/im/conversations/{conversation_id}/messages": {
      "get": {
        "summary": "All conversation messages",
        "tags": [
          "User::Im::Messages"
        ],
        "description": "Get all conversation messages with pagination",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": false
          },
          {
            "name": "conversation_id",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "created_at_from",
            "in": "query",
            "type": "string"
          },
          {
            "name": "created_at_to",
            "in": "query",
            "type": "string"
          },
          {
            "name": "order",
            "in": "query",
            "type": "string",
            "description": "Valid values are: 'asc', 'desc'. Default: 'desc'"
          },
          {
            "name": "limit",
            "in": "query",
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      },
      "post": {
        "summary": "Create Message",
        "tags": [
          "User::Im::Messages"
        ],
        "description": "",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "conversation_id",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "message",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "body"
              ],
              "properties": {
                "body": {
                  "type": "text",
                  "example": "Lorem Ipsum Dolores Sit Amet"
                },
                "deleted_at": {
                  "type": "datetime",
                  "example": "2020-12-01 22:17:32 +0200"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/user/im/conversations/{conversation_id}/messages/{id}": {
      "put": {
        "summary": "Update Message",
        "tags": [
          "User::Im::Messages"
        ],
        "description": "",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "conversation_id",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "message",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "required": [
                "body"
              ],
              "properties": {
                "body": {
                  "type": "text",
                  "example": "Lorem Ipsum Dolores Sit Amet"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/user/im/conversations/{conversation_id}/messages/": {
      "delete": {
        "summary": "Mark Message as Deleted",
        "tags": [
          "User::Im::Messages"
        ],
        "description": "",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "conversation_id",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "id",
            "in": "query",
            "type": "string",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/user/im/sessions/{session_id}/conversation": {
      "get": {
        "summary": "Get session conversation",
        "tags": [
          "User::Im::Session::Conversation"
        ],
        "description": "Get session conversation",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": false
          },
          {
            "name": "session_id",
            "in": "path",
            "type": "integer",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/user/interactive_access_tokens": {
      "get": {
        "summary": "Get list of session access tokens",
        "tags": [
          "User::InteractiveAccessTokens"
        ],
        "description": "Get list of session access tokens",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "session_id",
            "in": "query",
            "type": "integer",
            "required": true
          },
          {
            "name": "individual",
            "in": "query",
            "type": "boolean",
            "required": false,
            "description": "Only single value could be set to true: individual or shared. Individual is checked first"
          },
          {
            "name": "shared",
            "in": "query",
            "type": "boolean",
            "required": false,
            "description": "Only single value could be set to true: individual or shared"
          },
          {
            "name": "order_by",
            "in": "query",
            "type": "string",
            "description": "Valid values are: 'created_at', 'updated_at'. Default: 'updated_at'"
          },
          {
            "name": "order",
            "in": "query",
            "type": "string",
            "description": "Valid values are: 'asc', 'desc'. Default: 'desc'"
          },
          {
            "name": "offset",
            "in": "query",
            "type": "integer"
          },
          {
            "name": "limit",
            "in": "query",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      },
      "post": {
        "summary": "Create InteractiveAccessToken",
        "tags": [
          "User::InteractiveAccessTokens"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "session_id",
            "in": "query",
            "type": "integer",
            "required": true
          },
          {
            "name": "individual",
            "in": "query",
            "type": "boolean",
            "required": true,
            "description": "Individual access tokens work only once. Session can have many individual tokens and only one public(non-individual) token."
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/user/interactive_access_tokens/{id}": {
      "get": {
        "summary": "Get InteractiveAccessToken info",
        "tags": [
          "User::InteractiveAccessTokens"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      },
      "put": {
        "summary": "Update InteractiveAccessToken",
        "tags": [
          "User::InteractiveAccessTokens"
        ],
        "description": "Refresh token",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      },
      "delete": {
        "summary": "Delete InteractiveAccessToken",
        "tags": [
          "User::InteractiveAccessTokens"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/user/mailing/emails": {
      "post": {
        "summary": "Send email",
        "tags": [
          "User::Mailing::Emails"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "template_id",
            "in": "query",
            "type": "integer",
            "required": true
          },
          {
            "name": "contact_ids",
            "in": "query",
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          {
            "name": "body",
            "in": "query",
            "type": "string",
            "required": true
          },
          {
            "name": "subject",
            "in": "query",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/user/mailing/emails/preview": {
      "get": {
        "summary": "Get email preview",
        "tags": [
          "User::Mailing::Emails"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "template_id",
            "in": "query",
            "type": "integer",
            "required": true
          },
          {
            "name": "contact_ids",
            "in": "query",
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          {
            "name": "body",
            "in": "query",
            "type": "string",
            "required": true
          },
          {
            "name": "subject",
            "in": "query",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/user/mailing/templates": {
      "get": {
        "summary": "All Email Templates",
        "tags": [
          "User::Mailing::Templates"
        ],
        "description": "Get email templates",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/user/marketing_tools/opt_in_modals": {
      "get": {
        "summary": "List all Opt-in Modals",
        "tags": [
          "User::MarketingTools::OptInModals"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "type": "string"
          },
          {
            "name": "offset",
            "in": "query",
            "type": "string"
          },
          {
            "name": "order_by",
            "in": "query",
            "type": "string",
            "description": "Valid values are: 'title', 'created_at'. Default: 'title'"
          },
          {
            "name": "order",
            "in": "query",
            "type": "string",
            "description": "Valid values are: 'asc', 'desc'. Default: 'desc'"
          },
          {
            "name": "model_type",
            "in": "query",
            "type": "string",
            "description": "Valid values are: 'Channel', 'Video', 'Recording', 'Session'"
          },
          {
            "name": "model_id",
            "in": "query",
            "type": "string",
            "description": "Required if model_type provided"
          },
          {
            "name": "active",
            "in": "query",
            "type": "boolean",
            "description": "Valid values are: 1, 0, true, false, t, f"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      },
      "post": {
        "summary": "Create Opt-in Modal",
        "tags": [
          "User::MarketingTools::OptInModals"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "title",
            "in": "query",
            "type": "string",
            "required": true
          },
          {
            "name": "description",
            "in": "query",
            "type": "string"
          },
          {
            "name": "active",
            "in": "query",
            "type": "boolean"
          },
          {
            "name": "trigger_time",
            "in": "query",
            "type": "integer",
            "description": "In Seconds. Example: 120"
          },
          {
            "name": "channel_uuid",
            "in": "query",
            "type": "string",
            "required": true
          },
          {
            "name": "system_template_attributes[name]",
            "in": "query",
            "type": "string",
            "required": true
          },
          {
            "name": "system_template_attributes[body]",
            "in": "query",
            "type": "string",
            "required": true,
            "description": "Valid JS object"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/user/marketing_tools/opt_in_modals/{id}": {
      "get": {
        "summary": "Show Opt-in Modal",
        "tags": [
          "User::MarketingTools::OptInModals"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      },
      "put": {
        "summary": "Update Opt-in Modal",
        "tags": [
          "User::MarketingTools::OptInModals"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "title",
            "in": "query",
            "type": "string"
          },
          {
            "name": "description",
            "in": "query",
            "type": "string"
          },
          {
            "name": "active",
            "in": "query",
            "type": "boolean"
          },
          {
            "name": "trigger_time",
            "in": "query",
            "type": "integer",
            "description": "In Seconds. Example: 120"
          },
          {
            "name": "channel_uuid",
            "in": "query",
            "type": "string"
          },
          {
            "name": "system_template_attributes[name]",
            "in": "query",
            "type": "string"
          },
          {
            "name": "system_template_attributes[body]",
            "in": "query",
            "type": "string",
            "description": "Valid JS object"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      },
      "delete": {
        "summary": "Destroy Opt-in Modal",
        "tags": [
          "User::MarketingTools::OptInModals"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/user/mentions": {
      "get": {
        "summary": "Get all suggestions for mention",
        "tags": [
          "User::Mentions"
        ],
        "description": "Get all suggestions for mention by part of user display name",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "query",
            "in": "query",
            "type": "string",
            "required": true,
            "description": "Part of user display name to search by"
          },
          {
            "name": "order_by",
            "in": "query",
            "type": "string",
            "description": "Valid values are: 'created_at', 'updated_at', 'slug'. Default: 'slug'"
          },
          {
            "name": "order",
            "in": "query",
            "type": "string",
            "description": "Valid values are: 'asc', 'desc'. Default: 'asc'"
          },
          {
            "name": "offset",
            "in": "query",
            "type": "integer",
            "description": "Default 0"
          },
          {
            "name": "limit",
            "in": "query",
            "type": "integer",
            "description": "Default 15"
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/user/notifications": {
      "get": {
        "summary": "All User Notifications",
        "tags": [
          "User::Notifications"
        ],
        "description": "Get all user notifications matching specified filters",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "is_read",
            "in": "query",
            "type": "boolean",
            "required": false
          },
          {
            "name": "order_by",
            "in": "query",
            "type": "string",
            "description": "Valid values are: 'created_at', 'updated_at'. Default: 'created_at'"
          },
          {
            "name": "order",
            "in": "query",
            "type": "string",
            "description": "Valid values are: 'asc', 'desc'. Default: 'desc'"
          },
          {
            "name": "offset",
            "in": "query",
            "type": "integer"
          },
          {
            "name": "limit",
            "in": "query",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/user/notifications/{id}": {
      "get": {
        "summary": "Get Notification info",
        "tags": [
          "User::Notifications"
        ],
        "description": "",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/user/notifications/": {
      "delete": {
        "summary": "Delete Notification/Notifications",
        "tags": [
          "User::Notifications"
        ],
        "description": "",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "id, array of ids or 'all'"
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/user/organization_memberships": {
      "get": {
        "summary": "All OrganizationMemberships of current user",
        "tags": [
          "User::OrganizationMemberships"
        ],
        "description": "",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "organization_id",
            "in": "query",
            "type": "integer"
          },
          {
            "name": "status",
            "in": "query",
            "type": "string"
          },
          {
            "name": "order",
            "in": "query",
            "type": "string",
            "description": "Valid values are: 'asc', 'desc'. Default: 'asc'"
          },
          {
            "name": "order_by",
            "in": "query",
            "type": "string",
            "description": "Valid values are: 'id', 'created_at', 'updated_at'. Default: 'id'"
          },
          {
            "name": "offset",
            "in": "query",
            "type": "integer"
          },
          {
            "name": "limit",
            "in": "query",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/user/organization_memberships/{id}": {
      "get": {
        "summary": "Get OrganizationMembership info",
        "tags": [
          "User::OrganizationMemberships"
        ],
        "description": "",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      },
      "put": {
        "summary": "Update OrganizationMembership",
        "tags": [
          "User::OrganizationMemberships"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "status",
            "in": "query",
            "type": "string",
            "description": "Available statuses: 'pending', 'active', 'cancelled', 'suspended'"
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/user/organizations": {
      "get": {
        "summary": "Get all user organizations info",
        "tags": [
          "User::Organizations"
        ],
        "description": "Get all user organizations info",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/user/organizations/current": {
      "get": {
        "summary": "Get current organization info",
        "tags": [
          "User::Organizations"
        ],
        "description": "Get current organization info",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      },
      "put": {
        "summary": "Update current organization info",
        "tags": [
          "User::Organizations"
        ],
        "description": "Update current organization info",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": false
          },
          {
            "name": "frontend-settings",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "example": "test"
                },
                "descriptiom": {
                  "type": "string",
                  "example": "test"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/user/organizations/:id/set_current": {
      "post": {
        "summary": "Update current organization info",
        "tags": [
          "User::Organizations"
        ],
        "description": "Update current organization",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": false
          },
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "example": "1",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/user/page_builder/home_banners": {
      "post": {
        "summary": "Create Home Banner",
        "tags": [
          "User::PageBuilder::HomeBanners"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "image[crop_x]",
            "in": "query",
            "type": "float",
            "example": "3.232332"
          },
          {
            "name": "image[crop_y]",
            "in": "query",
            "type": "float",
            "example": "3.232332"
          },
          {
            "name": "image[crop_w]",
            "in": "query",
            "type": "float",
            "example": "3.232332"
          },
          {
            "name": "image[crop_h]",
            "in": "query",
            "type": "float",
            "example": "3.232332"
          },
          {
            "name": "image[rotate]",
            "in": "query",
            "type": "integer",
            "example": "90"
          },
          {
            "name": "file",
            "in": "formData",
            "type": "file",
            "description": "Image file"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/user/page_builder/home_banners/{id}": {
      "get": {
        "summary": "Show Home Banner",
        "tags": [
          "User::PageBuilder::HomeBanners"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "name",
            "in": "query",
            "type": "string",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      },
      "delete": {
        "summary": "Destroy Home Banner",
        "tags": [
          "User::PageBuilder::HomeBanners"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "name",
            "in": "query",
            "type": "string",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/user/page_builder/model_templates": {
      "get": {
        "summary": "List all Model Templates of organization",
        "tags": [
          "User::PageBuilder::ModelTemplates"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "organization_id",
            "in": "query",
            "type": "string",
            "required": true
          },
          {
            "name": "model_id",
            "in": "query",
            "type": "string"
          },
          {
            "name": "model_type",
            "in": "query",
            "type": "string",
            "description": "Valid values are: 'User', 'Channel', 'Organization'"
          },
          {
            "name": "order_by",
            "in": "query",
            "type": "string",
            "description": "Valid values are: 'created_at', 'views_count'. Default: 'views_count'"
          },
          {
            "name": "order",
            "in": "query",
            "type": "string",
            "description": "Valid values are: 'asc', 'desc'. Default: 'desc'"
          },
          {
            "name": "limit",
            "in": "query",
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "type": "integer"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      },
      "post": {
        "summary": "Create Model Template",
        "tags": [
          "User::PageBuilder::ModelTemplates"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "model_id",
            "in": "query",
            "type": "string",
            "required": true
          },
          {
            "name": "model_type",
            "in": "query",
            "type": "string",
            "required": true,
            "description": "Valid values are: 'User', 'Channel', 'Organization'"
          },
          {
            "name": "body",
            "in": "query",
            "type": "string",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      },
      "delete": {
        "summary": "Destroy Model Template",
        "tags": [
          "User::PageBuilder::ModelTemplates"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "model_id",
            "in": "query",
            "type": "string",
            "required": true
          },
          {
            "name": "model_type",
            "in": "query",
            "type": "string",
            "required": true,
            "description": "Valid values are: 'User', 'Channel', 'Organization'"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/user/page_builder/model_templates/{id}": {
      "get": {
        "summary": "Show Model Template",
        "tags": [
          "User::PageBuilder::ModelTemplates"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "model_id",
            "in": "query",
            "type": "string",
            "required": true
          },
          {
            "name": "model_type",
            "in": "query",
            "type": "string",
            "required": true,
            "description": "Valid values are: 'User', 'Channel', 'Organization'"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/user/page_builder/system_templates": {
      "get": {
        "summary": "List all System Templates",
        "tags": [
          "User::PageBuilder::SystemTemplates"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "type": "string"
          },
          {
            "name": "offset",
            "in": "query",
            "type": "string"
          },
          {
            "name": "order_by",
            "in": "query",
            "type": "string",
            "description": "Valid values are: 'name', 'created_at'. Default: 'name'"
          },
          {
            "name": "order",
            "in": "query",
            "type": "string",
            "description": "Valid values are: 'asc', 'desc'. Default: 'desc'"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      },
      "post": {
        "summary": "Create System Template",
        "tags": [
          "User::PageBuilder::SystemTemplates"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "name",
            "in": "query",
            "type": "string",
            "required": true
          },
          {
            "name": "body",
            "in": "query",
            "type": "string",
            "required": true,
            "description": "Valid JS object"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/user/page_builder/system_templates/template": {
      "get": {
        "summary": "Show System Template",
        "tags": [
          "User::PageBuilder::SystemTemplates"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "name",
            "in": "query",
            "type": "string",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      },
      "delete": {
        "summary": "Destroy System Template",
        "tags": [
          "User::PageBuilder::SystemTemplates"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "name",
            "in": "query",
            "type": "string",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/user/payment_methods": {
      "get": {
        "summary": "Get all user cards",
        "tags": [
          "User::PaymentMethods"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/user/payment_transactions": {
      "get": {
        "summary": "Get user payment_transactions",
        "tags": [
          "User::PaymentTransactions"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "offset",
            "in": "query",
            "type": "integer"
          },
          {
            "name": "limit",
            "in": "query",
            "type": "integer"
          },
          {
            "name": "purchased_item_id",
            "in": "query",
            "type": "integer"
          },
          {
            "name": "purchased_item_type",
            "in": "query",
            "type": "string",
            "description": "eg. StripeDb::ServicePlan"
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/user/payouts/payout_methods/{payout_method_id}/connect_accounts": {
      "post": {
        "summary": "Create connect account for payout method",
        "tags": [
          "User::Payouts::ConnectAccounts"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": false
          },
          {
            "name": "payout_method_id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "account_info",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string",
                  "example": "user@example.com",
                  "required": true
                },
                "business_website": {
                  "type": "string",
                  "example": "https://example.com",
                  "required": true
                },
                "mcc": {
                  "type": "string",
                  "example": "7623",
                  "enum": [

                  ],
                  "required": true
                },
                "first_name": {
                  "type": "string",
                  "example": "John",
                  "required": true
                },
                "last_name": {
                  "type": "string",
                  "example": "Doe",
                  "required": true
                },
                "date_of_birth": {
                  "type": "string",
                  "example": "03/22/2000",
                  "required": true
                },
                "ssn_last_4": {
                  "type": "string",
                  "example": "0000",
                  "required": true
                },
                "phone": {
                  "type": "string",
                  "example": "+15555550000",
                  "required": true
                },
                "address_line_1": {
                  "type": "string",
                  "example": "Ololo 24 st",
                  "required": true
                },
                "address_line_2": {
                  "type": "string"
                },
                "city": {
                  "type": "string",
                  "required": true
                },
                "state": {
                  "type": "string",
                  "example": "AK"
                },
                "zip": {
                  "type": "string"
                },
                "country": {
                  "type": "string",
                  "example": "US"
                }
              }
            }
          },
          {
            "name": "passport_file",
            "in": "formData",
            "type": "file"
          },
          {
            "name": "additional_document_file",
            "in": "formData",
            "type": "file"
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/user/payouts/payout_methods/{payout_method_id}/connect_accounts/{id}": {
      "put": {
        "summary": "Update connect account",
        "tags": [
          "User::Payouts::ConnectAccounts"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": false
          },
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "payout_method_id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "account_info",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string",
                  "example": "user@example.com",
                  "required": true
                },
                "business_website": {
                  "type": "string",
                  "example": "https://example.com",
                  "required": true
                },
                "mcc": {
                  "type": "string",
                  "example": "7623",
                  "enum": [

                  ],
                  "required": true
                },
                "first_name": {
                  "type": "string",
                  "example": "John",
                  "required": true
                },
                "last_name": {
                  "type": "string",
                  "example": "Doe",
                  "required": true
                },
                "date_of_birth": {
                  "type": "string",
                  "example": "03/22/2000",
                  "required": true
                },
                "ssn_last_4": {
                  "type": "string",
                  "example": "0000",
                  "required": true
                },
                "phone": {
                  "type": "string",
                  "example": "+15555550000",
                  "required": true
                },
                "address_line_1": {
                  "type": "string",
                  "example": "Ololo 24 st",
                  "required": true
                },
                "address_line_2": {
                  "type": "string"
                },
                "city": {
                  "type": "string",
                  "required": true
                },
                "state": {
                  "type": "string",
                  "example": "AK"
                },
                "zip": {
                  "type": "string",
                  "required": true
                },
                "country": {
                  "type": "string",
                  "example": "US",
                  "required": true
                }
              }
            }
          },
          {
            "name": "passport_file",
            "in": "formData",
            "type": "file"
          },
          {
            "name": "additional_document_file",
            "in": "formData",
            "type": "file"
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/user/payouts/payout_methods/{payout_method_id}/connect_bank_accounts": {
      "post": {
        "summary": "Create connect bank account for payout method",
        "tags": [
          "User::Payouts::ConnectBankAccounts"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": false
          },
          {
            "name": "payout_method_id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "bank_account",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "routing_number": {
                  "type": "string",
                  "example": "110000000",
                  "required": true
                },
                "account_number": {
                  "type": "string",
                  "example": "000123456789",
                  "required": true
                },
                "currency": {
                  "type": "string",
                  "example": "USD",
                  "required": true
                },
                "account_holder_name": {
                  "type": "string",
                  "example": "John Doe",
                  "required": true
                },
                "account_holder_type": {
                  "type": "string",
                  "example": "individual",
                  "required": true
                },
                "country": {
                  "type": "string",
                  "example": "US",
                  "required": true
                }
              }
            }
          },
          {
            "name": "account_file",
            "in": "formData",
            "type": "file"
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/user/payouts/payout_methods/{payout_method_id}/connect_bank_accounts/{id}": {
      "put": {
        "summary": "Update connect account",
        "tags": [
          "User::Payouts::ConnectBankAccounts"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": false
          },
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "payout_method_id",
            "type": "string",
            "in": "path",
            "required": true
          },
          {
            "name": "bank_account",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "routing_number": {
                  "type": "string",
                  "example": "110000000",
                  "required": true
                },
                "account_number": {
                  "type": "string",
                  "example": "000123456789",
                  "required": true
                },
                "currency": {
                  "type": "string",
                  "example": "USD",
                  "required": true
                },
                "account_holder_name": {
                  "type": "string",
                  "example": "John Doe",
                  "required": true
                },
                "account_holder_type": {
                  "type": "string",
                  "example": "individual",
                  "required": true
                },
                "country": {
                  "type": "string",
                  "example": "US",
                  "required": true
                }
              }
            }
          },
          {
            "name": "account_file",
            "in": "formData",
            "type": "file"
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/user/payouts/countries": {
      "get": {
        "summary": "Countries list for Payout methods",
        "tags": [
          "User::Payouts::Countries"
        ],
        "description": "Get all countries for payout methods",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/user/payouts/merchant_categories": {
      "get": {
        "summary": "Merchant Categories list for Payout methods",
        "tags": [
          "User::Payouts::MerchantCategories"
        ],
        "description": "Get all Merchant Categories for payout methods",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/user/payouts/payout_methods": {
      "get": {
        "summary": "Payout methods for current organization",
        "tags": [
          "User::Payouts::PayoutMethods"
        ],
        "description": "Get all payout methods for current user organization",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "offset",
            "in": "query",
            "type": "integer"
          },
          {
            "name": "limit",
            "in": "query",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      },
      "post": {
        "summary": "Create payout method",
        "tags": [
          "User::Payouts::PayoutMethods"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": false
          },
          {
            "name": "payout_method",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "business_type": {
                  "type": "string",
                  "example": "My first group"
                },
                "provider": {
                  "type": "string",
                  "example": "stripe",
                  "enum": [
                    "stripe"
                  ]
                },
                "country": {
                  "type": "string",
                  "example": "US",
                  "enum": [
                    "NL",
                    "GB",
                    "US"
                  ]
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/user/payouts/payout_methods/{id}": {
      "put": {
        "summary": "Update payout method",
        "tags": [
          "User::Payouts::PayoutMethods"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": false
          },
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "accept_tos",
            "in": "query",
            "type": "boolean",
            "example": true
          },
          {
            "name": "default",
            "in": "query",
            "type": "boolean",
            "example": true
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      },
      "delete": {
        "summary": "Delete payout method",
        "tags": [
          "User::Payouts::PayoutMethods"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": false
          },
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/user/payouts/states": {
      "get": {
        "summary": "States list by country for Payout methods",
        "tags": [
          "User::Payouts::States"
        ],
        "description": "Get all country states for payout methods",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "country_code",
            "in": "query",
            "type": "string",
            "example": "US",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/user/poll/poll_templates": {
      "get": {
        "summary": "All poll templates",
        "tags": [
          "User::Poll::PollTemplates"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      },
      "post": {
        "summary": "Create poll template",
        "tags": [
          "User::Poll::PollTemplates"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": false
          },
          {
            "name": "poll_template",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "required": false
                },
                "question": {
                  "type": "string",
                  "required": true
                },
                "options_attributes": {
                  "type": "array",
                  "required": true,
                  "items": {
                    "type": "object",
                    "properties": {
                      "title": {
                        "type": "string",
                        "required": true
                      },
                      "position": {
                        "type": "integer",
                        "required": true
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/user/poll/poll_templates/{id}": {
      "get": {
        "summary": "Get poll template",
        "tags": [
          "User::Poll::PollTemplates"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      },
      "put": {
        "summary": "Update poll template",
        "tags": [
          "User::Poll::PollTemplates"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": false
          },
          {
            "name": "poll_template",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "required": false
                },
                "question": {
                  "type": "string",
                  "required": true
                },
                "options_attributes": {
                  "type": "array",
                  "required": true,
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer",
                        "required": false
                      },
                      "title": {
                        "type": "string",
                        "required": true
                      },
                      "position": {
                        "type": "integer",
                        "required": true
                      },
                      "_destroy": {
                        "type": "boolean",
                        "required": false
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      },
      "delete": {
        "summary": "Delete poll template",
        "tags": [
          "User::Poll::PollTemplates"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/user/poll/poll_templates/{poll_template_id}/polls": {
      "get": {
        "summary": "All poll",
        "tags": [
          "User::Poll::Polls"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": false
          },
          {
            "name": "poll_template_id",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      },
      "post": {
        "summary": "Create and attach poll",
        "tags": [
          "User::Poll::Polls"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": false
          },
          {
            "name": "poll_template_id",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "poll",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "model_id": {
                  "type": "integer",
                  "required": true
                },
                "model_type": {
                  "type": "string",
                  "required": true
                },
                "duration": {
                  "type": "integer",
                  "required": false
                },
                "multiselect": {
                  "type": "boolean",
                  "required": true
                },
                "manual_stop": {
                  "type": "boolean",
                  "required": true
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/user/poll/poll_templates/{poll_template_id}/polls/{id}": {
      "get": {
        "summary": "Get poll",
        "tags": [
          "User::Poll::Polls"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "poll_template_id",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      },
      "put": {
        "summary": "Update poll",
        "tags": [
          "User::Poll::Polls"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "poll_template_id",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": false
          },
          {
            "name": "poll",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "enabled": {
                  "type": "boolean",
                  "required": true
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      },
      "delete": {
        "summary": "Delete poll template",
        "tags": [
          "User::Poll::Polls"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "poll_template_id",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/user/poll/poll_templates/{poll_template_id}/polls/{poll_id}/vote": {
      "post": {
        "summary": "Vote",
        "tags": [
          "User::Poll::Polls"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "poll_id",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "poll_template_id",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": false
          },
          {
            "name": "option_ids",
            "in": "query",
            "type": "array",
            "required": true,
            "items": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/user/receipts/{id}": {
      "get": {
        "summary": "Get Receipt info",
        "tags": [
          "User::Receipts"
        ],
        "description": "",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/user/receipts/{id}/mark_as_read": {
      "put": {
        "summary": "Update receipt attributes",
        "tags": [
          "User::Receipts"
        ],
        "description": "",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "receipt",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "is_read": {
                  "type": "boolean",
                  "example": true
                },
                "trashed": {
                  "type": "boolean",
                  "example": false
                },
                "deleted": {
                  "type": "boolean",
                  "example": false
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/user/recordings": {
      "get": {
        "summary": "Get all recordings uploaded to current user's owned channels or purchased by user",
        "tags": [
          "User::Recordings"
        ],
        "description": "Get all recordings uploaded to current user's owned channels or purchased by user",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": false
          },
          {
            "name": "recordings_type",
            "in": "query",
            "type": "string",
            "description": "Valid values are: 'uploaded', 'purchased'. Default: 'uploaded'"
          },
          {
            "name": "channel_id",
            "in": "query",
            "type": "integer"
          },
          {
            "name": "limit",
            "in": "query",
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "type": "integer"
          },
          {
            "name": "order_by",
            "in": "query",
            "type": "string",
            "description": "Valid values are: 'id', 'created_at', 'updated_at'. Default: 'created_at'"
          },
          {
            "name": "order",
            "in": "query",
            "type": "string",
            "description": "Valid values are: 'asc', 'desc'. Default: 'desc'"
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/user/recordings/{id}": {
      "get": {
        "summary": "Get recording info",
        "tags": [
          "User::Recordings"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": false
          },
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/user/reports/channels": {
      "get": {
        "summary": "Channels for reports",
        "tags": [
          "User::Reports::Channels"
        ],
        "description": "Get all channels for provided organizaion or current user organization",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "organization_ids",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "name",
            "in": "query",
            "type": "string",
            "required": false
          },
          {
            "name": "offset",
            "in": "query",
            "type": "integer"
          },
          {
            "name": "limit",
            "in": "query",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/user/reports/network_sales_reports": {
      "get": {
        "summary": "All Network Sales Reports",
        "tags": [
          "User::Reports::NetworkSalesReports"
        ],
        "description": "Get all sales reports matching specified filters",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "organization_ids",
            "in": "query",
            "type": "string",
            "required": false,
            "example": "[1,2]",
            "description": "Array of organization ids"
          },
          {
            "name": "channel_ids",
            "in": "query",
            "type": "string",
            "required": false,
            "example": "[1,2]",
            "description": "Array of channel ids"
          },
          {
            "name": "date_from",
            "in": "query",
            "type": "string",
            "example": "2020-12-09T14:02:15.620Z",
            "format": "date-time"
          },
          {
            "name": "date_to",
            "in": "query",
            "type": "string",
            "example": "2020-12-10T14:02:15.620Z",
            "format": "date-time"
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/user/reports/organizations": {
      "get": {
        "summary": "Channels for reports",
        "tags": [
          "User::Reports::Organizations"
        ],
        "description": "Get all Organizations for current user",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "name",
            "in": "query",
            "type": "string",
            "required": false
          },
          {
            "name": "offset",
            "in": "query",
            "type": "integer"
          },
          {
            "name": "limit",
            "in": "query",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/user/reviews": {
      "get": {
        "summary": "Get model reviews",
        "tags": [
          "User::Reviews"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "reviewable_type",
            "in": "query",
            "type": "string",
            "required": true,
            "description": "Valid values are: 'Organization', 'Channel', 'Session', 'Video', 'Recording'"
          },
          {
            "name": "reviewable_id",
            "in": "query",
            "type": "integer",
            "required": true
          },
          {
            "name": "order",
            "in": "query",
            "type": "string",
            "description": "Valid values are: 'asc', 'desc'. Default: 'asc'"
          },
          {
            "name": "created_at_from",
            "in": "query",
            "type": "string",
            "description": "Example: \"2021-09-29T00:00:00.000+00:00\""
          },
          {
            "name": "created_at_to",
            "in": "query",
            "type": "string",
            "description": "Example: \"2021-09-30T23:59:59.999+00:00\""
          },
          {
            "name": "scope",
            "in": "query",
            "type": "string",
            "description": "Available values: \"participant\", \"organizer\""
          },
          {
            "name": "visible",
            "in": "query",
            "type": "boolean"
          },
          {
            "name": "offset",
            "in": "query",
            "type": "integer"
          },
          {
            "name": "limit",
            "in": "query",
            "type": "integer"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/user/reviews/{reviewable_type}/{reviewable_id}": {
      "get": {
        "summary": "Get model reviews",
        "tags": [
          "User::Reviews"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "reviewable_type",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "Valid values are: 'Organization', 'Channel', 'Session', 'Video', 'Recording'"
          },
          {
            "name": "reviewable_id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "order",
            "in": "query",
            "type": "string",
            "description": "Valid values are: 'asc', 'desc'. Default: 'asc'"
          },
          {
            "name": "offset",
            "in": "query",
            "type": "integer"
          },
          {
            "name": "limit",
            "in": "query",
            "type": "integer"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/user/reviews/current": {
      "get": {
        "summary": "Show own review for model",
        "tags": [
          "User::Reviews"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "reviewable_type",
            "in": "query",
            "type": "string",
            "required": true,
            "description": "Valid values are: 'Session', 'Video', 'Recording'"
          },
          {
            "name": "reviewable_id",
            "in": "query",
            "type": "integer",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/user/reviews/:id": {
      "get": {
        "summary": "Show specific review for model",
        "tags": [
          "User::Reviews"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "reviewable_type",
            "in": "query",
            "type": "string",
            "required": true,
            "description": "Valid values are: 'Session', 'Video', 'Recording'"
          },
          {
            "name": "reviewable_id",
            "in": "query",
            "type": "integer",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      },
      "post": {
        "summary": "Create review for model",
        "tags": [
          "User::Reviews"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "reviewable_type",
            "in": "query",
            "type": "string",
            "required": true,
            "description": "Valid values are: 'Session', 'Video', 'Recording'"
          },
          {
            "name": "reviewable_id",
            "in": "query",
            "type": "integer",
            "required": true
          },
          {
            "name": "title",
            "in": "query",
            "type": "string"
          },
          {
            "name": "overall_experience_comment",
            "in": "query",
            "type": "string"
          },
          {
            "name": "technical_experience_comment",
            "in": "query",
            "type": "string"
          },
          {
            "name": "immerss_experience",
            "in": "query",
            "type": "string"
          },
          {
            "name": "quality_of_content",
            "in": "query",
            "type": "string"
          },
          {
            "name": "presenter_performance",
            "in": "query",
            "type": "string"
          },
          {
            "name": "video_quality",
            "in": "query",
            "type": "string"
          },
          {
            "name": "sound_quality",
            "in": "query",
            "type": "string"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      },
      "put": {
        "summary": "Update review",
        "tags": [
          "User::Reviews"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "reviewable_type",
            "in": "query",
            "type": "string",
            "required": true,
            "description": "Valid values are: 'Session', 'Video', 'Recording'"
          },
          {
            "name": "reviewable_id",
            "in": "query",
            "type": "integer",
            "required": true
          },
          {
            "name": "visible",
            "in": "query",
            "type": "boolean",
            "description": "Available only for commentable owner or moderator"
          },
          {
            "name": "title",
            "in": "query",
            "type": "string",
            "description": "Available only for review owner"
          },
          {
            "name": "overall_experience_comment",
            "in": "query",
            "type": "string",
            "description": "Available only for review owner"
          },
          {
            "name": "technical_experience_comment",
            "in": "query",
            "type": "string",
            "description": "Available only for review owner"
          },
          {
            "name": "immerss_experience",
            "in": "query",
            "type": "string",
            "description": "Available only for review owner"
          },
          {
            "name": "quality_of_content",
            "in": "query",
            "type": "string",
            "description": "Available only for review owner"
          },
          {
            "name": "presenter_performance",
            "in": "query",
            "type": "string",
            "description": "Available only for review owner"
          },
          {
            "name": "video_quality",
            "in": "query",
            "type": "string",
            "description": "Available only for review owner"
          },
          {
            "name": "sound_quality",
            "in": "query",
            "type": "string",
            "description": "Available only for review owner"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      },
      "delete": {
        "summary": "Destroy review",
        "tags": [
          "User::Reviews"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/user/rooms/{room_id}/room_members": {
      "get": {
        "summary": "Get room members",
        "tags": [
          "User::RoomMembers"
        ],
        "description": "",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "room_id",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "order_by",
            "in": "query",
            "type": "string",
            "description": "Valid values are: 'created_at', 'updated_at'. Default: 'created_at'"
          },
          {
            "name": "order",
            "in": "query",
            "type": "string",
            "description": "Valid values are: 'asc', 'desc'. Default: 'asc'"
          },
          {
            "name": "offset",
            "in": "query",
            "type": "integer"
          },
          {
            "name": "limit",
            "in": "query",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/user/rooms/{room_id}/room_members/mute_all": {
      "post": {
        "summary": "Mute all room members",
        "tags": [
          "User::RoomMembers"
        ],
        "description": "",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "room_id",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/user/rooms/{room_id}/room_members/unmute_all": {
      "post": {
        "summary": "Unmute all room members",
        "tags": [
          "User::RoomMembers"
        ],
        "description": "",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "room_id",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/user/rooms/{room_id}/room_members/start_all_videos": {
      "post": {
        "summary": "Start videos for all room members",
        "tags": [
          "User::RoomMembers"
        ],
        "description": "",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "room_id",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/user/rooms/{room_id}/room_members/stop_all_videos": {
      "post": {
        "summary": "Stop videos for all room members",
        "tags": [
          "User::RoomMembers"
        ],
        "description": "",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "room_id",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/user/rooms/{room_id}/room_members/enable_all_backstage": {
      "post": {
        "summary": "Disable backstage for all room members",
        "tags": [
          "User::RoomMembers"
        ],
        "description": "",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "room_id",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/user/rooms/{room_id}/room_members/{id}/ban_kick": {
      "post": {
        "summary": "Ban+kick room member",
        "tags": [
          "User::RoomMembers"
        ],
        "description": "",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "room_id",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "ban_reason_id",
            "in": "query",
            "type": "integer",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/user/rooms/{room_id}/room_members/{id}/unban": {
      "put": {
        "summary": "Unban room member",
        "tags": [
          "User::RoomMembers"
        ],
        "description": "",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "room_id",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/user/rooms/{room_id}/room_members/{id}/allow_control": {
      "post": {
        "summary": "Allow control to room member",
        "tags": [
          "User::RoomMembers"
        ],
        "description": "",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "room_id",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "room member user_id"
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/user/rooms/{room_id}/room_members/{id}/disable_control": {
      "post": {
        "summary": "Disable room control for room member",
        "tags": [
          "User::RoomMembers"
        ],
        "description": "",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "room_id",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "room member user_id"
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/user/rooms/{room_id}/room_members/{id}/mute": {
      "post": {
        "summary": "Mute room member",
        "tags": [
          "User::RoomMembers"
        ],
        "description": "",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "room_id",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "room member user_id"
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/user/rooms/{room_id}/room_members/{id}/unmute": {
      "post": {
        "summary": "Unmute room member",
        "tags": [
          "User::RoomMembers"
        ],
        "description": "",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "room_id",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "room member user_id"
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/user/rooms/{room_id}/room_members/{id}/start_video": {
      "post": {
        "summary": "Start video for room member",
        "tags": [
          "User::RoomMembers"
        ],
        "description": "",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "room_id",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "room member user_id"
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/user/rooms/{room_id}/room_members/{id}/stop_video": {
      "post": {
        "summary": "Stop video for room member",
        "tags": [
          "User::RoomMembers"
        ],
        "description": "",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "room_id",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "room member user_id"
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/user/rooms/{room_id}/room_members/{id}/enable_backstage": {
      "post": {
        "summary": "Enable backstage for room member",
        "tags": [
          "User::RoomMembers"
        ],
        "description": "",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "room_id",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "room member user_id"
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/user/rooms/{room_id}/room_members/{id}/disable_backstage": {
      "post": {
        "summary": "Disable backstage for room member",
        "tags": [
          "User::RoomMembers"
        ],
        "description": "",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "room_id",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "room member user_id"
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/user/rooms/{room_id}/room_members/pin": {
      "post": {
        "summary": "Pin specified users",
        "tags": [
          "User::RoomMembers"
        ],
        "description": "",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "room_id",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "room_member_ids",
            "in": "query",
            "type": "string",
            "required": true,
            "description": "id or array of ids"
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/user/rooms/{room_id}/room_members/pin_only": {
      "post": {
        "summary": "Pin specified users and unpin others",
        "tags": [
          "User::RoomMembers"
        ],
        "description": "",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "room_id",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "room_member_ids",
            "in": "query",
            "type": "string",
            "required": true,
            "description": "id or array of ids"
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/user/rooms/{room_id}/room_members/unpin": {
      "post": {
        "summary": "Unpin specified users",
        "tags": [
          "User::RoomMembers"
        ],
        "description": "",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "room_id",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "room_member_ids",
            "in": "query",
            "type": "string",
            "required": true,
            "description": "id or array of ids"
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/user/rooms/{room_id}/room_members/unpin_all": {
      "post": {
        "summary": "Unpin all users",
        "tags": [
          "User::RoomMembers"
        ],
        "description": "",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "room_id",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/user/rooms/{id}": {
      "get": {
        "summary": "Get running Room info",
        "tags": [
          "User::Rooms"
        ],
        "description": "",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      },
      "put": {
        "summary": "Update Room(start/stop)",
        "tags": [
          "User::Rooms"
        ],
        "description": "",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "room": {
                  "type": "object",
                  "properties": {
                    "action": {
                      "type": "string",
                      "example": "start"
                    },
                    "is_screen_share_available": {
                      "type": "boolean",
                      "example": true
                    },
                    "recording": {
                      "type": "boolean",
                      "example": true
                    },
                    "mic_disabled": {
                      "type": "boolean",
                      "example": true
                    },
                    "video_disabled": {
                      "type": "boolean",
                      "example": true
                    },
                    "backstage": {
                      "type": "boolean",
                      "example": true
                    },
                    "room_members_attributes": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "example": 1,
                            "required": false
                          },
                          "mic_disabled": {
                            "type": "boolean",
                            "example": true,
                            "required": false
                          },
                          "video_disabled": {
                            "type": "boolean",
                            "example": true,
                            "required": false
                          },
                          "backstage": {
                            "type": "boolean",
                            "example": true,
                            "required": false
                          },
                          "pinned": {
                            "type": "boolean",
                            "example": true,
                            "required": false
                          },
                          "banned": {
                            "type": "boolean",
                            "example": true,
                            "required": false
                          },
                          "ban_reason_id": {
                            "type": "integer",
                            "example": 1,
                            "required": false
                          }
                        }
                      }
                    },
                    "session_attributes": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "example": 1,
                          "required": false
                        },
                        "allow_chat": {
                          "type": "boolean",
                          "example": false,
                          "required": false
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/user/rooms/join_interactive_by_token": {
      "post": {
        "summary": "Join Room by token",
        "tags": [
          "User::Rooms"
        ],
        "description": "",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "token",
            "in": "query",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/user/service_subscriptions": {
      "get": {
        "summary": "Get all service subscriptions",
        "tags": [
          "User::ServiceSubscriptions"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "offset",
            "in": "query",
            "type": "integer"
          },
          {
            "name": "limit",
            "in": "query",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      },
      "post": {
        "summary": "Create new subscription",
        "tags": [
          "User::ServiceSubscriptions"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "plan_id",
            "in": "query",
            "type": "string",
            "required": true,
            "description": "Plan stripe id"
          },
          {
            "name": "trial",
            "in": "query",
            "type": "integer",
            "required": false,
            "description": "&trial=1"
          },
          {
            "name": "coupon",
            "in": "query",
            "type": "string",
            "required": false,
            "description": "&coupon=20OFF"
          },
          {
            "name": "stripe_token",
            "in": "query",
            "type": "string",
            "required": true,
            "description": "received from stripe js tok_ or card_ from payment methods list"
          },
          {
            "name": "stripe_card",
            "in": "query",
            "type": "string",
            "required": false,
            "optional": true,
            "description": "received from cards dropdown"
          },
          {
            "name": "country",
            "in": "query",
            "type": "string",
            "required": true,
            "description": "eg. US"
          },
          {
            "name": "zip_code",
            "in": "query",
            "type": "string",
            "required": true,
            "description": "required for US but lets add it always"
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/user/service_subscriptions/{id}": {
      "get": {
        "summary": "Get subscription",
        "tags": [
          "User::ServiceSubscriptions"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      },
      "put": {
        "summary": "Update (cancel trial) subscription",
        "tags": [
          "User::ServiceSubscriptions"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "cancel_trial",
            "in": "query",
            "type": "integer",
            "required": true,
            "description": "&cancel_trial=1"
          },
          {
            "name": "plan_id",
            "in": "query",
            "type": "integer",
            "required": false,
            "description": "plan_id to switch subscription to it"
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      },
      "delete": {
        "summary": "Cancel subscription",
        "tags": [
          "User::ServiceSubscriptions"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/user/service_subscriptions/current": {
      "get": {
        "summary": "Get current subscription",
        "tags": [
          "User::ServiceSubscriptions"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/user/service_subscriptions/{id}/pay": {
      "post": {
        "summary": "Manually pay subscription",
        "tags": [
          "User::ServiceSubscriptions"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "type": "integer",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/user/service_subscriptions/apply_coupon": {
      "post": {
        "summary": "Apply Coupon to Plan",
        "tags": [
          "User::ServiceSubscriptions"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "plan_id",
            "in": "query",
            "type": "string",
            "description": "&plan_id=plan_abcdef"
          },
          {
            "name": "coupon",
            "in": "query",
            "type": "string",
            "description": "&coupon=20OFF"
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/user/sessions/{session_id}/durations": {
      "get": {
        "summary": "Get available duration options",
        "tags": [
          "User::Session::Durations"
        ],
        "description": "",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "session_id",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      },
      "post": {
        "summary": "Increase session duration",
        "tags": [
          "User::Session::Durations"
        ],
        "description": "",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "session_id",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      },
      "delete": {
        "summary": "Decrease session duration",
        "tags": [
          "User::Session::Durations"
        ],
        "description": "",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "session_id",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/user/session_invited_immersive_participantships": {
      "get": {
        "summary": "Get invited participantships",
        "tags": [
          "User::SessionInvitedImmersiveParticipantships"
        ],
        "description": "Get all invited participantships for current user or session",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "room_id",
            "in": "query",
            "type": "integer"
          },
          {
            "name": "session_id",
            "in": "query",
            "type": "integer"
          },
          {
            "name": "status",
            "in": "query",
            "type": "string",
            "description": "Valid values are: 'accepted', 'rejected', 'pending'."
          },
          {
            "name": "order_by",
            "in": "query",
            "type": "string",
            "description": "Valid values are: 'created_at', 'updated_at'. Default: 'created_at'"
          },
          {
            "name": "order",
            "in": "query",
            "type": "string",
            "description": "Valid values are: 'asc', 'desc'. Default: 'asc'"
          },
          {
            "name": "limit",
            "in": "query",
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      },
      "post": {
        "summary": "Create room participantship",
        "tags": [
          "User::SessionInvitedImmersiveParticipantships"
        ],
        "description": "Requires (room_id or session_id) and (user_id or email)",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "room_id",
            "in": "query",
            "type": "string"
          },
          {
            "name": "session_id",
            "in": "query",
            "type": "string"
          },
          {
            "name": "user_id",
            "in": "query",
            "type": "integer"
          },
          {
            "name": "email",
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/user/session_invited_immersive_participantships/{id}": {
      "get": {
        "summary": "Get participantship info",
        "tags": [
          "User::SessionInvitedImmersiveParticipantships"
        ],
        "description": "",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      },
      "put": {
        "summary": "Update(accept/reject) room participantship",
        "tags": [
          "User::SessionInvitedImmersiveParticipantships"
        ],
        "description": "",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "status",
            "in": "query",
            "type": "string",
            "required": true,
            "description": "Valid values are: 'accepted', 'rejected'"
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      },
      "delete": {
        "summary": "Delete room participantship",
        "tags": [
          "User::SessionInvitedImmersiveParticipantships"
        ],
        "description": "",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/user/session_invited_livestream_participantships": {
      "get": {
        "summary": "Get invited participantships",
        "tags": [
          "User::SessionInvitedLivestreamParticipantships"
        ],
        "description": "Get all invited participantships for current user or session",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "room_id",
            "in": "query",
            "type": "integer"
          },
          {
            "name": "session_id",
            "in": "query",
            "type": "integer"
          },
          {
            "name": "status",
            "in": "query",
            "type": "string",
            "description": "Valid values are: 'accepted', 'rejected', 'pending'."
          },
          {
            "name": "order_by",
            "in": "query",
            "type": "string",
            "description": "Valid values are: 'created_at', 'updated_at'. Default: 'created_at'"
          },
          {
            "name": "order",
            "in": "query",
            "type": "string",
            "description": "Valid values are: 'asc', 'desc'. Default: 'asc'"
          },
          {
            "name": "limit",
            "in": "query",
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      },
      "post": {
        "summary": "Create room participantship",
        "tags": [
          "User::SessionInvitedLivestreamParticipantships"
        ],
        "description": "Requires (room_id or session_id) and (user_id or email)",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "room_id",
            "in": "query",
            "type": "string"
          },
          {
            "name": "session_id",
            "in": "query",
            "type": "string"
          },
          {
            "name": "user_id",
            "in": "query",
            "type": "integer"
          },
          {
            "name": "email",
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/user/session_invited_livestream_participantships/{id}": {
      "get": {
        "summary": "Get participantship info",
        "tags": [
          "User::SessionInvitedLivestreamParticipantships"
        ],
        "description": "",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      },
      "put": {
        "summary": "Update(accept/reject) room participantship",
        "tags": [
          "User::SessionInvitedLivestreamParticipantships"
        ],
        "description": "",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "status",
            "in": "query",
            "type": "string",
            "required": true,
            "description": "Valid values are: 'accepted', 'rejected'"
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      },
      "delete": {
        "summary": "Delete room participantship",
        "tags": [
          "User::SessionInvitedLivestreamParticipantships"
        ],
        "description": "",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/user/sessions": {
      "get": {
        "summary": "Get upcoming sessions for user",
        "tags": [
          "User::Sessions"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "channel_id",
            "in": "query",
            "type": "integer"
          },
          {
            "name": "presenter_id",
            "in": "query",
            "type": "integer"
          },
          {
            "name": "organization_id",
            "in": "query",
            "type": "integer"
          },
          {
            "name": "start_at_from",
            "in": "query",
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "start_at_to",
            "in": "query",
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "end_at_from",
            "in": "query",
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "end_at_to",
            "in": "query",
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "duration_from",
            "in": "query",
            "type": "integer"
          },
          {
            "name": "duration_to",
            "in": "query",
            "type": "integer"
          },
          {
            "name": "order_by",
            "in": "query",
            "type": "string",
            "description": "Valid values are: 'start_at', 'end_at'. Default: 'start_at'"
          },
          {
            "name": "order",
            "in": "query",
            "type": "string",
            "description": "Valid values are: 'asc', 'desc'. Default: 'asc'"
          },
          {
            "name": "limit",
            "in": "query",
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      },
      "post": {
        "summary": "Create new session",
        "tags": [
          "User::Sessions"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "adult",
            "in": "query",
            "type": "boolean"
          },
          {
            "name": "age_restrictions",
            "in": "query",
            "type": "integer"
          },
          {
            "name": "allow_chat",
            "in": "query",
            "type": "boolean"
          },
          {
            "name": "autostart",
            "in": "query",
            "type": "boolean"
          },
          {
            "name": "channel_id",
            "in": "query",
            "type": "integer"
          },
          {
            "name": "custom_description_field_label",
            "in": "query",
            "type": "string"
          },
          {
            "name": "custom_description_field_value",
            "in": "query",
            "type": "string"
          },
          {
            "name": "description",
            "in": "query",
            "type": "string"
          },
          {
            "name": "device_type",
            "in": "query",
            "type": "string"
          },
          {
            "name": "duration",
            "in": "query",
            "type": "integer"
          },
          {
            "name": "free_trial_for_first_time_participants",
            "in": "query",
            "type": "boolean"
          },
          {
            "name": "immersive_access_cost",
            "in": "query",
            "type": "string"
          },
          {
            "name": "immersive_free_slots",
            "in": "query",
            "type": "integer"
          },
          {
            "name": "immersive_free_trial",
            "in": "query",
            "type": "boolean"
          },
          {
            "name": "immersive_free",
            "in": "query",
            "type": "boolean"
          },
          {
            "name": "immersive_type",
            "in": "query",
            "type": "string"
          },
          {
            "name": "immersive",
            "in": "query",
            "type": "string"
          },
          {
            "name": "level",
            "in": "query",
            "type": "string"
          },
          {
            "name": "list_ids",
            "in": "query",
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          {
            "name": "livestream_access_cost",
            "in": "query",
            "type": "string"
          },
          {
            "name": "livestream_free_slots",
            "in": "query",
            "type": "integer"
          },
          {
            "name": "livestream_free_trial",
            "in": "query",
            "type": "string"
          },
          {
            "name": "livestream_free",
            "in": "query",
            "type": "string"
          },
          {
            "name": "livestream",
            "in": "query",
            "type": "string"
          },
          {
            "name": "max_number_of_immersive_participants",
            "in": "query",
            "type": "integer"
          },
          {
            "name": "min_number_of_immersive_and_livestream_participants",
            "in": "query",
            "type": "integer"
          },
          {
            "name": "only_ppv",
            "in": "query",
            "type": "boolean"
          },
          {
            "name": "only_subscription",
            "in": "query",
            "type": "boolean"
          },
          {
            "name": "pre_time",
            "in": "query",
            "type": "integer",
            "description": "\"All Levels\", \"Beginner\", \"Intermediate\", \"Advanced\""
          },
          {
            "name": "presenter_id",
            "in": "query",
            "type": "integer"
          },
          {
            "name": "private",
            "in": "query",
            "type": "boolean"
          },
          {
            "name": "publish_after_requested_free_session_is_satisfied_by_admin",
            "in": "query",
            "type": "boolean"
          },
          {
            "name": "record",
            "in": "query",
            "type": "string"
          },
          {
            "name": "recorded_access_cost",
            "in": "query",
            "type": "string"
          },
          {
            "name": "recorded_free",
            "in": "query",
            "type": "boolean"
          },
          {
            "name": "recurring_settings",
            "in": "query",
            "type": "string",
            "description": "{\"days\"=>[\"friday\"], \"until\"=>\"occurrence\", \"occurrence\"=>\"1\"}"
          },
          {
            "name": "requested_free_session_reason",
            "in": "query",
            "type": "string"
          },
          {
            "name": "service_type",
            "in": "query",
            "type": "string"
          },
          {
            "name": "start_at",
            "in": "query",
            "type": "string"
          },
          {
            "name": "start_now",
            "in": "query",
            "type": "boolean"
          },
          {
            "name": "title",
            "in": "query",
            "type": "string"
          },
          {
            "name": "twitter_feed_title",
            "in": "query",
            "type": "string"
          },
          {
            "name": "ffmpegservice_account_id",
            "in": "query",
            "type": "integer"
          },
          {
            "name": "recording_layout",
            "in": "query",
            "type": "string",
            "description": "\"grid\", \"presenter_only\", \"presenter_focus\". Default: \"grid\""
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/user/channels/{channel_id}/sessions": {
      "get": {
        "summary": "Get upcoming sessions for user",
        "tags": [
          "User::Sessions"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "channel_id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "presenter_id",
            "in": "query",
            "type": "integer"
          },
          {
            "name": "organization_id",
            "in": "query",
            "type": "integer"
          },
          {
            "name": "start_at_from",
            "in": "query",
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "start_at_to",
            "in": "query",
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "end_at_from",
            "in": "query",
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "end_at_to",
            "in": "query",
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "duration_from",
            "in": "query",
            "type": "integer"
          },
          {
            "name": "duration_to",
            "in": "query",
            "type": "integer"
          },
          {
            "name": "order_by",
            "in": "query",
            "type": "string",
            "description": "Valid values are: 'start_at', 'end_at'. Default: 'start_at'"
          },
          {
            "name": "order",
            "in": "query",
            "type": "string",
            "description": "Valid values are: 'asc', 'desc'. Default: 'asc'"
          },
          {
            "name": "limit",
            "in": "query",
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      },
      "post": {
        "summary": "Create new session",
        "tags": [
          "User::Sessions"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "channel_id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "adult",
            "in": "query",
            "type": "boolean"
          },
          {
            "name": "age_restrictions",
            "in": "query",
            "type": "integer"
          },
          {
            "name": "allow_chat",
            "in": "query",
            "type": "boolean"
          },
          {
            "name": "autostart",
            "in": "query",
            "type": "boolean"
          },
          {
            "name": "custom_description_field_label",
            "in": "query",
            "type": "string"
          },
          {
            "name": "custom_description_field_value",
            "in": "query",
            "type": "string"
          },
          {
            "name": "description",
            "in": "query",
            "type": "string"
          },
          {
            "name": "device_type",
            "in": "query",
            "type": "string"
          },
          {
            "name": "duration",
            "in": "query",
            "type": "integer"
          },
          {
            "name": "free_trial_for_first_time_participants",
            "in": "query",
            "type": "boolean"
          },
          {
            "name": "immersive_access_cost",
            "in": "query",
            "type": "string"
          },
          {
            "name": "immersive_free_slots",
            "in": "query",
            "type": "integer"
          },
          {
            "name": "immersive_free_trial",
            "in": "query",
            "type": "boolean"
          },
          {
            "name": "immersive_free",
            "in": "query",
            "type": "boolean"
          },
          {
            "name": "immersive_type",
            "in": "query",
            "type": "string"
          },
          {
            "name": "immersive",
            "in": "query",
            "type": "string"
          },
          {
            "name": "level",
            "in": "query",
            "type": "string"
          },
          {
            "name": "list_ids",
            "in": "query",
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          {
            "name": "livestream_access_cost",
            "in": "query",
            "type": "string"
          },
          {
            "name": "livestream_free_slots",
            "in": "query",
            "type": "integer"
          },
          {
            "name": "livestream_free_trial",
            "in": "query",
            "type": "string"
          },
          {
            "name": "livestream_free",
            "in": "query",
            "type": "string"
          },
          {
            "name": "livestream",
            "in": "query",
            "type": "string"
          },
          {
            "name": "max_number_of_immersive_participants",
            "in": "query",
            "type": "integer"
          },
          {
            "name": "min_number_of_immersive_and_livestream_participants",
            "in": "query",
            "type": "integer"
          },
          {
            "name": "only_ppv",
            "in": "query",
            "type": "boolean"
          },
          {
            "name": "only_subscription",
            "in": "query",
            "type": "boolean"
          },
          {
            "name": "pre_time",
            "in": "query",
            "type": "integer",
            "description": "\"All Levels\", \"Beginner\", \"Intermediate\", \"Advanced\""
          },
          {
            "name": "presenter_id",
            "in": "query",
            "type": "integer"
          },
          {
            "name": "private",
            "in": "query",
            "type": "boolean"
          },
          {
            "name": "publish_after_requested_free_session_is_satisfied_by_admin",
            "in": "query",
            "type": "boolean"
          },
          {
            "name": "record",
            "in": "query",
            "type": "string"
          },
          {
            "name": "recorded_access_cost",
            "in": "query",
            "type": "string"
          },
          {
            "name": "recorded_free",
            "in": "query",
            "type": "boolean"
          },
          {
            "name": "recording_layout",
            "in": "query",
            "type": "string",
            "description": "\"grid\", \"presenter_only\", \"presenter_focus\". Default: \"grid\""
          },
          {
            "name": "recurring_settings",
            "in": "query",
            "type": "string",
            "description": "{\"days\"=>[\"friday\"], \"until\"=>\"occurrence\", \"occurrence\"=>\"1\"}"
          },
          {
            "name": "requested_free_session_reason",
            "in": "query",
            "type": "string"
          },
          {
            "name": "service_type",
            "in": "query",
            "type": "string"
          },
          {
            "name": "start_at",
            "in": "query",
            "type": "string"
          },
          {
            "name": "start_now",
            "in": "query",
            "type": "boolean"
          },
          {
            "name": "title",
            "in": "query",
            "type": "string"
          },
          {
            "name": "twitter_feed_title",
            "in": "query",
            "type": "string"
          },
          {
            "name": "ffmpegservice_account_id",
            "in": "query",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/user/sessions/{id}": {
      "get": {
        "summary": "Get session info",
        "tags": [
          "User::Sessions"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      },
      "put": {
        "summary": "Update session",
        "tags": [
          "User::Sessions"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "adult",
            "in": "query",
            "type": "boolean"
          },
          {
            "name": "age_restrictions",
            "in": "query",
            "type": "integer"
          },
          {
            "name": "allow_chat",
            "in": "query",
            "type": "boolean"
          },
          {
            "name": "autostart",
            "in": "query",
            "type": "boolean"
          },
          {
            "name": "custom_description_field_label",
            "in": "query",
            "type": "string"
          },
          {
            "name": "custom_description_field_value",
            "in": "query",
            "type": "string"
          },
          {
            "name": "description",
            "in": "query",
            "type": "string"
          },
          {
            "name": "device_type",
            "in": "query",
            "type": "string"
          },
          {
            "name": "duration",
            "in": "query",
            "type": "integer"
          },
          {
            "name": "free_trial_for_first_time_participants",
            "in": "query",
            "type": "boolean"
          },
          {
            "name": "immersive_access_cost",
            "in": "query",
            "type": "string"
          },
          {
            "name": "immersive_free_slots",
            "in": "query",
            "type": "integer"
          },
          {
            "name": "immersive_free_trial",
            "in": "query",
            "type": "boolean"
          },
          {
            "name": "immersive_free",
            "in": "query",
            "type": "boolean"
          },
          {
            "name": "immersive_type",
            "in": "query",
            "type": "string"
          },
          {
            "name": "immersive",
            "in": "query",
            "type": "string"
          },
          {
            "name": "level",
            "in": "query",
            "type": "string"
          },
          {
            "name": "livestream_access_cost",
            "in": "query",
            "type": "string"
          },
          {
            "name": "livestream_free_slots",
            "in": "query",
            "type": "integer"
          },
          {
            "name": "livestream_free_trial",
            "in": "query",
            "type": "string"
          },
          {
            "name": "livestream_free",
            "in": "query",
            "type": "string"
          },
          {
            "name": "livestream",
            "in": "query",
            "type": "string"
          },
          {
            "name": "max_number_of_immersive_participants",
            "in": "query",
            "type": "integer"
          },
          {
            "name": "min_number_of_immersive_and_livestream_participants",
            "in": "query",
            "type": "integer"
          },
          {
            "name": "only_ppv",
            "in": "query",
            "type": "boolean"
          },
          {
            "name": "only_subscription",
            "in": "query",
            "type": "boolean"
          },
          {
            "name": "pre_time",
            "in": "query",
            "type": "integer",
            "description": "\"All Levels\", \"Beginner\", \"Intermediate\", \"Advanced\""
          },
          {
            "name": "presenter_id",
            "in": "query",
            "type": "integer"
          },
          {
            "name": "private",
            "in": "query",
            "type": "boolean"
          },
          {
            "name": "publish_after_requested_free_session_is_satisfied_by_admin",
            "in": "query",
            "type": "boolean"
          },
          {
            "name": "record",
            "in": "query",
            "type": "string"
          },
          {
            "name": "recorded_access_cost",
            "in": "query",
            "type": "string"
          },
          {
            "name": "recorded_free",
            "in": "query",
            "type": "boolean"
          },
          {
            "name": "recording_layout",
            "in": "query",
            "type": "string",
            "description": "\"grid\", \"presenter_only\", \"presenter_focus\". Default: \"grid\""
          },
          {
            "name": "recurring_settings",
            "in": "query",
            "type": "string",
            "description": "{\"days\"=>[\"friday\"], \"until\"=>\"occurrence\", \"occurrence\"=>\"1\"}"
          },
          {
            "name": "requested_free_session_reason",
            "in": "query",
            "type": "string"
          },
          {
            "name": "service_type",
            "in": "query",
            "type": "string"
          },
          {
            "name": "start_at",
            "in": "query",
            "type": "string"
          },
          {
            "name": "start_now",
            "in": "query",
            "type": "boolean"
          },
          {
            "name": "title",
            "in": "query",
            "type": "string"
          },
          {
            "name": "twitter_feed_title",
            "in": "query",
            "type": "string"
          },
          {
            "name": "ffmpegservice_account_id",
            "in": "query",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      },
      "delete": {
        "summary": "Cancel session",
        "tags": [
          "User::Sessions"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "cancel_reason_id",
            "in": "query",
            "type": "integer",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/user/sessions/new": {
      "get": {
        "summary": "Get new session default attributes",
        "tags": [
          "User::Sessions"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "adult",
            "in": "query",
            "type": "string",
            "description": "Type: checkbox. Pass \"1\" if checked"
          },
          {
            "name": "age_restrictions",
            "in": "query",
            "type": "integer"
          },
          {
            "name": "allow_chat",
            "in": "query",
            "type": "string",
            "description": "Type: checkbox. Pass \"1\" if checked"
          },
          {
            "name": "autostart",
            "in": "query",
            "type": "string",
            "description": "Type: checkbox. Pass \"1\" if checked"
          },
          {
            "name": "channel_id",
            "in": "query",
            "type": "integer"
          },
          {
            "name": "custom_description_field_label",
            "in": "query",
            "type": "string"
          },
          {
            "name": "custom_description_field_value",
            "in": "query",
            "type": "string"
          },
          {
            "name": "description",
            "in": "query",
            "type": "string"
          },
          {
            "name": "device_type",
            "in": "query",
            "type": "string"
          },
          {
            "name": "duration",
            "in": "query",
            "type": "integer"
          },
          {
            "name": "free_trial_for_first_time_participants",
            "in": "query",
            "type": "string",
            "description": "Type: checkbox. Pass \"1\" if checked"
          },
          {
            "name": "immersive_access_cost",
            "in": "query",
            "type": "string"
          },
          {
            "name": "immersive_free_slots",
            "in": "query",
            "type": "integer"
          },
          {
            "name": "immersive_free_trial",
            "in": "query",
            "type": "string",
            "description": "Type: checkbox. Pass \"1\" if checked"
          },
          {
            "name": "immersive_free",
            "in": "query",
            "type": "string",
            "description": "Type: checkbox. Pass \"1\" if checked"
          },
          {
            "name": "immersive_type",
            "in": "query",
            "type": "string"
          },
          {
            "name": "immersive",
            "in": "query",
            "type": "string"
          },
          {
            "name": "level",
            "in": "query",
            "type": "string"
          },
          {
            "name": "livestream_access_cost",
            "in": "query",
            "type": "string"
          },
          {
            "name": "livestream_free_slots",
            "in": "query",
            "type": "integer"
          },
          {
            "name": "livestream_free_trial",
            "in": "query",
            "type": "string"
          },
          {
            "name": "livestream_free",
            "in": "query",
            "type": "string"
          },
          {
            "name": "livestream",
            "in": "query",
            "type": "string"
          },
          {
            "name": "max_number_of_immersive_participants",
            "in": "query",
            "type": "integer"
          },
          {
            "name": "min_number_of_immersive_and_livestream_participants",
            "in": "query",
            "type": "integer"
          },
          {
            "name": "pre_time",
            "in": "query",
            "type": "integer",
            "description": "\"All Levels\", \"Beginner\", \"Intermediate\", \"Advanced\""
          },
          {
            "name": "presenter_id",
            "in": "query",
            "type": "integer"
          },
          {
            "name": "private",
            "in": "query",
            "type": "string",
            "description": "Type: checkbox. Pass \"1\" if checked"
          },
          {
            "name": "publish_after_requested_free_session_is_satisfied_by_admin",
            "in": "query",
            "type": "string",
            "description": "Type: checkbox. Pass \"1\" if checked"
          },
          {
            "name": "record",
            "in": "query",
            "type": "string"
          },
          {
            "name": "recorded_access_cost",
            "in": "query",
            "type": "string"
          },
          {
            "name": "recorded_free",
            "in": "query",
            "type": "string",
            "description": "Type: checkbox. Pass \"1\" if checked"
          },
          {
            "name": "recurring_settings",
            "in": "query",
            "type": "string",
            "description": "{\"days\"=>[\"friday\"], \"until\"=>\"occurrence\", \"occurrence\"=>\"1\"}"
          },
          {
            "name": "requested_free_session_reason",
            "in": "query",
            "type": "string"
          },
          {
            "name": "service_type",
            "in": "query",
            "type": "string"
          },
          {
            "name": "start_at",
            "in": "query",
            "type": "string"
          },
          {
            "name": "start_now",
            "in": "query",
            "type": "string",
            "description": "Type: checkbox. Pass \"1\" if checked"
          },
          {
            "name": "title",
            "in": "query",
            "type": "string"
          },
          {
            "name": "twitter_feed_title",
            "in": "query",
            "type": "string"
          },
          {
            "name": "ffmpegservice_account_id",
            "in": "query",
            "type": "integer"
          },
          {
            "name": "recording_layout",
            "in": "query",
            "type": "string",
            "description": "\"grid\", \"presenter_only\", \"presenter_focus\". Default: \"grid\""
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/user/channels/{channel_id}/sessions/new": {
      "get": {
        "summary": "Get new session default attributes",
        "tags": [
          "User::Sessions"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "channel_id",
            "in": "path",
            "type": "integer",
            "required": true
          },
          {
            "name": "adult",
            "in": "query",
            "type": "string",
            "description": "Type: checkbox. Pass \"1\" if checked"
          },
          {
            "name": "age_restrictions",
            "in": "query",
            "type": "integer"
          },
          {
            "name": "allow_chat",
            "in": "query",
            "type": "string",
            "description": "Type: checkbox. Pass \"1\" if checked"
          },
          {
            "name": "autostart",
            "in": "query",
            "type": "string",
            "description": "Type: checkbox. Pass \"1\" if checked"
          },
          {
            "name": "custom_description_field_label",
            "in": "query",
            "type": "string"
          },
          {
            "name": "custom_description_field_value",
            "in": "query",
            "type": "string"
          },
          {
            "name": "description",
            "in": "query",
            "type": "string"
          },
          {
            "name": "device_type",
            "in": "query",
            "type": "string"
          },
          {
            "name": "duration",
            "in": "query",
            "type": "integer"
          },
          {
            "name": "free_trial_for_first_time_participants",
            "in": "query",
            "type": "string",
            "description": "Type: checkbox. Pass \"1\" if checked"
          },
          {
            "name": "immersive_access_cost",
            "in": "query",
            "type": "string"
          },
          {
            "name": "immersive_free_slots",
            "in": "query",
            "type": "integer"
          },
          {
            "name": "immersive_free_trial",
            "in": "query",
            "type": "string",
            "description": "Type: checkbox. Pass \"1\" if checked"
          },
          {
            "name": "immersive_free",
            "in": "query",
            "type": "string",
            "description": "Type: checkbox. Pass \"1\" if checked"
          },
          {
            "name": "immersive_type",
            "in": "query",
            "type": "string"
          },
          {
            "name": "immersive",
            "in": "query",
            "type": "string"
          },
          {
            "name": "level",
            "in": "query",
            "type": "string"
          },
          {
            "name": "livestream_access_cost",
            "in": "query",
            "type": "string"
          },
          {
            "name": "livestream_free_slots",
            "in": "query",
            "type": "integer"
          },
          {
            "name": "livestream_free_trial",
            "in": "query",
            "type": "string"
          },
          {
            "name": "livestream_free",
            "in": "query",
            "type": "string"
          },
          {
            "name": "livestream",
            "in": "query",
            "type": "string"
          },
          {
            "name": "max_number_of_immersive_participants",
            "in": "query",
            "type": "integer"
          },
          {
            "name": "min_number_of_immersive_and_livestream_participants",
            "in": "query",
            "type": "integer"
          },
          {
            "name": "pre_time",
            "in": "query",
            "type": "integer",
            "description": "\"All Levels\", \"Beginner\", \"Intermediate\", \"Advanced\""
          },
          {
            "name": "presenter_id",
            "in": "query",
            "type": "integer"
          },
          {
            "name": "private",
            "in": "query",
            "type": "string",
            "description": "Type: checkbox. Pass \"1\" if checked"
          },
          {
            "name": "publish_after_requested_free_session_is_satisfied_by_admin",
            "in": "query",
            "type": "string",
            "description": "Type: checkbox. Pass \"1\" if checked"
          },
          {
            "name": "record",
            "in": "query",
            "type": "string"
          },
          {
            "name": "recorded_access_cost",
            "in": "query",
            "type": "string"
          },
          {
            "name": "recorded_free",
            "in": "query",
            "type": "string",
            "description": "Type: checkbox. Pass \"1\" if checked"
          },
          {
            "name": "recurring_settings",
            "in": "query",
            "type": "string",
            "description": "{\"days\"=>[\"friday\"], \"until\"=>\"occurrence\", \"occurrence\"=>\"1\"}"
          },
          {
            "name": "requested_free_session_reason",
            "in": "query",
            "type": "string"
          },
          {
            "name": "service_type",
            "in": "query",
            "type": "string"
          },
          {
            "name": "start_at",
            "in": "query",
            "type": "string"
          },
          {
            "name": "start_now",
            "in": "query",
            "type": "string",
            "description": "Type: checkbox. Pass \"1\" if checked"
          },
          {
            "name": "title",
            "in": "query",
            "type": "string"
          },
          {
            "name": "twitter_feed_title",
            "in": "query",
            "type": "string"
          },
          {
            "name": "ffmpegservice_account_id",
            "in": "query",
            "type": "integer"
          },
          {
            "name": "recording_layout",
            "in": "query",
            "type": "string",
            "description": "\"grid\", \"presenter_only\", \"presenter_focus\". Default: \"grid\""
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/user/sessions/nearest_session": {
      "get": {
        "summary": "Get nearest session for user",
        "tags": [
          "User::Sessions"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/user/sessions/{id}/confirm_purchase": {
      "post": {
        "summary": "Obtain access to session",
        "tags": [
          "User::Sessions"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "type",
            "in": "query",
            "type": "string",
            "required": true,
            "description": "Valid values: 'free_immersive', 'paid_immersive', 'free_livestream', 'paid_livestream', 'free_vod', 'paid_vod'"
          },
          {
            "name": "discount",
            "in": "query",
            "type": "string"
          },
          {
            "name": "provider",
            "in": "query",
            "type": "string",
            "description": "Valid values: 'paypal'"
          },
          {
            "name": "stripe_token",
            "in": "query",
            "type": "string"
          },
          {
            "name": "stripe_card",
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/user/shop/lists": {
      "get": {
        "summary": "Get all lists of current_user",
        "tags": [
          "User::Shop::Lists"
        ],
        "description": "Get all lists of current_user",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "model_id",
            "in": "query",
            "type": "integer",
            "description": "Required if model_type present"
          },
          {
            "name": "model_type",
            "in": "query",
            "type": "string",
            "description": "Valid values are: Channel, Recording, Session, User, Video"
          },
          {
            "name": "order_by",
            "in": "query",
            "type": "string",
            "description": "Valid values are: 'created_at', 'updated_at'. Default: 'updated_at'"
          },
          {
            "name": "order",
            "in": "query",
            "type": "string",
            "description": "Valid values are: 'asc', 'desc'. Default: 'desc'"
          },
          {
            "name": "offset",
            "in": "query",
            "type": "integer"
          },
          {
            "name": "limit",
            "in": "query",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      },
      "post": {
        "summary": "Create new List",
        "tags": [
          "User::Shop::Lists"
        ],
        "description": "",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "name",
            "in": "query",
            "type": "string",
            "required": true
          },
          {
            "name": "description",
            "in": "query",
            "type": "string",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/user/shop/lists/{id}": {
      "get": {
        "summary": "Get List info",
        "tags": [
          "User::Shop::Lists"
        ],
        "description": "",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      },
      "put": {
        "summary": "Update List info",
        "tags": [
          "User::Shop::Lists"
        ],
        "description": "",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "name",
            "in": "query",
            "type": "string",
            "required": false
          },
          {
            "name": "description",
            "in": "query",
            "type": "string",
            "required": false
          },
          {
            "name": "url",
            "in": "query",
            "type": "string",
            "required": false
          },
          {
            "name": "selected",
            "in": "query",
            "type": "boolean",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      },
      "delete": {
        "summary": "Destroy List",
        "tags": [
          "User::Shop::Lists"
        ],
        "description": "",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/user/shop/products": {
      "get": {
        "summary": "Get Products info",
        "tags": [
          "User::Shop::Products"
        ],
        "description": "",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      },
      "post": {
        "summary": "Create Product or find by url",
        "tags": [
          "User::Shop::Products"
        ],
        "description": "",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "list_id",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "product[title]",
            "in": "query",
            "type": "string",
            "required": true
          },
          {
            "name": "product[description]",
            "in": "query",
            "type": "string",
            "required": false
          },
          {
            "name": "product[short_description]",
            "in": "query",
            "type": "string",
            "required": true
          },
          {
            "name": "product[url]",
            "in": "query",
            "type": "string",
            "required": true
          },
          {
            "name": "product[price]",
            "in": "query",
            "type": "string",
            "required": true
          },
          {
            "name": "product[specifications]",
            "in": "query",
            "type": "string",
            "required": false
          },
          {
            "name": "product[product_image_attributes][remote_original_url]",
            "in": "query",
            "type": "string",
            "required": false
          },
          {
            "name": "product[product_image_attributes][original]",
            "in": "formData",
            "type": "file",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/user/shop/products/{id}": {
      "get": {
        "summary": "Get Product info",
        "tags": [
          "User::Shop::Products"
        ],
        "description": "",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      },
      "put": {
        "summary": "Update Product info",
        "tags": [
          "User::Shop::Products"
        ],
        "description": "",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "product[title]",
            "in": "query",
            "type": "string",
            "required": true
          },
          {
            "name": "product[description]",
            "in": "query",
            "type": "string",
            "required": false
          },
          {
            "name": "product[short_description]",
            "in": "query",
            "type": "string",
            "required": true
          },
          {
            "name": "product[url]",
            "in": "query",
            "type": "string",
            "required": true
          },
          {
            "name": "product[price]",
            "in": "query",
            "type": "string",
            "required": true
          },
          {
            "name": "product[specifications]",
            "in": "query",
            "type": "string",
            "required": false
          },
          {
            "name": "product[product_image_attributes][remote_original_url]",
            "in": "query",
            "type": "string",
            "required": false
          },
          {
            "name": "product[product_image_attributes][original]",
            "in": "formData",
            "type": "file",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      },
      "delete": {
        "summary": "Delete Product",
        "tags": [
          "User::Shop::Products"
        ],
        "description": "",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/user/shop/products/search_by_upc": {
      "post": {
        "summary": "Search existing product or add a new one by UPC and add it to list and session",
        "tags": [
          "User::Shop::Products"
        ],
        "description": "",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "barcode",
            "in": "query",
            "type": "string",
            "required": true
          },
          {
            "name": "list_id",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "session_id",
            "in": "query",
            "type": "integer",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/user/signup_tokens": {
      "post": {
        "summary": "Use Signup Token",
        "tags": [
          "User::SignupTokens"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "signup_token": {
                  "type": "object",
                  "properties": {
                    "token": {
                      "type": "string",
                      "example": "abcdefg"
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/user/statistics": {
      "get": {
        "summary": "Get current organization info",
        "tags": [
          "User::Statistics"
        ],
        "description": "Get current organization statistic info",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/user/storage/records": {
      "get": {
        "summary": "List all storage records of organization",
        "tags": [
          "User::Storage::Record"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "model_type",
            "in": "query",
            "type": "string"
          },
          {
            "name": "model_id",
            "in": "query",
            "type": "string"
          },
          {
            "name": "relation_type",
            "in": "query",
            "type": "string"
          },
          {
            "name": "object_type",
            "in": "query",
            "type": "string",
            "description": "Available types: 'ActiveStorage::Attachment', 'Aws::S3::ObjectSummary::Collection'"
          },
          {
            "name": "order",
            "in": "query",
            "type": "string",
            "description": "Valid values are: 'asc', 'desc'. Default: 'desc'"
          },
          {
            "name": "limit",
            "in": "query",
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "type": "integer"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/user/stream_previews": {
      "get": {
        "summary": "All StreamPreviews",
        "tags": [
          "User::StreamPreviews"
        ],
        "description": "",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "user_id",
            "in": "query",
            "type": "integer"
          },
          {
            "name": "ffmpegservice_account_id",
            "in": "query",
            "type": "integer"
          },
          {
            "name": "order_by",
            "in": "query",
            "type": "string",
            "description": "Valid values are:'id', 'created_at', 'updated_at'. Default: 'created_at'"
          },
          {
            "name": "order",
            "in": "query",
            "type": "string",
            "description": "Valid values are: 'asc', 'desc'. Default: 'desc'"
          },
          {
            "name": "offset",
            "in": "query",
            "type": "integer"
          },
          {
            "name": "limit",
            "in": "query",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/user/stream_previews/{id}": {
      "get": {
        "summary": "Get StreamPreview info",
        "tags": [
          "User::StreamPreviews"
        ],
        "description": "",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      },
      "delete": {
        "summary": "Stop StreamPreview",
        "tags": [
          "User::StreamPreviews"
        ],
        "description": "",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/user/stream_previews/": {
      "post": {
        "summary": "New StreamPreview",
        "tags": [
          "User::StreamPreviews"
        ],
        "description": "",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "ffmpegservice_account_id",
            "in": "query",
            "type": "integer",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/user/studio_rooms": {
      "get": {
        "summary": "All Studio Rooms",
        "tags": [
          "User::StudioRooms"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "studio_id",
            "in": "query",
            "type": "integer"
          },
          {
            "name": "order_by",
            "in": "query",
            "type": "string",
            "description": "Valid values are: 'id', 'name', 'created_at', 'updated_at'. Default: 'created_at'"
          },
          {
            "name": "order",
            "in": "query",
            "type": "string",
            "description": "Valid values are: 'asc', 'desc'. Default: 'asc'"
          },
          {
            "name": "offset",
            "in": "query",
            "type": "integer"
          },
          {
            "name": "limit",
            "in": "query",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/user/studio_rooms/{id}": {
      "get": {
        "summary": "Get Studio Room",
        "tags": [
          "User::StudioRooms"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      },
      "put": {
        "summary": "Update Studio Room",
        "tags": [
          "User::StudioRooms"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "studio_room",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "example": "Unite 209"
                },
                "description": {
                  "type": "string",
                  "example": "Floor 2, Room 209"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      },
      "delete": {
        "summary": "Delete Studio Room",
        "tags": [
          "User::StudioRooms"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/user/studio_rooms/": {
      "post": {
        "summary": "Create Studio Room",
        "tags": [
          "User::StudioRooms"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "studio_id",
            "in": "query",
            "type": "integer",
            "required": true
          },
          {
            "name": "studio_room",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "example": "Unite 209"
                },
                "description": {
                  "type": "string",
                  "example": "Floor 2, Room 209"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/user/studios": {
      "get": {
        "summary": "All Studios",
        "tags": [
          "User::Studios"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "order_by",
            "in": "query",
            "type": "string",
            "description": "Valid values are: 'id', 'name', 'created_at', 'updated_at'. Default: 'created_at'"
          },
          {
            "name": "order",
            "in": "query",
            "type": "string",
            "description": "Valid values are: 'asc', 'desc'. Default: 'asc'"
          },
          {
            "name": "offset",
            "in": "query",
            "type": "integer"
          },
          {
            "name": "limit",
            "in": "query",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/user/studios/{id}": {
      "get": {
        "summary": "Get Studio",
        "tags": [
          "User::Studios"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      },
      "put": {
        "summary": "Update Studio",
        "tags": [
          "User::Studios"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "studio",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "example": "Unite 209"
                },
                "description": {
                  "type": "string",
                  "example": "Floor 2, Room 209"
                },
                "phone": {
                  "type": "string",
                  "example": "+123456789012"
                },
                "address": {
                  "type": "string",
                  "example": "Metalurgiv 2, Zaporizhzhya 69104, Ukraine"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      },
      "delete": {
        "summary": "Delete Studio",
        "tags": [
          "User::Studios"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/user/studios/": {
      "post": {
        "summary": "Create Studio",
        "tags": [
          "User::Studios"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "studio",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "example": "Unite 209"
                },
                "description": {
                  "type": "string",
                  "example": "Floor 2, Room 209"
                },
                "phone": {
                  "type": "string",
                  "example": "+123456789012"
                },
                "address": {
                  "type": "string",
                  "example": "Metalurgiv 2, Zaporizhzhya 69104, Ukraine"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/user/system_themes": {
      "get": {
        "summary": "Get themes info",
        "tags": [
          "User::SystemThemes"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "limit",
            "in": "query",
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "type": "integer"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/user/system_themes/{id}": {
      "get": {
        "summary": "Get theme info",
        "tags": [
          "User::SystemThemes"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      },
      "put": {
        "summary": "Update theme info",
        "tags": [
          "User::SystemThemes"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "theme",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "example": "Dark Theme",
                  "required": true
                },
                "custom_css": {
                  "type": "string",
                  "example": ".main {color: black}"
                },
                "is_default": {
                  "type": "boolean",
                  "example": true
                },
                "system_theme_variables_attributes": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer",
                        "example": 1,
                        "required": false
                      },
                      "name": {
                        "type": "string",
                        "example": "main color",
                        "required": true
                      },
                      "property": {
                        "type": "string",
                        "example": "siteColorMain",
                        "required": true
                      },
                      "value": {
                        "type": "string",
                        "example": "#F23535",
                        "required": true
                      },
                      "group_name": {
                        "type": "string",
                        "example": "background",
                        "required": true
                      },
                      "state": {
                        "type": "string",
                        "example": "main",
                        "required": true
                      },
                      "_destroy": {
                        "type": "boolean",
                        "example": true,
                        "required": false
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/user/webrtcservice/chat/access_tokens": {
      "post": {
        "summary": "Create webrtcservice chat access token",
        "tags": [
          "User::Webrtcservice::Chat::AccessTokens"
        ],
        "description": "",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string"
          },
          {
            "name": "user_type",
            "in": "query",
            "type": "string",
            "required": false,
            "example": "User",
            "description": "Valid values are: 'User', 'ChatMember'"
          },
          {
            "name": "identity",
            "in": "query",
            "type": "string",
            "example": "1"
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/user/user_search": {
      "get": {
        "summary": "Search user by name or email",
        "tags": [
          "User::UserSearch"
        ],
        "description": "Search user by name or email",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": false
          },
          {
            "name": "query",
            "in": "query",
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "type": "integer"
          },
          {
            "name": "order_by",
            "in": "query",
            "type": "string",
            "description": "Valid values are: 'id', 'display_name', 'created_at', 'updated_at'. Default: 'created_at'"
          },
          {
            "name": "order",
            "in": "query",
            "type": "string",
            "description": "Valid values are: 'asc', 'desc'. Default: 'desc'"
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/user/users/current": {
      "get": {
        "summary": "Get current user info",
        "tags": [
          "User::Users"
        ],
        "description": "Get current user info",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      },
      "put": {
        "summary": "Update current user info",
        "tags": [
          "User::Users"
        ],
        "description": "Update current user info",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string",
                  "example": "user1@example.com"
                },
                "password": {
                  "type": "string",
                  "example": "abcdef"
                },
                "password_confirmation": {
                  "type": "string",
                  "example": "abcdef"
                },
                "birthdate": {
                  "type": "string",
                  "example": "1989-11-14"
                },
                "first_name": {
                  "type": "string",
                  "example": "John"
                },
                "last_name": {
                  "type": "string",
                  "example": "Doe"
                },
                "slug": {
                  "type": "string",
                  "example": "john-doe"
                },
                "display_name": {
                  "type": "string",
                  "example": "John Doe"
                },
                "gender": {
                  "type": "string",
                  "example": "male"
                },
                "public_display_name_source": {
                  "type": "string",
                  "example": "display_name"
                },
                "time_format": {
                  "type": "string",
                  "example": "12hour"
                },
                "manually_set_timezone": {
                  "type": "string",
                  "example": "Etc/GMT+12"
                },
                "currency": {
                  "type": "string",
                  "example": "USD"
                },
                "custom_slug_value": {
                  "type": "string",
                  "example": "john-the-greatest-doe"
                },
                "language": {
                  "type": "string",
                  "example": "en"
                },
                "user_account_attributes": {
                  "type": "object",
                  "properties": {
                    "bio": {
                      "type": "string",
                      "example": "1.Im a big fan of Hannah...\n\n                                              2.I love reading mostly baby sitters club...\n3.Im kind,caring wild,nice, funny,silly...\n\n                                              4. I want to be a police officer in the...\n5.My motto is be...\n6. My favorouite actress is Miley...\n\n                                              7.I am also outgoing,loud, not afraid to tell the truth about...\n"
                    },
                    "city": {
                      "type": "string",
                      "example": "Houston"
                    },
                    "country": {
                      "type": "string",
                      "example": "DE"
                    },
                    "country_state": {
                      "type": "string",
                      "example": "New York"
                    },
                    "phone": {
                      "type": "string",
                      "example": "5555555"
                    },
                    "contact_email": {
                      "type": "string",
                      "example": "user_contact@example.com"
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/user/videos": {
      "get": {
        "summary": "Get videos for current user",
        "tags": [
          "User::Videos"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "user_id",
            "in": "query",
            "type": "integer"
          },
          {
            "name": "channel_id",
            "in": "query",
            "type": "integer"
          },
          {
            "name": "room_id",
            "in": "query",
            "type": "integer"
          },
          {
            "name": "session_id",
            "in": "query",
            "type": "integer"
          },
          {
            "name": "start_at_from",
            "in": "query",
            "type": "string"
          },
          {
            "name": "start_at_to",
            "in": "query",
            "type": "string"
          },
          {
            "name": "end_at_from",
            "in": "query",
            "type": "string"
          },
          {
            "name": "end_at_to",
            "in": "query",
            "type": "string"
          },
          {
            "name": "duration_from",
            "in": "query",
            "type": "integer"
          },
          {
            "name": "duration_to",
            "in": "query",
            "type": "integer"
          },
          {
            "name": "show_on_home",
            "in": "query",
            "type": "boolean"
          },
          {
            "name": "order_by",
            "in": "query",
            "type": "string",
            "description": "Valid values are: \"id\", \"duration\", \"created_at\", \"updated_at\". Default: \"created_at\""
          },
          {
            "name": "order",
            "in": "query",
            "type": "string",
            "description": "Valid values are: \"asc\", \"desc\". Default: \"asc\""
          },
          {
            "name": "limit",
            "in": "query",
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "type": "integer"
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/user/ffmpegservice_accounts": {
      "get": {
        "summary": "All FfmpegserviceAccounts",
        "tags": [
          "User::FfmpegserviceAccounts"
        ],
        "description": "",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "studio_id",
            "in": "query",
            "type": "integer"
          },
          {
            "name": "studio_room_id",
            "in": "query",
            "type": "integer"
          },
          {
            "name": "order_by",
            "in": "query",
            "type": "string",
            "description": "Valid values are: 'id', 'custom_name', 'created_at', 'updated_at'. Default: 'created_at'"
          },
          {
            "name": "order",
            "in": "query",
            "type": "string",
            "description": "Valid values are: 'asc', 'desc'. Default: 'asc'"
          },
          {
            "name": "offset",
            "in": "query",
            "type": "integer"
          },
          {
            "name": "limit",
            "in": "query",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/user/ffmpegservice_accounts/{id}": {
      "get": {
        "summary": "Get FfmpegserviceAccount info",
        "tags": [
          "User::FfmpegserviceAccounts"
        ],
        "description": "",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      },
      "put": {
        "summary": "Update FfmpegserviceAccount",
        "tags": [
          "User::FfmpegserviceAccounts"
        ],
        "description": "",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          },
          {
            "name": "custom_name",
            "in": "query",
            "required": false,
            "type": "string",
            "example": "new title"
          },
          {
            "name": "studio_room_id",
            "in": "query",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      },
      "delete": {
        "summary": "Delete FfmpegserviceAccount",
        "tags": [
          "User::FfmpegserviceAccounts"
        ],
        "description": "",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/user/ffmpegservice_accounts/new": {
      "get": {
        "summary": "Reserve FfmpegserviceAccount",
        "tags": [
          "User::FfmpegserviceAccounts"
        ],
        "description": "",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "delivery_method",
            "in": "query",
            "type": "string",
            "required": true,
            "example": "push",
            "description": "Valid values are: 'pull', 'push'"
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/user/ffmpegservice_accounts/": {
      "post": {
        "summary": "Assign FfmpegserviceAccount",
        "tags": [
          "User::FfmpegserviceAccounts"
        ],
        "description": "",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "id",
            "in": "query",
            "type": "integer",
            "required": true
          },
          {
            "name": "custom_name",
            "in": "query",
            "required": true,
            "type": "string",
            "example": "Room 209 IP camera"
          },
          {
            "name": "current_service",
            "in": "query",
            "required": true,
            "type": "string",
            "example": "main",
            "description": "Valid values are: 'main', 'rtmp', 'ipcam'"
          },
          {
            "name": "studio_room_id",
            "in": "query",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/user/ffmpegservice_accounts/{id}/get_status": {
      "get": {
        "summary": "Get stream status of FfmpegserviceAccount",
        "tags": [
          "User::FfmpegserviceAccounts"
        ],
        "description": "",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "id",
            "in": "path",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    },
    "/api/v1/webhook/partner/subscriptions": {
      "post": {
        "summary": "Create or update service subscription",
        "tags": [
          "Webhook::Partner::Subscriptions"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "plan_id",
            "in": "query",
            "type": "string",
            "required": true
          },
          {
            "name": "subscription_id",
            "in": "query",
            "type": "string",
            "required": true
          },
          {
            "name": "customer_id",
            "in": "query",
            "type": "string",
            "required": true
          },
          {
            "name": "customer_email",
            "in": "query",
            "type": "string",
            "required": true
          },
          {
            "name": "status",
            "in": "query",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Found"
          }
        }
      }
    }
  }
}