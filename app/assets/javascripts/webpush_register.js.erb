if (<%= !Rails.env.production? %>) {
    const vapidPublicKey = new Uint8Array(<%= Base64.urlsafe_decode64(Rails.application.credentials.backend.dig(:initialize, :webpush, :public_key)).bytes %>);

// Register the serviceWorker script at /serviceworker.js from your server if supported
    if (navigator.serviceWorker) {
        navigator.serviceWorker.register('/serviceworker.js')
            .then(function (reg) {
                // When serviceWorker is supported, installed, and activated,
                // subscribe the pushManager property with the vapidPublicKey
                navigator.serviceWorker.ready.then((serviceWorkerRegistration) => {
                    serviceWorkerRegistration.pushManager
                        .subscribe({
                            userVisibleOnly: true,
                            applicationServerKey: vapidPublicKey
                        }).then(async function (sub) {
                        let headers = {
                            'Accept': 'application/json, text/plain, */*',
                            'Content-Type': 'application/json',
                        }
                        const token = window.getCookie('_unite_session_jwt')
                        if (token && token.length > 0) {
                            headers['Authorization'] = 'Bearer ' + token
                        }
                        await fetch('/api/v1/system/webpush', {
                            method: 'POST',
                            headers: headers,
                            body: JSON.stringify(sub)
                        }).then(response => response.json())
                    })
                });
            });
    }
// Otherwise, no push notifications :(
    else {
        console.error('Service worker is not supported in this browser');
    }
// application.js

// Let's check if the browser supports notifications
    if (!("Notification" in window)) {
        console.error("This browser does not support desktop notification");
    }

// Let's check whether notification permissions have already been granted
    else if (Notification.permission === "granted") {
        console.log("Permission to receive notifications has been granted");
    }

// Otherwise, we need to ask the user for permission
    else if (Notification.permission !== 'denied') {
        Notification.requestPermission(function (permission) {
            // If the user accepts, let's create a notification
            if (permission === "granted") {
                console.log("Permission to receive notifications has been granted");
            }
        });
    }
}