- content_for(:additional_meta_tags) do
  -#<!-- Core build with no theme, formatting, non-essential modules -->
  %script{src: "//cdn.quilljs.com/1.3.6/quill.js"}
  %link{href: "//cdn.quilljs.com/1.3.6/quill.snow.css", rel: "stylesheet"}

- content_for(:extra_body_classes, 'header-top')
- content_for(:page_title, 'Videos')
.row
  %aside.left-side-bar.col-md-3
    = render "dashboards/navigation/#{current_user.current_role}_nav"
  .col-md-9
    = render 'dashboards/navigation/video_on_demand_tabs'
    .tips-vue-app.padding-bottom-15
      = content_tag 'comp-wrapper', nil, data: { component: 'Tips', props: {type: 'replays', dashboard: true}}.to_json
    .main-content-section.MainForm_block_for_AffixSection
      - if @channels.blank?
        %p= I18n.t('dashboards.replays.no_items')
      - else
        .technicalPage__label.tips__info__wrapper
          Replays
          .tips-vue-app
            = content_tag 'comp-wrapper', nil, data: { component: 'InfoIcon', props: {type: 'replays'}}.to_json
      #channels
        :javascript
          window.channelViews = {}
        - @channels.each do |channel|
          - can_monetize_content = can?(:monetize_content_by_business_plan, channel.organization)
          - can_access_products = can?(:access_products_by_business_plan, channel.organization)
          - can_upload_videos = can?(:upload_videos_by_business_plan, channel)
          - can_edit_videos = can?(:edit_replay, channel)
          - can_transcode_videos = can?(:transcode_replay, channel) && can?(:transcode_videos_by_business_plan, channel)
          - can_delete_videos = can?(:delete_replay, channel)
          - ppv_enabled = Rails.application.credentials.global[:ppv]
          = content_for(:after_include_javascripts) do
            :javascript
              window.channelViews["#{channel.id}"] = new ChannelView({
                el: "#channel_#{channel.id}",
                channel_id: '#{channel.id}',
                autoshow: #{@channels.length == 1},
                ppv_enabled: #{ppv_enabled},
                can_edit_videos: #{can_edit_videos},
                can_transcode_videos: #{can_transcode_videos},
                can_delete_videos: #{can_delete_videos},
                can_upload_videos: #{can_upload_videos},
                can_monetize_content: #{can_monetize_content},
                can_access_products: #{can_access_products}});
              window.moveModalView = new MoveModalView({container: "#moveModalWrapper"});
          .line
          .channelSection{id: "channel_#{channel.id}", data: {channel_id: channel.id}}
            .rc-h
              = link_to '', channel.absolute_path, class: 'channelLogo avatarImg-MD', style:"background-image:url(#{channel.image_gallery_url})"
              .channelTitle
                = link_to channel.title, channel.absolute_path
              .channelDateCreate=channel.created_at.strftime('%m.%d.%Y')
              %a.rc-b-toggle.inline-block.vertical-midle.color-grey.margin-left-15{href: '#'}
                .VideoClientIcon-angle-downF
            .channelSectionBody.hidden
      #moveModalWrapper
        -#%a{class: "#", "data-target" => "#editVideo", "data-toggle" => "modal"} open modal

%script(type="application/xhtml+xml" id="replaysCollectionTmpl")
  != render 'dashboards/replays/replays_collection'
%script(type="application/xhtml+xml" id="replayItemTmpl")
  != render 'dashboards/replays/replay_item'
%script(type="application/xhtml+xml" id="replaysGroupActionsTmpl")
  != render 'dashboards/replays/group_actions'
%script(type="application/xhtml+xml" id="filterActionsTmpl")
  != render 'dashboards/replays/filter_actions'
%script(type="application/xhtml+xml" id="showMoreTmpl")
  != render 'dashboards/replays/show_more'
%script(type="application/xhtml+xml" id="editModalTmpl")
  != render 'dashboards/replays/edit_modal'
%script(type="application/xhtml+xml" id="moveModalTmpl")
  != render 'dashboards/shared/move_modal'

:css
  input[type="number"]::-webkit-outer-spin-button, input[type="number"]::-webkit-inner-spin-button {
    -webkit-appearance: none;
    margin: 0;
  }
  input[type="number"] {
    -moz-appearance: textfield;
  }
#editVideo.modal.fade.editVideo{aria: {hidden: true}, role: :dialog, tabindex: -1, data: {backdrop: :static}}
  .unobtrusive-flash-container
  .modal-dialog
    .modal-content
      = render partial: 'become_presenter_steps/close_modal'
      .modal-body

:javascript
  window.videoDefaultImg = "#{asset_url('videoDefaultImg.jpg')}";
